<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    
    <!-- BUSY INDICATORS STYLES FOR SILVERLIGHT -->
    <!-- Created by Marcin Stypulski -->
    <!-- samples: http://bit.ly/H68Hyv -->
    <!-- Website: http://marcinstypulski.com -->
    <!-- email: marcin.stypulski@gmail.com -->

    <Style x:Key="PhoneIndicatorStyle" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Margin" Value="8,0,8,8"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid4">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="220"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid3">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.7" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="220"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="220"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="220"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="220"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid4">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid3">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.7" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid2">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1">
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.9" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="grid4">
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="grid5">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="20"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="busycontent">
                            <Grid x:Name="grid5" Width="535" HorizontalAlignment="Center" Height="50" VerticalAlignment="Center" Margin="0" RenderTransformOrigin="0.5,0.5">
                                <Grid.RenderTransform>
                                    <CompositeTransform/>
                                </Grid.RenderTransform>
                                <Grid x:Name="grid" HorizontalAlignment="Left" Margin="243,0,0,0" RenderTransformOrigin="0.5,0.5" Width="8" Height="8">
                                    <Grid.RenderTransform>
                                        <CompositeTransform TranslateX="-221"/>
                                    </Grid.RenderTransform>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Margin="0" Width="8" HorizontalAlignment="Center">
                                        <Ellipse.Effect>
                                            <BlurEffect/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8"/>
                                </Grid>
                                <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="223,0,0,0" Width="8" RenderTransformOrigin="0.5,0.5" Height="8">
                                    <Grid.RenderTransform>
                                        <CompositeTransform TranslateX="-221"/>
                                    </Grid.RenderTransform>
                                    <Ellipse Margin="0" StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8">
                                        <Ellipse.Effect>
                                            <BlurEffect/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8"/>
                                </Grid>
                                <Grid x:Name="grid2" Margin="263,0,262,0" RenderTransformOrigin="0.5,0.5" Width="8" Height="8">
                                    <Grid.RenderTransform>
                                        <CompositeTransform TranslateX="-221"/>
                                    </Grid.RenderTransform>
                                    <Ellipse Margin="0" StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8">
                                        <Ellipse.Effect>
                                            <BlurEffect/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8"/>
                                </Grid>
                                <Grid x:Name="grid3" HorizontalAlignment="Right" Margin="0,0,242,0" Width="8" RenderTransformOrigin="0.5,0.5" Height="8">
                                    <Grid.RenderTransform>
                                        <CompositeTransform TranslateX="-221"/>
                                    </Grid.RenderTransform>
                                    <Ellipse Margin="0" StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8">
                                        <Ellipse.Effect>
                                            <BlurEffect/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8"/>
                                </Grid>
                                <Grid x:Name="grid4" HorizontalAlignment="Right" Margin="0,0,222,0" Width="8" RenderTransformOrigin="0.5,0.5" Height="8">
                                    <Grid.RenderTransform>
                                        <CompositeTransform TranslateX="-221"/>
                                    </Grid.RenderTransform>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Margin="0" Width="8" VerticalAlignment="Center">
                                        <Ellipse.Effect>
                                            <BlurEffect/>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                    <Ellipse StrokeThickness="0" Fill="{TemplateBinding Foreground}" Height="8" Width="8"/>
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding BusyContent}" VerticalAlignment="Center" Margin="0,33,0,0"/>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CirclePhoneIndicator" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Margin" Value="8,0,8,8"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard x:Name="AnimCirclePhone" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle4">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle5">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle6">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle8">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle9">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle10">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="rectangle11">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="90"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="135"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="225"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="270"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="315"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle4">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle5">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.8" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle6">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.6" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.4" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle8">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle9">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle10">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle11">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.4" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.6" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="busycontent">
                            <Grid Margin="0">
                                <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Width="44" Height="44" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <CompositeTransform/>
                                    </Grid.RenderTransform>
                                    <Rectangle x:Name="rectangle4" Fill="{TemplateBinding Foreground}" Height="7" Margin="19,0,18,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle5" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="45"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle6" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="90"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle7" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="135"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle8" Fill="{TemplateBinding Foreground}" Height="7" Margin="19,0,18,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="180"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle9" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="225"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle10" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="270"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="rectangle11" Fill="{TemplateBinding Foreground}" Height="7" Margin="18.5,0" VerticalAlignment="Top" RadiusX="20" RadiusY="20" RenderTransformOrigin="0.491,3.089" UseLayoutRounding="False" d:LayoutRounding="Auto">
                                        <Rectangle.RenderTransform>
                                            <CompositeTransform Rotation="315"/>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,65,0,0" Text="{TemplateBinding BusyContent}"/>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DoubleCircleStyle" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Margin" Value="8,0,8,8"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">

                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="0:0:1" To="360" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path2" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0:0:1" To="-360" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path3" d:IsOptimized="True"/>
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="{TemplateBinding Background}" Opacity="0.5"/>
                        <ContentPresenter x:Name="busycontent">
                            <Grid Margin="0">
                                <Grid x:Name="grid" Width="53" Height="53" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path x:Name="path2" Data="M26.5,5 C14.625878,5 5,14.625878 5,26.5 C5,38.374123 14.625878,48 26.5,48 C38.374123,48 48,38.374123 48,26.5 C48,14.625878 38.374123,5 26.5,5 z M26.5,0 C41.135548,0 53,11.864454 53,26.5 C53,41.135548 41.135548,53 26.5,53 C11.864454,53 0,41.135548 0,26.5 C0,11.864454 11.864454,0 26.5,0 z" Stretch="Fill" UseLayoutRounding="False" RenderTransformOrigin="0.5,0.5" Fill="{TemplateBinding Foreground}">
                                        <Path.RenderTransform>
                                            <CompositeTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="path3" Data="M26.5,5 C14.625878,5 5,14.625878 5,26.5 C5,38.374123 14.625878,48 26.5,48 C38.374123,48 48,38.374123 48,26.5 C48,14.625878 38.374123,5 26.5,5 z M26.5,0 C41.135548,0 53,11.864454 53,26.5 C53,41.135548 41.135548,53 26.5,53 C11.864454,53 0,41.135548 0,26.5 C0,11.864454 11.864454,0 26.5,0 z" Margin="10" Stretch="Fill" UseLayoutRounding="False" Width="33" Height="33" RenderTransformOrigin="0.5,0.5" Fill="{TemplateBinding BorderBrush}">
                                        <Path.RenderTransform>
                                            <CompositeTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,65,0,0" Text="{TemplateBinding BusyContent}"/>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CircleScaleIndicatorStyle" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Margin" Value="8,0,8,8"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard x:Name="AnimCircle3" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="grid7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="grid7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="grid7">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="360"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="180"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="{TemplateBinding Background}" Opacity="0.5"/>
                        <ContentPresenter x:Name="busycontent">
                            <Grid Margin="0">
                                <Grid x:Name="grid7" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Width="43" Height="43">
                                    <Grid.RenderTransform>
                                        <CompositeTransform/>
                                    </Grid.RenderTransform>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="7" Margin="0,10,0,0" VerticalAlignment="Top" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="7" Margin="11,0,0,0" VerticalAlignment="Top" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="7" Margin="0,0,10,0" VerticalAlignment="Top" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="7" Margin="0,10,0,0" VerticalAlignment="Top" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="7" Margin="0,0,0,12" VerticalAlignment="Bottom" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Height="7" Margin="11,0,0,0" VerticalAlignment="Bottom" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="7" Margin="0,0,10,0" VerticalAlignment="Bottom" Width="7" RadiusX="20" RadiusY="20"/>
                                    <Rectangle Fill="{TemplateBinding Foreground}" HorizontalAlignment="Right" Height="7" Margin="0,0,0,12" VerticalAlignment="Bottom" Width="7" RadiusX="20" RadiusY="20"/>
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,65,0,0" Text="{TemplateBinding BusyContent}"/>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleIndicator" TargetType="toolkit:BusyIndicator">
        <Setter Property="BusyContent" Value="Please wait..."/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="White"/>
                    <Setter Property="Opacity" Value="0.5"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ProgressBarStyle">
            <Setter.Value>
                <Style TargetType="ProgressBar">
                    <Setter Property="IsIndeterminate" Value="True"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="Margin" Value="8,0,8,8"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toolkit:BusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">

                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" Storyboard.TargetName="path1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="360"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="{TemplateBinding Background}"/>
                        <ContentPresenter x:Name="busycontent">
                            <Grid Margin="0">
                                <Grid x:Name="grid6" RenderTransformOrigin="0.5,0.5" Width="53" Height="53" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Grid.RenderTransform>
                                        <CompositeTransform/>
                                    </Grid.RenderTransform>
                                    <Path x:Name="path" Data="M26.5,5 C14.625878,5 5,14.625878 5,26.5 C5,38.374123 14.625878,48 26.5,48 C38.374123,48 48,38.374123 48,26.5 C48,14.625878 38.374123,5 26.5,5 z M26.5,0 C41.135548,0 53,11.864454 53,26.5 C53,41.135548 41.135548,53 26.5,53 C11.864454,53 0,41.135548 0,26.5 C0,11.864454 11.864454,0 26.5,0 z" Stretch="Fill" UseLayoutRounding="False" Fill="White" Stroke="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <CompositeTransform/>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="path1" Data="M26.10096,0 C39.135746,2.3841858E-07 49.972462,9.4110384 52.187057,21.809059 L52.212196,21.960787 L50.184113,26.500002 L47.213848,22.426367 L47.164154,22.167 C45.159363,12.369812 36.490818,5 26.10096,5 C15.711102,5 7.0425577,12.369812 5.0377626,22.167 L5.0009041,22.359383 L2.8509645,20.250008 L0,21.898756 L0.014861107,21.809059 C2.2294593,9.4110384 13.066177,2.3841858E-07 26.10096,0 z" Fill="{TemplateBinding Foreground}" Height="26.5" Margin="1,0" Stretch="Fill" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Center" RenderTransformOrigin="0.5,1">
                                        <Path.RenderTransform>
                                            <CompositeTransform Rotation="2160.099"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" Text="{TemplateBinding BusyContent}" VerticalAlignment="Bottom" Margin="0,0,0,14"/>
                            </Grid>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 원하는 Indicator스타일 이름을 HDIMSIndicator로 바꾸면 적용이 됌 -->
    <Style x:Key="HDIMSIndicator" BasedOn="{StaticResource CircleScaleIndicatorStyle}" TargetType="toolkit:BusyIndicator" >
        <Setter Property="BusyContent" Value="잠시만 기다려 주세요..."/>
        <Setter Property="Background" Value="White"/>
    </Style>
    
</ResourceDictionary>