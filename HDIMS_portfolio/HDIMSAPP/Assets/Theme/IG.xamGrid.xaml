<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igBase="http://schemas.infragistics.com/xaml"
    xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:igPrimBase="http://schemas.infragistics.com/xaml/primitives"
    mc:Ignorable="d"> 

    <!--__________________________________ BRUSHES START __________________________________-->
    <SolidColorBrush x:Key="GridBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="GridBorderBrush" Color="#FFB1B1B1"/>

    <!--__________________________________ Header Brushes __________________________________-->
    <LinearGradientBrush x:Key="HeaderNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,0.97">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF757575"/>
                <GradientStop Offset="0.93" Color="#FF505050"/>
                <GradientStop Offset="0.98" Color="#FF4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,0.97">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF4f4f4f"/>
                <GradientStop Offset="0.93" Color="#FF727272"/>
                <GradientStop Offset="0.99" Color="#FF757575"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="#FF535353"/>
    <LinearGradientBrush x:Key="HeaderMovingBackgroundBrush" StartPoint="0,0" EndPoint="0,0.97">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#7F757575"/>
                <GradientStop Offset="0.93" Color="#7F505050"/>
                <GradientStop Offset="0.98" Color="#7F4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderMovingBorderBrush" Color="#AF2788B1"/>
    <SolidColorBrush x:Key="FooterBackgroundBrush" Color="#FFFFFFFF"/>

    <!--__________________________________ Cell Brushes __________________________________-->
    <SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FFFFFFFF"/>

    <LinearGradientBrush x:Key="CellItemHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1.02">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CellItemHoverBorderBrush" Color="#ff2788b1"/>

    <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="#FFEBEBEB"/>
    <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="#ff2788B1"/>
    <LinearGradientBrush x:Key="CellItemSelectedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="0.97" Color="#FFE9E9E9"/>
                <GradientStop Offset="1" Color="#FFe9e9e9"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="CellRowHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AddNewRowBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SummaryRowExpansionIndicatorBrush" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="SummaryRowBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RowSelectorBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RowSelectorBorderBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RowSelectorActiveBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RowSelectorActiveBorderBrush" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="ExpansionCellBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ExpansionCellBorderBrush" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ExpansionCellHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="0.97" Color="#FFE9E9E9"/>
                <GradientStop Offset="0.99" Color="#FFe9e9e9"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ExpansionCellHoverBorderBrush" Color="#ff2788B1"/>
    <SolidColorBrush x:Key="ExpansionIndicatorForegroundBrush" Color="#FF4E4E4E"/>

    <!--__________________________________ DataBar Brushes __________________________________-->
    <LinearGradientBrush x:Key="DataBarBidirectionNegativeBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#ffff5959"/>
                <GradientStop Offset="1" Color="#ffcc0000"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataBarBidirectionPositiveBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF757575"/>
                <GradientStop Offset="0.93" Color="#FF505050"/>
                <GradientStop Offset="0.98" Color="#FF4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ Pager Brushes __________________________________-->
    <SolidColorBrush x:Key="PagerAreaBackground" Color="#FFEBEBEB"/>
    <SolidColorBrush x:Key="PagerItemSelectedBorderBrush" Color="#ff2788B1"/>
    <LinearGradientBrush x:Key="PagerGlyphBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF444444"/>
                <GradientStop Offset="0.97" Color="#FF747474"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PagerButtonBorderBrush" Color="#ff2788B1"/>
    <LinearGradientBrush x:Key="PagerButtonHoverBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#ccffffff"/>
                <GradientStop Offset="0.96" Color="#ccE9E9E9"/>
                <GradientStop Offset="0.98" Color="#cce9e9e9"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PagerButtonPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ GroupBy Brushes __________________________________-->
    <LinearGradientBrush x:Key="GroupByBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="0.97" Color="#FFE0E0E0"/>
                <GradientStop Offset="0.98" Color="#FFe0e0e0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByCloseBtnBorderBrush" Color="#FF535353"/>
    <LinearGradientBrush x:Key="GroupByCloseBtnBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF757575"/>
                <GradientStop Offset="0.93" Color="#FF505050"/>
                <GradientStop Offset="0.98" Color="#FF4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GroupByColumnLayoutHeaderFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GroupByExpanderHoverBorderBrush" Color="#FFEBEBEB"/>
    <LinearGradientBrush x:Key="GroupByExpanderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByExpanderHoverHighlightBrush" Color="Transparent"/>

    <LinearGradientBrush x:Key="GroupByExpanderPressedBackgroundBrush" StartPoint="0.684,-0.039" EndPoint="0.684,0.977">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF2686ae"/>
                <GradientStop Offset="0.98" Color="#FF3AB6EA"/>
                <GradientStop Offset="1" Color="#FF3bb7eb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByExpanderPressedBorderBrush" Color="#FF2788b1"/>

    <SolidColorBrush x:Key="GroupByExpanderPressedHighlightBrush" Color="Transparent"/>

    <LinearGradientBrush x:Key="GroupByHeaderBackgroundBrush" StartPoint="0.56,0.04" EndPoint="0.56,0.97">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF757575"/>
                <GradientStop Offset="0.93" Color="#FF505050"/>
                <GradientStop Offset="0.98" Color="#FF4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByHeaderBorderBrush" Color="#ff535353"/>

    <!--__________________________________ Foreground Brushes __________________________________-->
    <SolidColorBrush x:Key="HeaderNormalForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="HeaderHoverForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CellItemNormalForegroundBrush" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="CellItemHoverForegroundBrush" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="CellItemSelectedForegroundBrush" Color="#FF4E4E4E"/>

    <!--__________________________________ Glyph and Icon Brushes __________________________________-->
    <SolidColorBrush x:Key="HeaderCellGlyphBrush" Color="#FFB4B4B4"/>
    <SolidColorBrush x:Key="FilterOperatorGlyphBrush" Color="#FF4E4E4E"/>
    <SolidColorBrush x:Key="MoveIndicatorBrush" Color="#FF2788b1"/>
    <SolidColorBrush x:Key="ResizeIndicatorBrush" Color="#59000000"/>

    <!--__________________________________ PART_Popup Brushes __________________________________-->
    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff"/>
                <GradientStop Offset="0.97" Color="#FFE0E0E0"/>
                <GradientStop Offset="0.98" Color="#FFe0e0e0"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PopupBorderBrush" Color="#FFB1B1B1"/>

    <!--__________________________________ Filter Brushes (10.1 Feature) __________________________________-->
    <LinearGradientBrush x:Key="FilterSelectionItemBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="FilterSelectionItemBorderBrush" Color="#FF2788b1"/>
    <SolidColorBrush x:Key="FilterSelectionItemHighlightBrush" Color="Transparent"/>

    <SolidColorBrush x:Key="FilterSelectionVerticalBrush" Color="#FFDFDFDF"/>
    <SolidColorBrush x:Key="FilterCustomDialogBackgroundBrush" Color="#ffCFDDEE"/>

    <!--__________________________________ MenuItems Brushes (11.2 Feature) _____________________________________________________-->

    <LinearGradientBrush x:Key="MenuItemMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MenuItemMouseOverBorder" Color="#FF2788B1" />
    <SolidColorBrush x:Key="MenuItemHighlighted" Color="#FFCAE4ED"/>
    <SolidColorBrush x:Key="MenuItemHighlightedBorder" Color="#FF3ab5e9"/>

    <SolidColorBrush x:Key="MenuItemVerticalBrush" Color="#FFF2F4F5" />
    <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="#FFFFFFFF" />

    <LinearGradientBrush x:Key="MenuPopupOuterBorderBrush" StartPoint="0.5,0" EndPoint="0.5,0.1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFa2adb8" Offset="0"/>
                <GradientStop Color="#FF8498a8" Offset="0.3790000081062317"/>
                <GradientStop Color="#FF718496" Offset="0.3799999952316284"/>
                <GradientStop Color="#FF617583" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ ColumnChooser Brushes (10.2 Feature) __________________________________-->
    <SolidColorBrush x:Key="ColumnChooserDialogBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ColumnChooserDialogBorderBrush" Color="#FF9B9B9B"/>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="0" Color="#FF3bb7eb"/>
        <GradientStop Offset="0.98" Color="#FF2686ae"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnHoverBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnPressedBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF2686ae"/>
                <GradientStop Offset="1" Color="#FF3bb7eb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ Other Brushes __________________________________-->
    <SolidColorBrush x:Key="FixedBorderFillBrush" Color="#FF646464"/>
    <SolidColorBrush x:Key="FocusBrush" Color="#FF2788b1"/>
    <SolidColorBrush x:Key="SeparatorBrush" Color="#FFB1B1B1"/>
    <SolidColorBrush x:Key="ToolTipBorderBrush" Color="#FF767676"/>
    <LinearGradientBrush x:Key="ToolTipBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFfbfcfd"/>
                <GradientStop Offset="1" Color="#FFd0def1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <igPrim:CultureValueConverter x:Key="CultureConverter"></igPrim:CultureValueConverter>
    <igPrim:SummaryResultFormatStringValueConverter x:Key="SDFormatStringConverter"></igPrim:SummaryResultFormatStringValueConverter>
    <igPrim:VisibilityToBoolValueConverter x:Key="VisToBool"/>

    <!--=========================================================================================================== -->
    <!--_________________________________________ INBOX CONTROL STYLES _____________________________________________-->
    <!--=========================================================================================================== -->
    <SolidColorBrush x:Key="ButtonNormalBorderBrush" Color="#FF535353"/>
    <LinearGradientBrush x:Key="ButtonNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF757575"/>
                <GradientStop Offset="0.93" Color="#FF505050"/>
                <GradientStop Offset="0.98" Color="#FF4f4f4f"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="#FF2788b1"/>
    <LinearGradientBrush x:Key="ButtonHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="#FF2788b1"/>
    <LinearGradientBrush x:Key="ButtonPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF2686ae"/>
                <GradientStop Offset="0.98" Color="#FF3bb7eb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonFocusedBorderBrush" Color="#FF3ab5e9"/>
    <LinearGradientBrush x:Key="ButtonFocusedBackgroundBrush" StartPoint="0.58,0" EndPoint="0.58,1.00">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF494949"/>
                <GradientStop Offset="0.99" Color="#FF333333"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonDisabledBorderBrush" Color="#FF9B9B9B"/>
    <LinearGradientBrush x:Key="ButtonDisabledBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFd3d3d3"/>
                <GradientStop Offset="0.96" Color="#FFA2A2A2"/>
                <GradientStop Offset="0.99" Color="#FFa1a1a1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="scrollBarTrackFill" Center="0,0.5" GradientOrigin="0,0.5" RadiusX="0.5" RadiusY="1">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFe3e3e3"/>
                <GradientStop Offset="0.36" Color="#FFe6e6e6"/>
                <GradientStop Offset="1" Color="#FFededed"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="horizontalScrollBarTrackFill" Center="0.5,0" GradientOrigin="0.5,0" RadiusX="0.5" RadiusY="1">
        <RadialGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFe3e3e3"/>
                <GradientStop Offset="0.36" Color="#FFe6e6e6"/>
                <GradientStop Offset="1" Color="#FFededed"/>
            </GradientStopCollection>
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="ButtonGlyphNormalBrush" Color="#FF666666"/>
    <LinearGradientBrush x:Key="ButtonGlyphHoverBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonGlyphPressedBrush" Color="#FF22789D"/>

    <SolidColorBrush x:Key="ScrollBarThumbNormalBorderBrush" Color="#FF616161"/>
    <LinearGradientBrush x:Key="ScrollbarThumbNormalBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF7a7a7a"/>
                <GradientStop Offset="0.94" Color="#FF575757"/>
                <GradientStop Offset="0.99" Color="#FF565656"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ScrollBarThumbHoverBorderBrush" Color="#FF298db6"/>
    <LinearGradientBrush x:Key="ScrollBarThumbHoverBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ScrollBarThumbPressedBorderBrush" Color="#FF298db6"/>
    <LinearGradientBrush x:Key="ScrollBarThumbPressedBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF2686ae"/>
                <GradientStop Offset="0.98" Color="#FF3bb7eb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HorizontalScrollBarThumbNormalBorderBrush" Color="#FF616161"/>
    <LinearGradientBrush x:Key="HorizontalScrollbarThumbNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF7a7a7a"/>
                <GradientStop Offset="0.94" Color="#FF575757"/>
                <GradientStop Offset="0.99" Color="#FF565656"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HorizontalScrollBarThumbHoverBorderBrush" Color="#FF298db6"/>
    <LinearGradientBrush x:Key="HorizontalScrollBarThumbHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF3bb7eb"/>
                <GradientStop Offset="0.98" Color="#FF2686ae"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="HorizontalScrollBarThumbPressedBorderBrush" Color="#FF298db6"/>
    <LinearGradientBrush x:Key="HorizontalScrollBarThumbPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF2686ae"/>
                <GradientStop Offset="0.98" Color="#FF3bb7eb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="Cyan0" Color="#FF84D1F1"/>
    <SolidColorBrush x:Key="Cyan1" Color="#FF16A9E7"/>
    <SolidColorBrush x:Key="Cyan2" Color="#FF2788B1"/>

    <SolidColorBrush x:Key="Gray0" Color="#FFE7E7E7"/>
    <SolidColorBrush x:Key="Gray1" Color="#FFC9C9C9"/>
    <SolidColorBrush x:Key="Gray2" Color="#FF9B9B9B"/>
    <SolidColorBrush x:Key="Gray3" Color="#FF7C7C7C"/>
    <SolidColorBrush x:Key="Gray4" Color="#FF3E3E3E"/>

    <LinearGradientBrush x:Key="Button_NormalState" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF676767" Offset="0" />
                <GradientStop Color="#FF3e3e3e" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button_Hover" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF3bb7eb" Offset="0" />
                <GradientStop Color="#FF2686ae" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button_Pressed" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF3bb7eb" Offset="1" />
                <GradientStop Color="#FF2686ae" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button_Focused" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF505050" Offset="0" />
                <GradientStop Color="#FF333333" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Button_Disabled" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFd3d3d3" Offset="0" />
                <GradientStop Color="#FFa1a1a1" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightGrayGradient" StartPoint="0.6848234953703703,-0.0390625" EndPoint="0.6848234953703703,0.9777139734338831">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFffffff" Offset="0" />
                <GradientStop Color="#FFe9e9e9" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="TextBoxGradient" StartPoint="0.505,0.469" EndPoint="0.505,-0.023">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFffffff" Offset="0.377" />
                <GradientStop Color="#FFe9e9e9" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VertThumb_Hover" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF3bb7eb" Offset="0" />
                <GradientStop Color="#FF2686ae" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="VertThumb_Pressed" StartPoint="0.199,0.469" EndPoint="1.17,0.469">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF3bb7eb" Offset="1" />
                <GradientStop Color="#FF2686ae" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <RadialGradientBrush x:Key="CheckBoxFill" RadiusX="0.916" RadiusY="0.667" Center="0.556,0.654" GradientOrigin="0.556,0.654">
        <GradientStop Color="White" Offset="0.645"/>
        <GradientStop Color="#FFD6D6D6" Offset="1"/>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="LightBrush1" Color="#FF44ACD6"/>
    <SolidColorBrush x:Key="LightBrush2" Color="#FF494949"/>
    <SolidColorBrush x:Key="LightBrush3" Color="#FFa8a8a8"/>
    <SolidColorBrush x:Key="LightBrush4" Color="#FF216e99"/>
    <SolidColorBrush x:Key="LightBrush5" Color="#FFa4ba29"/>
    <SolidColorBrush x:Key="LightBrush6" Color="#FFfdbd48"/>
    <SolidColorBrush x:Key="LightBrush7" Color="#FFff6a6f"/>
    <SolidColorBrush x:Key="LightBrush8" Color="#FF9e73c1"/>
    <SolidColorBrush x:Key="LightBrush9" Color="#FFf79036"/>
    <SolidColorBrush x:Key="LightBrush10" Color="#FF793bac"/>
    <SolidColorBrush x:Key="LightBrush11" Color="#FF48892d"/>
    <SolidColorBrush x:Key="LightBrush12" Color="#FFd3404b"/>

    <SolidColorBrush x:Key="DarkBrush1" Color="#FF2380A8"/>
    <SolidColorBrush x:Key="DarkBrush2" Color="#FF333333"/>
    <SolidColorBrush x:Key="DarkBrush3" Color="#FF808080"/>
    <SolidColorBrush x:Key="DarkBrush4" Color="#FF185170"/>
    <SolidColorBrush x:Key="DarkBrush5" Color="#FF879922"/>
    <SolidColorBrush x:Key="DarkBrush6" Color="#FFF7AA1B"/>
    <SolidColorBrush x:Key="DarkBrush7" Color="#FFff6a6f"/>
    <SolidColorBrush x:Key="DarkBrush8" Color="#FF8856b1"/>
    <SolidColorBrush x:Key="DarkBrush9" Color="#FFe3720c"/>
    <SolidColorBrush x:Key="DarkBrush10" Color="#FF582c7d"/>
    <SolidColorBrush x:Key="DarkBrush11" Color="#FF386a23"/>
    <SolidColorBrush x:Key="DarkBrush12" Color="#FFc62d36"/>
	
	
	
	<!--__________________________________ Filter Menu Brushes _____________________________________________-->
    
    <LinearGradientBrush x:Key="MenuItemCheckMarkBackgroundBrush"
                    StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF6C7BA3" Offset="0"/>
        	<GradientStop Color="#FF444E66" Offset="1"/>
    </LinearGradientBrush>

    
	
	<!--_____________________________Date filter CoboBoxItems__________________________-->
	
	<SolidColorBrush x:Key="DropDownStroke_Normal" Color="#FF3E3E3E" />
    <SolidColorBrush x:Key="DropDownStroke_Hover" Color="#FF1C82AD" />
    <SolidColorBrush x:Key="DropDownStroke_Disabled" Color="#FFABABAB" />
    <SolidColorBrush x:Key="DropDownStroke_Pressed" Color="#FF1C82AD" />
    <SolidColorBrush x:Key="DropDownStroke_Focused" Color="#FF3AB5E9" />
    <LinearGradientBrush x:Key="DropDown_Hover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF3bb7eb" />
        <GradientStop Color="#FF2686ae" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Pressed" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="#FF3bb7eb" Offset="1" />
        <GradientStop Color="#FF2686ae" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Focused" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="#FF505050" />
        <GradientStop Color="#FF333333" Offset="1" />
    </LinearGradientBrush>
	<SolidColorBrush x:Key="CellItemActiveBorderBrush" Color="#FF3AB5E9" />
	
	
	
	<!--____________________________MenuItem CheckBox___________________________________-->
	
	 <Style x:Key="MenuItemCheckMarkCheckBoxStyle"
           TargetType="CheckBox">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="MinWidth"
                Value="18" />
        <Setter Property="MinHeight"
                Value="18" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="0.55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                       <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
							<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="{TemplateBinding Background}" FlowDirection="LeftToRight" Height="10" Margin="1,1,0,1.5" Stretch="Fill" Width="10.5"/>
                    </Grid>
					</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource MenuItemCheckMarkBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
	
	

    <!--=========================================================================================================== -->
    <!--_________________________________________ IGTheme Scrollbar Style __________________________________________-->
    <!--=========================================================================================================== -->

    <Style x:Key="igThemeScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="MinWidth" Value="17"/>
        <Setter Property="MinHeight" Value="17"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="horizontalIncreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphHoverBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="horizontalIncreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphPressedBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="horizontalIncreaseGlyph" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path x:Name="horizontalIncreaseGlyph"
											Width="4"
											Height="8"
											Data="M 0,0 C0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 z"
											Fill="{StaticResource ButtonGlyphNormalBrush}"
											Stretch="Fill"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="horizontalDecreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphHoverBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="horizontalDecreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphPressedBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="horizontalDecreaseGlyph" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path x:Name="horizontalDecreaseGlyph"
											Width="4"
											Height="8"
											Data="M 4,0 C4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 z"
											Fill="{StaticResource ButtonGlyphNormalBrush}"
											Stretch="Fill"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="#00000000">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="increaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphHoverBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="increaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphPressedBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="increaseGlyph" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path
											x:Name="increaseGlyph"
											Width="8"
											Height="4"
											Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z"
											Fill="{StaticResource ButtonGlyphNormalBrush}"
											Stretch="Fill"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="#00000000">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="decreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphHoverBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="decreaseGlyph" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonGlyphPressedBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="decreaseGlyph" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Path x:Name="decreaseGlyph"
											Width="8"
											Height="4"
											Data="M 0,3 C0,3 0,4 0,4 0,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
											Fill="#666666"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbHoverBorderBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ScrollBarThumbPressedBorderBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Bd" Fill="{StaticResource ScrollbarThumbNormalBackgroundBrush}" RadiusY="4" RadiusX="4" Width="8" Stroke="{StaticResource ScrollBarThumbNormalBorderBrush}" StrokeThickness="1"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalScrollBarThumbHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalScrollBarThumbHoverBorderBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalScrollBarThumbPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalScrollBarThumbPressedBorderBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation To=".35" Storyboard.TargetName="Bd" Storyboard.TargetProperty="Opacity"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="Bd" Fill="{StaticResource HorizontalScrollbarThumbNormalBackgroundBrush}" RadiusY="4" RadiusX="4" Height="8" Stroke="{StaticResource HorizontalScrollBarThumbNormalBorderBrush}"/>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.ColumnSpan="5" Fill="{StaticResource horizontalScrollBarTrackFill}"/>
                            <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="1" Template="{StaticResource HorizontalDecrementTemplate}" Width="16"/>
                            <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0"/>
                            <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" MinWidth="18" Template="{StaticResource HorizontalThumbTemplate}" Width="18"/>
                            <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="1" Template="{StaticResource HorizontalIncrementTemplate}" Width="16"/>
                        </Grid>
                        <Grid x:Name="VerticalRoot" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle Grid.RowSpan="5" Fill="{StaticResource scrollBarTrackFill}"/>
                            <RepeatButton x:Name="VerticalSmallDecrease" Height="16" IsTabStop="False" Interval="50" Margin="1" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}"/>
                            <RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}"/>
                            <Thumb x:Name="VerticalThumb" Height="18" MinHeight="18" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}"/>
                            <RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton x:Name="VerticalSmallIncrease" Height="16" IsTabStop="False" Interval="50" Margin="1" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________ig ScrollViewer___________________________-->

    <Style x:Key="igThemeScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>        
        <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                            <Rectangle Grid.Column="1" Fill="#FFECECEC" Grid.Row="1"/>
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="18" Style="{StaticResource igThemeScrollBarStyle}" />
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="18" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource igThemeScrollBarStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="igButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" RadiusY="2" RadiusX="2" Stroke="{StaticResource ButtonNormalBorderBrush}" StrokeThickness="1" Fill="{StaticResource ButtonNormalBackgroundBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="igThemeRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="check">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Bd">
                            <Ellipse
										Width="13"
										Height="13"
										Fill="#f4f4f4"
										Stroke="#8e8f8f"
										StrokeThickness="1"/>
                            <Ellipse
										Width="9"
										Height="9"
										Stroke="#aeb3b9"
										StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFd8dbde"/>
                                                <GradientStop Offset="1" Color="#FFf6f6f6"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="hoverBd" Visibility="Collapsed">
                            <Ellipse
										Width="13"
										Height="13"
										Fill="#def9fa"
										Stroke="#5586a3"
										StrokeThickness="1"/>
                            <Ellipse
										Width="9"
										Height="9"
										Stroke="#79c6f9"
										StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFb1dffd"/>
                                                <GradientStop Offset="1" Color="#FFe7f7fe"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="pressedBd" Visibility="Collapsed">
                            <Ellipse
											Width="13"
											Height="13"
											Fill="#c2e4f6"
											Stroke="#2c628b"
											StrokeThickness="1"/>
                            <Ellipse
											Width="9"
											Height="9"
											Stroke="#62baf7"
											StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FF9dd5fc"/>
                                                <GradientStop Offset="0.80" Color="#FFe0f4fe"/>
                                                <GradientStop Offset="1" Color="#FFe0f4fe"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="check" Visibility="Collapsed">
                            <Ellipse
												Width="9"
												Height="9"
												Stroke="#285e87"
												StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FF2fa8d5"/>
                                                <GradientStop Offset="0.80" Color="#FF1e698f"/>
                                                <GradientStop Offset="1" Color="#FF1e698f"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse
												Width="7"
												Height="7"
												Stroke="#599dc4"
												StrokeThickness="1"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
            <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
            <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
            <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
            <Border Background="#FFDC000C" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="igThemeListBoxStyle" TargetType="igPrim:GridSortableListBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBox">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource igThemeScrollViewerStyle}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="igTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="{StaticResource Gray4}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentElement" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="onlyread" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="validationError" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="validationError" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Gray2}" StrokeThickness="1" Margin="0"/>
                        <Rectangle x:Name="hover" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Cyan0}" StrokeThickness="1" Margin="0" Opacity="0"/>
                        <Rectangle x:Name="onlyread" Fill="{StaticResource Gray0}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Gray2}" StrokeThickness="1" Margin="0" Opacity="0"/>
                        <Rectangle x:Name="disabled" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Gray1}" StrokeThickness="1" Margin="0" Opacity="0"/>
                        <Rectangle x:Name="focused" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Cyan1}" StrokeThickness="1" Margin="0" Opacity="0"/>
                        <Rectangle x:Name="validationError" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource LightBrush12}" StrokeThickness="1" Margin="0" Opacity="0"/>
                        <Rectangle x:Name="innerShadow" Width="20" StrokeThickness="1" HorizontalAlignment="Left" Margin="1,1,0,1" d:LayoutOverrides="HorizontalAlignment" RadiusX="2" RadiusY="2" >
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusX="0.916" RadiusY="1.667" Center="0.72,0.528" GradientOrigin="0.72,0.528">
                                    <GradientStop Color="#00565656" Offset="0.679"/>
                                    <GradientStop Color="#4C565656" Offset="0.913"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="3,2,3,3" Foreground="{StaticResource Gray3}" Background="{x:Null}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl1" d:IsOptimized="True"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="{StaticResource Button_Hover}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource Cyan1}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Fill="{StaticResource Button_Focused}" Stroke="{StaticResource Cyan1}" Visibility="Collapsed" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="#FF333333">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="#FFFFFFFF" Opacity="0">
                            <ContentPresenter x:Name="contentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--____________________________________Date Filter Dropdown filter_______________________-->
	
	<Style x:Key="ComboToggleButtonStyle" x:Name="toggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checkedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focusBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="2" />
                        <Border x:Name="hoverBd" BorderBrush="{StaticResource ButtonHoverBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonHoverBackgroundBrush}" CornerRadius="2" Visibility="Collapsed" />
                        <Border x:Name="pressedBd" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonPressedBackgroundBrush}" CornerRadius="0,2,2,0" Visibility="Collapsed" />
                        <Border x:Name="checkedBd" BorderBrush="{StaticResource ButtonPressedBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonPressedBackgroundBrush}" CornerRadius="2" Visibility="Collapsed" />
                        <Border x:Name="focusBd" BorderBrush="{StaticResource ButtonPressedBackgroundBrush}" BorderThickness="1" CornerRadius="2" Visibility="Collapsed" />
                        <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="White">
						<ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                   		</ContentControl>
				    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--_____________________________________Date filter ComboBoxItem style____________________________________-->
	
	 <Style x:Key="DateFilterComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5,3,5,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />      
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="mouseOver" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" >
                                	<Storyboard>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selected" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                		<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="selected">
                                			<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                		</ObjectAnimationUsingKeyFrames>
                                		<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl1" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                       <Rectangle x:Name="mouseOver" Fill="{StaticResource DropDown_Hover}" IsHitTestVisible="False" RadiusY="1" RadiusX="1"
            						Stroke="{StaticResource DropDownStroke_Hover}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0"/>
            					<Rectangle x:Name="selected" Fill="{StaticResource LightGrayGradient}" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Stroke="{StaticResource Gray2}" Opacity="0"/>
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                        </ContentControl>
                        <ContentControl x:Name="contentControl1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter1" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	
	
	
    <!--_______________________________________Date filter ComboBoxStyle__________________________________________-->
	
	<Style x:Key="DateFilterComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="TabNavigation" Value="Once" />-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DateFilterComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" VerticalAlignment="Stretch" Style="{StaticResource ComboToggleButtonStyle}" Foreground="White">
                                    <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="White" />
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="White">
                                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock Text="" Foreground="White" />
                                    </ContentPresenter>
                                </ContentControl>

                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">                            
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource igThemeScrollViewerStyle}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	<Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Width" Value="22"/>
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background" Value="#FF1F3B53"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                                                <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked"/>
                                                        <VisualState x:Name="Unchecked"/>
                                                        <VisualState x:Name="Indeterminate"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="normal"
    												Opacity="1"
    												RadiusX="3"
    												RadiusY="3"
    												Stroke="{StaticResource Gray4}"
    												StrokeThickness="1" Margin="0" Fill="{StaticResource Button_NormalState}"/>
                                                <Rectangle x:Name="hover"
    												Opacity="0"
    												RadiusX="3"
    												RadiusY="3"
    												Stroke="{StaticResource Cyan2}"
    												StrokeThickness="1" Margin="0" Fill="{StaticResource Button_Hover}"/>
                                                <Rectangle x:Name="pressed"
    												Opacity="0"
    												RadiusX="3"
    												RadiusY="3"
    												Stroke="{StaticResource Cyan2}"
    												StrokeThickness="1" Margin="0" Fill="{StaticResource Button_Pressed}"/>
                                                <Path x:Name="path"
    												Height="17"
    												Stretch="Fill"
    												Opacity="0"
    												Data="M 680,187 C680,187 759,187 759,187 759,187 759,204 759,204 759,204 680,204 680,204 680,204 680,187 680,187 z" Margin="0" UseLayoutRounding="False">
                                                    <Path.Fill>
                                                        <RadialGradientBrush
    														Center="0.4810126582278481,-0.47058823529411764"
    														GradientOrigin="0.4810126582278481,-0.47058823529411764"
    														RadiusX="0.5"
    														RadiusY="1">
                                                            <RadialGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop
    																	Color="#FF1A5F7C"
    																	Offset="0" />
                                                                    <GradientStop
    																	Color="#001A5F7C"
    																	Offset="0.9944440126419067" />
                                                                </GradientStopCollection>
                                                            </RadialGradientBrush.GradientStops>
                                                        </RadialGradientBrush>
                                                    </Path.Fill>
                                                </Path>
                                                <Rectangle x:Name="focused"
    												Opacity="0"
    												RadiusX="3"
    												RadiusY="3"
    												Stroke="#5ab4da"
    												StrokeThickness="1" Margin="0">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush
    														StartPoint="0.571429443359375,-0.0952392578125"
    														EndPoint="0.571429443359375,1.035712890625">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop
    																	Color="#FF505050"
    																	Offset="0" />
                                                                    <GradientStop
    																	Color="#FF333333"
    																	Offset="0.9444440007209778" />
                                                                    <GradientStop
    																	Color="#FF333333"
    																	Offset="0.9777780175209045" />
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Rectangle x:Name="disabled"
    												Opacity="0"
    												RadiusX="3"
    												RadiusY="3"
    												Stroke="#9b9b9b"
    												StrokeThickness="1" Margin="0">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush
    														StartPoint="0.5,0"
    														EndPoint="0.5,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop
    																	Color="#FFd3d3d3"
    																	Offset="0" />
                                                                    <GradientStop
    																	Color="#FFA2A2A2"
    																	Offset="0.9611110091209412" />
                                                                    <GradientStop
    																	Color="#FFa1a1a1"
    																	Offset="0.9944440126419067" />
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="focused">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal" Fill="{StaticResource TextBoxGradient}" Stroke="{StaticResource Gray2}" StrokeThickness="1" RadiusX="3" RadiusY="3"/>
                        <Rectangle x:Name="hover" Stroke="{StaticResource Cyan0}" StrokeThickness="1" RadiusX="3" RadiusY="3" Visibility="Collapsed"/>
                        <Rectangle x:Name="onlyread" Stroke="{StaticResource Gray2}" StrokeThickness="1" RadiusX="3" RadiusY="3" Visibility="Collapsed"/>
                        <Rectangle x:Name="disabled" Stroke="{StaticResource Gray1}" StrokeThickness="1" RadiusX="3" RadiusY="3" Visibility="Collapsed"/>
                        <Rectangle x:Name="focused" Stroke="{StaticResource Gray1}" StrokeThickness="1" RadiusX="3" RadiusY="3" Visibility="Collapsed"/>
                        <Rectangle x:Name="innerShadow" Width="20" StrokeThickness="1" HorizontalAlignment="Left" Margin="1,1,0,1" RadiusX="2" RadiusY="2">
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusX="0.916" RadiusY="1.667" Center="0.72,0.528" GradientOrigin="0.72,0.528">
                                    <GradientStop Color="#00565656" Offset="0.679"/>
                                    <GradientStop Color="#4C565656" Offset="0.913"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Right" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                                    <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="5" Margin="0,0,3,0" Stretch="Uniform" Width="10">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FFFFFFFF"/>
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock Text=" "/>
                                </ContentPresenter>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{StaticResource Gray2}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource igThemeScrollViewerStyle}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="igListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" To="#FF272727" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor1" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" />
                                        <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded"/>
                                <VisualState x:Name="BeforeLoaded"/>
                                <VisualState x:Name="BeforeUnloaded"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="{StaticResource Button_Hover}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                        <Rectangle x:Name="fillColor1" Fill="{StaticResource LightGrayGradient}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource Cyan1}"/>
                        <Rectangle x:Name="focused" Fill="{StaticResource Button_Focused}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource Cyan1}"/>
                        <ContentControl x:Name="contentControl" Foreground="#ff333333" Margin="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxStyle" TargetType="ListBox">
        <Setter Property="ItemContainerStyle" Value="{StaticResource igListBoxItemStyle}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFC5C5C5">
                            <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource igThemeScrollViewerStyle}">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <System:Boolean>true</System:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- IG ChecKBoxStyle -->

    <Style x:Key="igCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="#FF448DCA"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Padding" Value="4,1,0,0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="normal"
    						Opacity="1"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray2}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="hover"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan0}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" Opacity="0" />
                        <Rectangle x:Name="pressed"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="focused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="disabled"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                        <Rectangle x:Name="invalidUnfocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource LightBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="invalidFocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource DarkBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                        <Rectangle x:Name="innerShadow"
    						Width="11"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" >
                            <Rectangle.Fill>
                                <RadialGradientBrush RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
                                    <GradientStop Color="#00565656" Offset="0.679"/>
                                    <GradientStop Color="#33565656" Offset="0.997"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Path x:Name="checkBox"
    						Height="8"
    						Width="9"
    						Stretch="Fill"
    						Opacity="0"
    						Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
    						Fill="#505050" HorizontalAlignment="Left" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top" />
                        <Rectangle x:Name="IndeterminateCheck" Fill="#FF505050" Height="2" Width="7" VerticalAlignment="Top" Margin="0,8,0,0" Opacity="0"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="igFilterSelectionListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=========================================================================================================== -->
    <!--__________________________________ END OFFICE 2010 INBOX CONTROL STYLES ____________________________________-->
    <!--=========================================================================================================== -->

    <!--__________________________________ XamGrid _____________________________________________________-->
    <Style TargetType="ig:XamGrid">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamGrid">
                    <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ReadOnlyStates">
                                <VisualState x:Name="Active"></VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ReadOnlyBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border.Resources>
                            <DataTemplate x:Name="DefaultDeferredScrollingTemplate">
                                <Grid Margin="0,20,0,0">
                                    <Border Background="{StaticResource ToolTipBackgroundBrush}" BorderBrush="{StaticResource ToolTipBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Foreground="#FF4C4C4C" Text="{Binding FirstColumnValue, Converter={StaticResource CultureConverter}}" Margin="5" />
                                    </Border>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Name="DefaultGroupByDeferredScrollingTemplate">
                                <Grid Margin="0,20,0,0">
                                    <Border Background="{StaticResource ToolTipBackgroundBrush}" BorderBrush="{StaticResource ToolTipBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Foreground="#FF4C4C4C" Text="{Binding Row.Data, Converter={StaticResource CultureConverter}}" Margin="5"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                            <!-- _______ Filtering Icons _________ -->
                            <DataTemplate x:Name="EqualsOperand">
                                <Path
									Width="8"
									Height="5"
									Data="M 0,3 C0,3 0,5 0,5 0,5 8,5 8,5 8,5 8,3 8,3 8,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 8,2 8,2 8,2 8,0 8,0 8,0 0,0 0,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"
									VerticalAlignment="Center"/>
                            </DataTemplate>
                            <DataTemplate x:Name="NotEqualsOperand">
                                <Path
									Width="8"
									Height="11"
									Data="M 0,3 C0,3 0,5 0,5 0,5 3,5 3,5 3,5 2,6 2,6 2,6 0,6 0,6 0,6 0,8 0,8 0,8 1.7,8 1.7,8 1.7,8 0,11 0,11 0,11 2,11 2,11 2,11 3.7,8 3.7,8 3.7,8 8,8 8,8 8,8 8,6 8,6 8,6 4,6 4,6 4,6 5.275,5 5.275,5 5.275,5 8,5 8,5 8,5 8,3 8,3 8,3 6.365,3 6.365,3 6.365,3 8,0 8,0 8,0 6,0 6,0 6,0 4.365,3 4.365,3 4.365,3 0,3 0,3 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Name="StartsWithOperand">
                                <StackPanel x:Name="BeginsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Name="EndsWithOperand">
                                <StackPanel x:Name="EndsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Name="DoesNotStartWithOperand">
                                <Grid x:Name="DoesnotBeginWith">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                        <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    </StackPanel>
                                    <Grid>
                                        <Path
											Width="8"
											Height="11"
											HorizontalAlignment="Center"
											Margin="-4,0,0,0"
											Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z"
											Fill="{StaticResource FilterOperatorGlyphBrush}"
											Stretch="Fill"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Name="DoesNotEndWithOperand">
                                <Grid x:Name="DoesnotendWith">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                        <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    </StackPanel>
                                    <Grid>
                                        <Path
											Width="8"
											Height="11"
											HorizontalAlignment="Center"
											Margin="0,0,-4,0"
											Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z"
											Fill="{StaticResource FilterOperatorGlyphBrush}"
											Stretch="Fill"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Name="ContainsOperand">
                                <Border
									Width="10"
									Height="10"
									Background="#FFFFFFFF"
									BorderBrush="{StaticResource FilterOperatorGlyphBrush}"
									BorderThickness="1">
                                    <Rectangle Margin="2" Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </Border>
                            </DataTemplate>
                            <DataTemplate x:Name="DoesNotContainOperand">
                                <Grid x:Name="DoesNotContains">
                                    <Rectangle
										Width="10"
										Height="10"
										Fill="#FFFFFFFF"
										Stroke="{StaticResource FilterOperatorGlyphBrush}"
										StrokeDashArray="2"/>
                                    <Rectangle Width="4" Height="4" Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Name="GreaterThanOperand">
                                <Path
									Width="8"
									Height="8"
									HorizontalAlignment="Center"
									Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Name="GreaterThanOrEqualOperand">
                                <StackPanel x:Name="GreaterThanOrEqual">
                                    <Path
										Width="8"
										Height="8"
										HorizontalAlignment="Center"
										Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <Rectangle
										Width="8"
										Height="1"
										Margin="0,1,0,0"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Name="LessThanOperand">
                                <Path
									Width="8"
									Height="8"
									HorizontalAlignment="Center"
									Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Name="LessThanOrEqualOperand">
                                <StackPanel x:Name="LessThanOrEqual">
                                    <Path
										Width="8"
										Height="8"
										HorizontalAlignment="Center"
										Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <Rectangle
										Width="8"
										Height="1"
										Margin="0,1,0,0"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Name="DefaultFilterIcon">
                                <Grid>
                                    <Path
										Width="11"
										Height="8"
										Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                    <Path
										Width="7"
										Height="6"
										Data="M 2,1 C2,1 9,1 9,1 9,1 6,4 6,4 6,4 6,7 6,7 6,7 5,7 5,7 5,7 5,4 5,4 5,4 2,1 2,1 z"
										Fill="#FFFFFFFF"
										Stretch="Fill"/>
                                    <Path
										Width="3.5"
										Height="7"
										HorizontalAlignment="Center"
										Margin="11,7,0,0"
										VerticalAlignment="Center"
										Data="M 0,0 C0,0 0,7 0,7 0,7 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                </Grid>
                            </DataTemplate>

                        </Border.Resources>
                        <Grid>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <igPrim:RowsPanel x:Name="RowsPanel"/>
                                <Rectangle Grid.Row="1" Grid.Column="1" Fill="#FFECECEC"/>
                                <ScrollBar x:Name="VerticalScrollBar" Width="17" Grid.Row="0" Grid.Column="1" Style="{StaticResource igThemeScrollBarStyle}"/>
                                <ScrollBar x:Name="HorizontalScrollBar"  Height="16" Grid.Row="2" Style="{StaticResource igThemeScrollBarStyle}"/>
                            </Grid>
                            <Border x:Name="ReadOnlyBorder" Opacity=".2" Background="Black" Visibility="Collapsed" ></Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowSelectorCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Path
							x:Name="summarySigmaIcon"
							Data="M 5.5,-0.5 C5.5,-0.5 5.5,0.5 5.5,0.5 5.5,0.5 1.5,0.5 1.5,0.5 1.5,0.5 4.5,3.5 4.5,3.5 4.5,3.5 1.5,6.5 1.5,6.5 1.5,6.5 5.5,6.5 5.5,6.5 5.5,6.5 5.5,7.5 5.5,7.5 5.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,6.5 -0.5,6.5 -0.5,6.5 2.5,3.5 2.5,3.5 2.5,3.5 -0.5,0.5 -0.5,0.5 -0.5,0.5 -0.5,-0.5 -0.5,-0.5 -0.5,-0.5 5.5,-0.5 5.5,-0.5 z"
							Fill="{StaticResource HeaderCellGlyphBrush}"
							Width="6"
							Height="8"
							Stretch="Fill"
							StrokeThickness="0"
							RenderTransformOrigin="0.5, 0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ AddNewRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowSelectorCellControl">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Path Fill="#ffffff" Stretch="Fill" Stroke="{StaticResource HeaderCellGlyphBrush}" StrokeThickness="1" Data="M3.5,0.5 L6.5,0.5 L6.5,3.5 L9.5,3.5 L9.5,6.5 L6.5,6.5 L6.5,9.5 L3.5,9.5 L3.5,6.5 L0.5,6.5 L0.5,3.5 L3.5,3.5 z" Width="10" Height="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowSelectorCellControl">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Grid Width="15" Height="9">
                            <Path
			                    Width="11"
			                    Height="9"
			                    Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,9 4,9 4,9 7,9 7,9 7,9 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,1 10,1 10,1 11,1 11,1 11,1 11,0 11,0 11,0 0,0 0,0 z"
			                    Stretch="Fill"
			                    Stroke="{StaticResource HeaderCellGlyphBrush}"/>
                            <Path
			                    Width="5"
			                    Height="3"
			                    HorizontalAlignment="Left"
			                    VerticalAlignment="Bottom"
			                    Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
			                    Fill="#444444"
			                    Stretch="Fill"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Border x:Name="altElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltNormalBackgroundBrush}" Visibility="Collapsed"/>
                        <Border x:Name="selectedBd" BorderBrush="{StaticResource RowSelectorActiveBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource RowSelectorActiveBackgroundBrush}" Visibility="Collapsed"/>
                        <Border x:Name="hoverElem" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed"/>
                        <Path x:Name="ActiveIndicator" Visibility="Collapsed" Stroke="{StaticResource FocusBrush}" Fill="White" Data="M0,0 L0,10 L5,5 z" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <Path
							x:Name="EditingIndicator"
							Visibility="Collapsed"
							Width="6"
							Height="12"
							Data="M 2.284,10.299 C2.284,10.299 2.5,10.434 2.5,10.434 2.5,10.434 2.699,9.991 2.699,9.991 2.699,9.991 3.5,9.391 3.5,9.391 3.5,9.391 3.054,9.193 3.054,9.193 3.054,9.193 6,2.608 6,2.608 6,2.608 6,0.521 6,0.521 6,0.521 3.5,0 3.5,0 3.5,0 3,1.565 3,1.565 3,1.565 0.360,7.987 0.360,7.987 0.360,7.987 0,7.826 0,7.826 0,7.826 0,8.869 0,8.869 0,8.869 0,12 0,12 0,12 2.284,10.299 2.284,10.299 z"
							Margin="3,0,0,0"
							Stretch="Fill"
							HorizontalAlignment="Left">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.666,-0.043" EndPoint="-0.066,0.949">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFfe6e6c"/>
                                            <GradientStop Offset="0.125" Color="#FFfe6e6c"/>
                                            <GradientStop Offset="0.195" Color="#FF78d1ec"/>
                                            <GradientStop Offset="0.608" Color="#FF6cc0d9"/>
                                            <GradientStop Offset="0.753" Color="#FFffcc99"/>
                                            <GradientStop Offset="0.934" Color="#FF333333"/>
                                            <GradientStop Offset="1" Color="#FF333333"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Indicator" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Border x:Name="altElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltNormalBackgroundBrush}" Visibility="Collapsed"/>
                        <Border x:Name="hoverElem" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <igPrim:ExpansionIndicator x:Name="Indicator" Visibility="Collapsed"  Margin="{TemplateBinding Padding}" Foreground="{StaticResource ExpansionIndicatorForegroundBrush}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Cursor="Hand">
                            <igPrim:ExpansionIndicator.Style>
                                <Style TargetType="igPrim:ExpansionIndicator">
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="igPrim:ExpansionIndicator">
                                                <Grid Background="Transparent">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="ExpansionStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition From="Collapsed" To="Expanded" GeneratedDuration="00:00:00.2000000"></VisualTransition>
                                                                <VisualTransition From="Expanded" To="Collapsed" GeneratedDuration="00:00:00.2000000"></VisualTransition>
                                                            </VisualStateGroup.Transitions>

                                                            <VisualState x:Name="Expanded">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="90" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"></DoubleAnimation>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Collapsed">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"></DoubleAnimation>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid x:Name="ExpansionIndicator" Background="#00000000" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Path
															Width="{TemplateBinding Width}"
															Height="{TemplateBinding Height}"
															Data="M8,5 L8,14 L14,9.5 z"
															x:Name="ExpansionIndicatorGlyph"
															HorizontalAlignment="Center"
															VerticalAlignment="Center"
															Fill="{TemplateBinding Foreground}"
															RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </igPrim:ExpansionIndicator.Style>
                        </igPrim:ExpansionIndicator>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ AddNewRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooser Dialog Button _____________________________________________________-->

    <Style x:Key="ColumnChooserDialogBtn" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To=".35" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                        <Grid
			                    x:Name="columnChooserIcon"
			                    Width="14"
			                    Height="14"
			                    VerticalAlignment="Center"
			                    HorizontalAlignment="Center">
                            <Path Fill="{StaticResource HeaderNormalBackgroundBrush}" Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z"/>
                            <Path Fill="{StaticResource GridBorderBrush}" Data="M 1,5 C1,5 6,5 6,5 6,5 6,7 6,7 6,7 1,7 1,7 1,7 1,5 1,5 zM 1,8 C1,8 6,8 6,8 6,8 6,10 6,10 6,10 1,10 1,10 1,10 1,8 1,8 zM 1,11 C1,11 6,11 6,11 6,11 6,13 6,13 6,13 1,13 1,13 1,13 1,11 1,11 zM 7,7 C7,7 13,7 13,7 13,7 13,9 13,9 13,9 7,9 7,9 7,9 7,7 7,7 zM 7,4 C7,4 13,4 13,4 13,4 13,6 13,6 13,6 7,6 7,6 7,6 7,4 7,4 zM 4,1 C4,1 13,1 13,1 13,1 13,3 13,3 13,3 4,3 4,3 4,3 4,1 4,1 zM 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z"/>
                            <Grid Margin="0,0,0,1">
                                <Border
					                    Width="6"
					                    Height="3"
					                    Margin="0,0,2,2"
					                    BorderBrush="Black"
					                    BorderThickness="0,0,1,1"
					                    CornerRadius="0,0,2,0"/>
                                <Path
					                    Width="5"
					                    Height="3"
					                    Margin="3,1,0,0"
					                    VerticalAlignment="Top"
					                    Data="M 0,2 C0,2 0,3 0,3 0,3 5,3 5,3 5,3 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 2,1 2,1 2,1 1,1 1,1 1,1 1,2 1,2 1,2 0,2 0,2 z"
					                    Fill="Black"
					                    Stretch="Fill"/>
                            </Grid>
                        </Grid>
                        <ContentControl x:Name="contentControl" Grid.Column="1">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnChooserPopupItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To=".35" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                        <ContentControl x:Name="contentControl" Grid.Column="1">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderDropDownButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Visibility="Collapsed">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.76,0" EndPoint="0.76,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FF3e3e3e"/>
                                            <GradientStop Offset="0.93" Color="#FF272727"/>
                                            <GradientStop Offset="0.97" Color="#FF272727"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ Menu Brushes (11.2 Feature)  _____________________________________________________-->

    <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0" />
            <GradientStop Color="#FFF2F4F5" Offset="0.48" />
            <GradientStop Color="#FFCFD5DA" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MenuSeparatorLine" Color="#FF9D989E"/>
    <!--__________________________________ MenuItems Brushes  (11.2 Feature) _____________________________________________________-->

    <!--__________________________________ HeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:HeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:HeaderCellControl">
                    <igPrim:SimpleClickableContainer
							x:Name="NormalFill"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0,0,1,1">
                        <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                                <ig:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick"/>
                                <ig:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick"/>
                            </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <Grid x:Name="Bd">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="1" HorizontalAlignment="Left" Fill="#7F999999" Grid.ColumnSpan="4"/>
                            <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenLeftAdjacentColumnsElement" Width="Auto">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ToolTipService.ToolTip>
                                <igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Border Background="{TemplateBinding Background}" Width="10">
                                        <Rectangle x:Name="hiddenColumnIndicator" Fill="{StaticResource FocusBrush}" Width="3" HorizontalAlignment="Left"/>
                                    </Border>
                                </igPrim:HeaderDropDownControl.OpenButtonContent>
                                <Grid>
                                    <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="25"  MaxWidth="25"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.RowSpan="2" Background="{StaticResource FilterSelectionVerticalBrush}" CornerRadius="1,0,0,1"/>
                                            <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent"  BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <igBase:Commanding.Commands>
                                                    <igBase:CommandSourceCollection>
                                                        <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                    </igBase:CommandSourceCollection>
                                                </igBase:Commanding.Commands>
                                            </ListBox>
                                            <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource SeparatorBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                    <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </igPrim:HeaderDropDownControl>
                            <ContentPresenter x:Name="headerContent" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid
								Grid.Column="2"
								x:Name="SortAndPinIndicators"
								HorizontalAlignment="Right"
								Margin="0,0,5,0"
								Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Path
									x:Name="SortedDescending"
									Width="8"
			                        Height="5"
			                        Data="M 9,1 C9,1 5,6 5,6 5,6 1,1 1,1 1,1 9,1 9,1 z"
									Fill="#ffffff"
			                        Stroke="#535353"
                                    Margin="0,0,5,0"
									Visibility="Collapsed"/>
                                <Path
									x:Name="SortedAscending"
									Width="8"
			                        Height="5"
			                        Data="M 9,6 C9,6 5,1 5,1 5,1 1,6 1,6 1,6 9,6 9,6 z"
			                        Fill="#ffffff"
			                        Stretch="Fill"
			                        Stroke="#FF535353"
                                    Margin="0,0,5,0"
									Visibility="Collapsed"/>
                                <Button Style="{StaticResource HeaderDropDownButtonStyle}" x:Name="PinnedIndicator" Grid.Column="3" Visibility="Collapsed" Width="20">
                                    <Grid Background="Transparent">
                                        <Path
										Width="7"
										Height="10"
										Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
											Stretch="Fill"/>
                                        <igBase:Commanding.Command>
                                            <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                                            </ig:XamGridColumnCommandSource>
                                        </igBase:Commanding.Command>
                                    </Grid>
                                </Button>
                                <Button x:Name="UnpinnedIndicator" Visibility="Collapsed" Style="{StaticResource HeaderDropDownButtonStyle}" Grid.Column="3" Width="20">
                                    <Grid Background="Transparent">
                                        <Path
										Width="10"
										Height="7"
										Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                        <igBase:Commanding.Command>
                                            <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                                            </ig:XamGridColumnCommandSource>
                                        </igBase:Commanding.Command>
                                    </Grid>
                                </Button>
                                <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="Transparent" Visibility="Collapsed" Grid.Column="1">
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Grid Background="Transparent">
                                            <Path
											        Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
											        Fill="{StaticResource HeaderCellGlyphBrush}"
											        Width="5"
											        Height="7"
											        x:Name="summarySigmaIcon"
											        StrokeThickness="0"/>
                                        </Grid>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:SummarySelectionControl>
                                </igPrim:HeaderDropDownControl>
                                <igPrim:HeaderDropDownControl AllowResizing="true" x:Name="FilterHeaderDropDownControl" Visibility="Collapsed" Background="Transparent" Grid.Column="2">
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Grid>
                                            <Path
												x:Name="clearFilterGlyphStroke"
												Width="11"
												Height="8"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Stretch="Fill"/>
                                            <Path
												x:Name="redFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="{StaticResource FocusBrush}"
												Stretch="Fill"
												Visibility="Collapsed"
												/>
                                        </Grid>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <igPrim:FilterSelectorControl Height="370" MinWidth="250" MinHeight="370" MaxWidth="800" MaxHeight="800"  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"  Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:FilterSelectorControl>
                                </igPrim:HeaderDropDownControl>

                                <Button x:Name="VisibilityToggleButton" Style="{StaticResource HeaderDropDownButtonStyle}" Visibility="Collapsed" Grid.Column="4" Width="20">
                                    <Grid Background="Transparent">
                                        <Path
				                        Width="8"
				                        Height="7"
				                        Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
				                        Fill="{StaticResource HeaderCellGlyphBrush}"/>
                                        <igBase:Commanding.Command>
                                            <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown"/>
                                        </igBase:Commanding.Command>
                                    </Grid>
                                </Button>

                            </Grid>
                            <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4" Width="Auto">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ToolTipService.ToolTip>
                                <igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Border Background="{TemplateBinding Background}" Width="10">
                                        <Rectangle Fill="{StaticResource FocusBrush}" Width="1" HorizontalAlignment="Right"/>
                                    </Border>
                                </igPrim:HeaderDropDownControl.OpenButtonContent>
                                <Grid>
                                    <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24" MaxWidth="24"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.RowSpan="2" Background="{StaticResource FilterSelectionVerticalBrush}" CornerRadius="1,0,0,1"/>
                                            <ListBox DataContext="{x:Null}"  ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <igBase:Commanding.Commands>
                                                    <igBase:CommandSourceCollection>
                                                        <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                    </igBase:CommandSourceCollection>
                                                </igBase:Commanding.Commands>
                                            </ListBox>
                                            <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                <Rectangle x:Name="separatorRight" Height="1" Fill="{StaticResource FocusBrush}"/>
                                                <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                    <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </igPrim:HeaderDropDownControl>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="SortAndPinIndicators"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderMovingBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderMovingBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SortAndPinIndicators" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedIndicatorStates">
                                <VisualState x:Name="NotFixable"/>
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="Summable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unsummable">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderFilterStates">
                                <VisualState x:Name="NoIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FilterIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                                <VisualState x:Name="NotFiltered">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Filtered">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="VisibilityIconStates">
                                <VisualState x:Name="VisibilityIconHidden"/>
                                <VisualState x:Name="VisibilityIconVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenLeftAdjacentColumns"/>
                                <VisualState x:Name="HiddenLeftAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenRightAdjacentColumns"/>
                                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </igPrim:SimpleClickableContainer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ChildBandCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ChildBandCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ChildBandCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FF333333"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Fill="{StaticResource HeaderHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="{StaticResource CellItemSelectedBackgroundBrush}" Stroke="{StaticResource CellItemSelectedBorderBrush}" x:Name="ActiveRect" Visibility="Collapsed"/>
                        <ContentControl x:Name="contentControl" Foreground="{StaticResource HeaderNormalForegroundBrush}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorFooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorFooterCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Width="1" HorizontalAlignment="Left" Fill="#7F999999" Grid.ColumnSpan="4"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorFooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="#ffEBEBEB"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorFooterCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Width="1" HorizontalAlignment="Left" Fill="#7F999999" Grid.ColumnSpan="4"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FooterCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ CellControl _____________________________________________________-->
    <Style x:Key="CellControlStyle" TargetType="ig:CellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="altElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border x:Name="altElem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource CellItemAltNormalBackgroundBrush}" Visibility="Collapsed"/>
                        <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1" Visibility="Collapsed"/>
                        <Border x:Name="hoverElem" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed"/>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ig:CellControl" BasedOn="{StaticResource CellControlStyle}"/>
        <!--__________________________________ AddNewRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle Fill="{StaticResource CellRowHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>
                        <ContentPresenter   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Padding" Value="7,3"/>
        <Setter Property="SummaryDisplayTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
                        <TextBlock Text=" = "/>
                        <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Rectangle Height="1" VerticalAlignment="Top" Fill="#7FFFFFFF"/>
                        </Border>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>
                        <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="Right" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--___________________________________ FilterClearButton ______________________________________________________-->
    <Style x:Key="NoChromeBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowCellControl">
                    <Grid x:Name="FilterUIArea">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AllowFiltering">
                                <VisualState x:Name="ShowFilterUIWithCancelButton" >
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowFilterUI"/>
                                <VisualState x:Name="HideFilterUI" >
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="OperatorControl" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterCellValueVisibility">
                                <VisualState x:Name="ShowFilterCellValue"></VisualState>
                                <VisualState x:Name="HideFilterCellValue">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterCellValueContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="FilterRowElem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="{StaticResource CellRowHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <igPrim:FilterControl x:Name="OperatorControl" Grid.Column="0"/>
                            <ContentPresenter x:Name="FilterCellValueContent" Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            <ContentControl x:Name="ClearFilters" Grid.Column="2" Padding="0,0,5,0" Visibility="Collapsed"  HorizontalAlignment="Center" VerticalAlignment="Center"  >
                                <igBase:Commanding.Command>
                                    <ig:XamGridFilteringCommandSource EventName="MouseLeftButtonDown" CommandType="ClearFilters"></ig:XamGridFilteringCommandSource>
                                </igBase:Commanding.Command>
                                <Grid Width="18" MinHeight="12" Cursor="Hand" Background="Transparent">
                                    <Path
										x:Name="clearFilterGlyphStroke"
										Width="11"
										Height="8"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                    <Path
										x:Name="clearFilterGlyphFill"
										Width="7"
										Height="6"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
										Fill="#FFFFFFFF"
										Stretch="Fill"/>
                                    <Path
										x:Name="clearFilterGlyphAdorner"
										HorizontalAlignment="Center"
										VerticalAlignment="Bottom"
										Height="4"
										Width="5"
										Stretch="Fill"
										Opacity="1"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Margin="10,4,0,0"/>
                                </Grid>
                            </ContentControl>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ MovingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:MovingIndicator">
        <Setter Property="Background" Value="{StaticResource MoveIndicatorBrush}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:MovingIndicator">
                    <Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path
                            x:Name="TopIndicator"
			                Width="{TemplateBinding Width}"
			                Height="9"
			                Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z"
			                Fill="{TemplateBinding Background}"/>
                        <Path
                            x:Name="BottomIndicator"
			                Width="{TemplateBinding Width}"
			                Height="9"
			                Data="M 3,9 C3,9 3,5 3,5 3,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 9,4 9,4 9,4 9,5 9,5 9,5 6,5 6,5 6,5 6,9 6,9 6,9 3,9 3,9 z"
			                Fill="{TemplateBinding Background}"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ResizingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:ResizingIndicator">
        <Setter Property="Background" Value="{StaticResource ResizeIndicatorBrush}"/>
        <Setter Property="Width" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ResizingIndicator">
                    <Canvas>
                        <Rectangle x:Name="FillIndicator" Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}"></Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ Styles for Pager _______________________________________________-->
    <Style x:Key="PagerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Padding" Value="0,0,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="layoutRoot" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hoverRec" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressedRec" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="layoutRoot" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                        <Border x:Name="hoverRec" Background="{StaticResource ButtonHoverBackgroundBrush}" BorderBrush="{StaticResource ButtonHoverBorderBrush}" Visibility="Collapsed" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                        <Border x:Name="pressedRec" Background="{StaticResource ButtonPressedBackgroundBrush}" BorderBrush="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PagerItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="5,1"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="Foreground" Value="#ff4E4E4E"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="pagerItem" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerButtonBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="{StaticResource PagerButtonHoverBackgroundBrush}" Stroke="{StaticResource PagerButtonBorderBrush}" IsHitTestVisible="False" Opacity="0" RadiusX="2" RadiusY="2"/>
                        <Grid>
                            <Border x:Name="itemFill" Background="Transparent" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="2">
                                <TextBlock x:Name="pagerItem" Foreground="{TemplateBinding Foreground}" TextAlignment="Center" VerticalAlignment="Center"  Text="{Binding}" Margin="{TemplateBinding Padding}"></TextBlock>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________________ FilterControl Button Style __________________________________ -->
    <Style x:Name="FilterDropdownToggle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterDropdown" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" Background="Transparent" HorizontalAlignment="Stretch" Margin="0" Style="{StaticResource FilterDropdownToggle}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right"  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
              RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup"  IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border x:Name="PopupBorder" BorderBrush="{StaticResource Gray2}" BorderThickness="{TemplateBinding BorderThickness}">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Background="Transparent" Style="{StaticResource igThemeScrollViewerStyle}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________________________FilterControl_________________________________________ -->
    <Style TargetType="igPrim:FilterControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FilterImage">
                                <VisualState x:Name="Equals">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="=">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="StartsWith">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="ABc">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="EndsWith">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="aBC">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GreaterThan">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value=">">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Button x:Name="FilterOperandButton" Width="20" HorizontalAlignment="Left" ContentTemplate="{TemplateBinding SelectedItemIcon}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource NoChromeBtn}"/>
                        <ComboBox x:Name="FilterOperands" Width="16" Style="{StaticResource FilterDropdown}" ItemContainerStyle="{StaticResource ComboBoxItemStyle}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                        <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!-- _________________________________ PagerControl___________________________________________-->
    <Style TargetType="igPrim:PagerControl" >
        <Setter Property="MaximumAvailablePagerValues" Value="10"/>
        <Setter Property="Margin" Value="10,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PagerControl">
                    <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}" HorizontalAlignment="Right" >
                        <Button  x:Name="FirstPageButton" Style="{StaticResource PagerButtonStyle}" Margin="0,0,4,0">
                            <Grid Width="11" Height="10">
                                <Path
									Width="11"
									Height="10"
									Data="M 0,0 C0,0 0,10 0,10 0,10 4,10 4,10 4,10 4,0 4,0 4,0 0,0 0,0 zM 9,0 C9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 7,7 7,7 7,7 7,8 7,8 7,8 8,8 8,8 8,8 8,9 8,9 8,9 9,9 9,9 9,9 9,10 9,10 9,10 11,10 11,10 11,10 11,0 11,0 11,0 9,0 9,0 z"
									Fill="#7F535353"
									Stretch="Fill"/>
                                <Path
									Width="9"
									Height="8"
									Data="M 0,0 C0,0 0,8 0,8 0,8 2,8 2,8 2,8 2,0 2,0 2,0 0,0 0,0 zM 8,0 C8,0 8,1 8,1 8,1 7,1 7,1 7,1 7,2 7,2 7,2 6,2 6,2 6,2 6,3 6,3 6,3 5,3 5,3 5,3 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,8 8,8 8,8 9,8 9,8 9,8 9,0 9,0 9,0 8,0 8,0 z"
									Fill="#ffffff"
									Stretch="Fill"/>
                            </Grid>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="FirstPage" ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Button x:Name="PreviousPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Grid Width="6" Height="10">
                                <Path
									Width="6"
									Height="10"
									Data="M 4,0 C4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,6 0,6 0,6 1,6 1,6 1,6 1,7 1,7 1,7 2,7 2,7 2,7 2,8 2,8 2,8 3,8 3,8 3,8 3,9 3,9 3,9 4,9 4,9 4,9 4,10 4,10 4,10 6,10 6,10 6,10 6,0 6,0 6,0 4,0 4,0 z"
									Fill="#7F535353"
									Stretch="Fill"/>
                                <Path
									Width="4"
									Height="8"
									Data="M 3,0 C3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,0 4,0 4,0 3,0 3,0 z"
									Fill="#ffffff"
									Stretch="Fill"/>
                            </Grid>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="PreviousPage"  ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <ListBox x:Name="PagerItems" ItemContainerStyle="{StaticResource PagerItemStyle}" Background="Transparent" BorderThickness="0" >
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="SelectionChanged" CommandType="GoToPage"  ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox >
                        <Button x:Name="NextPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Grid Width="6" Height="10">
                                <Path
									Width="6"
									Height="10"
									Data="M 2,0 C2,0 2,1 2,1 2,1 3,1 3,1 3,1 3,2 3,2 3,2 4,2 4,2 4,2 4,3 4,3 4,3 5,3 5,3 5,3 5,4 5,4 5,4 6,4 6,4 6,4 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,9 3,9 3,9 2,9 2,9 2,9 2,10 2,10 2,10 0,10 0,10 0,10 0,0 0,0 0,0 2,0 2,0 z"
									Fill="#7F535353"
									Stretch="Fill"/>
                                <Path
									Width="4"
									Height="8"
									Data="M 1,0 C1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 0,0 1,0 1,0 z"
									Fill="#ffffff"
									Stretch="Fill"/>
                            </Grid>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="NextPage"></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Button  x:Name="LastPageButton" Style="{StaticResource PagerButtonStyle}" Margin="4,0,0,0">
                            <Grid Width="11" Height="10">
                                <Path
									Width="11"
									Height="10"
									Data="M 11,0 C11,0 11,10 11,10 11,10 7,10 7,10 7,10 7,0 7,0 7,0 11,0 11,0 zM 2,0 C2,0 2,1 2,1 2,1 3,1 3,1 3,1 3,2 3,2 3,2 4,2 4,2 4,2 4,3 4,3 4,3 5,3 5,3 5,3 5,4 5,4 5,4 6,4 6,4 6,4 6,6 6,6 6,6 5,6 5,6 5,6 5,7 5,7 5,7 4,7 4,7 4,7 4,8 4,8 4,8 3,8 3,8 3,8 3,9 3,9 3,9 2,9 2,9 2,9 2,10 2,10 2,10 0,10 0,10 0,10 0,0 0,0 0,0 2,0 2,0 z"
									Fill="#7F535353"
									Stretch="Fill"/>
                                <Path
									Width="9"
									Height="8"
									Data="M 9,0 C9,0 9,8 9,8 9,8 7,8 7,8 7,8 7,0 7,0 7,0 9,0 9,0 zM 1,0 C1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,5 4,5 4,5 3,5 3,5 3,5 3,6 3,6 3,6 2,6 2,6 2,6 2,7 2,7 2,7 1,7 1,7 1,7 1,8 1,8 1,8 0,8 0,8 0,8 0,0 0,0 0,0 1,0 1,0 z"
									Fill="#ffffff"
									Stretch="Fill"/>
                            </Grid>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="LastPage" ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderCellControl">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderHeaderCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderHeaderCellControl">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderFooterCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderFooterCellControl">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ClickableContainer _____________________________________________________-->
    <Style TargetType="igPrim:SimpleClickableContainer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SimpleClickableContainer">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ DropAreaIndicator _____________________________________________________-->
    <Style TargetType="igPrim:DropAreaIndicator">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                    <GradientStop Color="#79000000"/>
                    <GradientStop Color="#BF000000" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DropAreaIndicator">
                    <Border x:Name="Root" Opacity="{TemplateBinding Opacity}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderTransformOrigin="0,0">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="rootScale" ScaleX="0"></ScaleTransform>
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Hidden" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <DoubleAnimation To="1" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisplayFromLeft">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                                            <EasingPointKeyFrame KeyTime="0" Value="0,0"/>
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1,0,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisplayFromRight">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                                            <EasingPointKeyFrame KeyTime="0" Value="1,0"/>
                                        </PointAnimationUsingKeyFrames>
                                        <!-- Leave Ease -->
                                        <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________________ PagerCellControl________________________________________-->
    <Style TargetType="igPrim:PagerCellControl">
        <Setter Property="Background" Value="{StaticResource PagerAreaBackground}"/>
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PagerCellControl">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Orientation">
                                <VisualState x:Name="Top">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="pagerStroke" Height="1" VerticalAlignment="Top" Background="{TemplateBinding BorderBrush}" Visibility="Collapsed"/>
                        <igPrim:PagerControl x:Name="PagerItemControl" >
                            <igBase:Commanding.Commands>
                                <igBase:CommandSourceCollection>
                                    <ig:XamGridPagingCommandSource EventName="FirstPage"  CommandType="FirstPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="LastPage"  CommandType="LastPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="PreviousPage"  CommandType="PreviousPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="NextPage"  CommandType="NextPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="GoToPage"  CommandType="GoToPage" >
                                    </ig:XamGridPagingCommandSource>
                                </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                        </igPrim:PagerControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FF333333"></SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Fill="{StaticResource HeaderHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="{StaticResource CellItemSelectedBackgroundBrush}" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1"  x:Name="ActiveRect" Visibility="Collapsed"/>
                        <ContentControl x:Name="contentControl" Foreground="{StaticResource HeaderNormalForegroundBrush}">
                            <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ___________________________ GroupByAreaCellControlExpansionDecorator ____________________________-->
    <Style x:Key="ExpansionBar" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="elemVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="elemVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByExpanderPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByExpanderPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource GroupByExpanderPressedHighlightBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="elemVisual" Visibility="Collapsed">
                            <Border x:Name="Bd" Background="{StaticResource GroupByExpanderHoverBackgroundBrush}" BorderBrush="{StaticResource GroupByExpanderHoverBorderBrush}"/>
                            <Rectangle x:Name="highlight" Stroke="{StaticResource GroupByExpanderHoverHighlightBrush}" Margin="0,0,0,1"/>
                        </Grid>
                        <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource GroupByExpanderHoverBorderBrush}" Visibility="Collapsed"/>
                        <ContentPresenter
								    x:Name="contentPresenter"
								    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								    Margin="{TemplateBinding Padding}"
								    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								    Content="{TemplateBinding Content}"
								    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________________ GroupByAreaCellControl ________________________________________-->
    <Style TargetType="igPrim:GroupByAreaCellControl">
        <Setter Property="Background" Value="{StaticResource GroupByBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Foreground" Value="#ff4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByAreaCellControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="ExpansionIndicator" Height="12" VerticalAlignment="Top" IsChecked="{TemplateBinding IsExpanded}" Style="{StaticResource ExpansionBar}" Foreground="#FF4E4E4E">
                            <igBase:Commanding.Commands>
                                <igBase:CommandSourceCollection>
                                    <ig:XamGroupByAreaCommandSource EventName="Checked" CommandType="Expand"></ig:XamGroupByAreaCommandSource>
                                    <ig:XamGroupByAreaCommandSource EventName="Unchecked" CommandType="Collapse"></ig:XamGroupByAreaCommandSource>
                                </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <Grid>
                                <Grid x:Name="topGlyphSet" Visibility="Collapsed">
                                    <Path Width="8" Height="4" x:Name="topExpandGlyph" Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z" Stretch="Fill" Visibility="Collapsed" Margin="0,0,0,2" Fill="#FFFFFFFF"/>
                                    <Path Width="8" Height="4"  x:Name="topCollapseGlyph" Data="M 0,4 C0,4 0,3 0,3 0,3 1,3 1,3 1,3 1,2 1,2 1,2 2,2 2,2 2,2 2,1 2,1 2,1 3,1 3,1 3,1 3,0 3,0 3,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 0,4 0,4 z" Stretch="Fill" Visibility="Collapsed" Margin="0,0,0,2"  Fill="#FFFFFFFF"/>
                                </Grid>
                                <Grid x:Name="bottomGlyphSet" Visibility="Collapsed">
                                    <Path x:Name="bottomExpandGlyph"  Data="M0,4 L8,4 L4,0 z" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" Margin="0,0,0,2" />
                                    <Path x:Name="bottomCollapseGlyph" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed" Margin="0,0,0,2" />
                                </Grid>
                            </Grid>
                        </ToggleButton>
                        <Border x:Name="panelContainer" Grid.Row="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Grid.Row="1" x:Name="PanelArea" MinHeight="30">
                                <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="10,0"/>
                                <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto" Background="Transparent" BorderThickness="0" Style="{StaticResource igThemeScrollViewerStyle}">
                                    <igPrim:GroupByAreaPanel Margin="5" x:Name="Panel"></igPrim:GroupByAreaPanel>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionVisibilityStates">
                                <VisualState x:Name="ExpansionVisible" />
                                <VisualState x:Name="ExpansionHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandedStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="bottomCollapseGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="topCollapseGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="bottomExpandGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00" Storyboard.TargetName="topExpandGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="NonEmpty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DraggingStates">
                                <VisualState x:Name="NotDragging"/>
                                <VisualState x:Name="Dragging"/>
                                <VisualState x:Name="DraggingOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GroupByAreaLocation">
                                <VisualState x:Name="Top">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="topGlyphSet" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>0</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>1</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Control.BorderThickness)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="bottomGlyphSet" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--____________________________ GroupByHeaderCellControlCloseButton ________________________________________________-->
    <Style x:Key="GroupByHeaderCloseBtn" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource GroupByCloseBtnBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupByCloseBtnBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,0,0,1" />
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bd" RadiusY="2" RadiusX="2" Stroke="{StaticResource ButtonNormalBorderBrush}" StrokeThickness="1" Fill="{StaticResource ButtonNormalBackgroundBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource GroupByHeaderBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3,6,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByHeaderCellControl">
                    <igPrim:SimpleClickableContainer>
                        <igBase:Commanding.Command>
                            <ig:XamGridColumnCommandSource EventName="SimpleClick" CommandType="SortToggle"/>
                        </igBase:Commanding.Command>
                        <Grid x:Name="Root">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="8"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="connectorRec" Fill="#FF000000" Grid.Column="1" Height="1"/>
                            <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>

                            <Border x:Name="fillMoving" Visibility="Collapsed" Background="{StaticResource HeaderMovingBackgroundBrush}" BorderBrush="{StaticResource HeaderMovingBorderBrush}" BorderThickness="0,1"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0"/>
                                <Path x:Name="SortedDescending" Grid.Column="1" Fill="{StaticResource HeaderCellGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M 0 0 L 4 4 L 8 0 Z" Margin="5,0"/>
                                <Path x:Name="SortedAscending" Grid.Column="1" Fill="{StaticResource HeaderCellGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M0,4 L8,4 L4,0 z" Margin="5,0"/>
                                <Button Style="{StaticResource GroupByHeaderCloseBtn}" x:Name="closeButton" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" d:LayoutOverrides="GridBox" Margin="0,0,10,0">
                                    <igBase:Commanding.Command>
                                        <ig:XamGridColumnCommandSource EventName="Click" CommandType="RemoveGroupBy" />
                                    </igBase:Commanding.Command>
                                    <Path
										Width="9"
										Height="7"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 7,7 7,7 7,7 8,7 8,7 8,7 9,7 9,7 9,7 9,6 9,6 9,6 8,6 8,6 8,6 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 0,0 0,0 z"
										Fill="#ffffff"/>
                                </Button>
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fillMoving" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FirstStates">
                                <VisualState x:Name="NotFirst" />
                                <VisualState x:Name="First"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LastStates">
                                <VisualState x:Name="NotLast" />
                                <VisualState x:Name="Last">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </igPrim:SimpleClickableContainer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByMovingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:GroupByMovingIndicator">
        <Setter Property="Background" Value="{StaticResource FocusBrush}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="HorizontalOffset" Value="-8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByMovingIndicator">
                    <Canvas >
                        <Path
			                    Width="{TemplateBinding Width}"
			                    Height="{TemplateBinding Height}"
			                    Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z"
			                    Fill="{TemplateBinding Background}"
                                   Margin="0,-9,0,0"/>
                        <Path
			                    Width="{TemplateBinding Width}"
			                    Height="{TemplateBinding Height}"
			                    Data="M 3,9 C3,9 3,5 3,5 3,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 9,4 9,4 9,4 9,5 9,5 9,5 6,5 6,5 6,5 6,9 6,9 6,9 3,9 3,9 z"
			                    Fill="{TemplateBinding Background}"
                                   Margin="0,22,0,0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByColumnLayoutHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource GroupByColumnLayoutHeaderFill}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FocusBrush}"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
                    <Border x:Name="NormalFill" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedRowSeparator _____________________________________________________-->
    <Style TargetType="igPrim:FixedRowSeparator">
        <Setter Property="Background" Value="#FFB1B1B1"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedRowSeparator">
                    <Rectangle Fill="{TemplateBinding Background}"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ HeaderDropDownControl _____________________________________________________-->
    <Style TargetType="igPrim:HeaderDropDownControl">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:HeaderDropDownControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ResizeStates">
                                <VisualState x:Name="NotResizable"/>
                                <VisualState x:Name="Resizable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="0"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Button x:Name="OpenButton" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" Content="{TemplateBinding OpenButtonContent}" Style="{StaticResource NoChromeBtn}">
                            <igBase:Commanding.Command>
                                <igPrim:XamGridPopupCommandSource CommandType="TogglePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Popup x:Name="Popup" Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="cp"/>
                                <igPrim:PopupResizer x:Name="Resizer" Visibility="Collapsed"  Grid.Row="1" ResizeElement="{Binding ElementName=cp, Path=Content}"
                                                     BorderBrush="{StaticResource GridBorderBrush}"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummarySelectionControl _____________________________________________________-->
    <Style TargetType="igPrim:SummarySelectionControl" >
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="CheckBoxStyle">
            <Setter.Value>
                <Style TargetType="CheckBox">
                    <Setter Property="Background" Value="#FF448DCA"/>
                    <Setter Property="Foreground" Value="#FF000000"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Padding" Value="4,1,0,0"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CheckBox">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0:0:0.2"/>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="Valid"/>
                                            <VisualState x:Name="InvalidUnfocused">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="InvalidFocused">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Rectangle x:Name="normal"
    						Opacity="1"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray2}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                    <Rectangle x:Name="hover"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan0}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" Opacity="0" />
                                    <Rectangle x:Name="pressed"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                    <Rectangle x:Name="focused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                    <Rectangle x:Name="disabled"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                    <Rectangle x:Name="invalidUnfocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource LightBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                    <Rectangle x:Name="invalidFocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource DarkBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                    <Rectangle x:Name="innerShadow"
    						Width="11"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" >
                                        <Rectangle.Fill>

                                            <RadialGradientBrush RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
                                                <GradientStop Color="#00565656" Offset="0.679"/>
                                                <GradientStop Color="#33565656" Offset="0.997"/>
                                            </RadialGradientBrush>

                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Path x:Name="checkBox"
    						Height="8"
    						Width="9"
    						Stretch="Fill"
    						Opacity="0"
    						Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
    						Fill="#505050" HorizontalAlignment="Left" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummarySelectionControl">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Background="{StaticResource FilterSelectionVerticalBrush}" Width="24" Margin="0,-1,0,0" CornerRadius="1,0,0,1" HorizontalAlignment="Left"/>
                            <StackPanel x:Name="Panel" Margin="{TemplateBinding Padding}"/>
                            <Rectangle Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" Margin="1,0" Grid.Row="1"/>
                            <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1" Margin="{TemplateBinding Padding}">
                                <Button x:Name="AcceptButton" Margin="0,0,5,0" Cursor="Hand" Content="{Binding OKCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource igButtonStyle}">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:SummarySelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:SummarySelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                </Button>
                                <Button x:Name="CancelButton" Cursor="Hand" Content="{Binding CancelCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource igButtonStyle}">
                                    <igBase:Commanding.Command>
                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                    </igBase:Commanding.Command>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:CustomFilterDialogContentControl">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:CustomFilterDialogContentControl">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                                        x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--__________________________________ ColumnFilterDialogControl _____________________________________________________-->
    <Style TargetType="igPrim:ColumnFilterDialogControl" >
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnFilterDialogControl">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Border x:Name="Bd" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#7fffffff"/>
                                            <GradientStop Offset="1" Color="#bfffffff"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Opacity="0.75" ShadowDepth="0" Direction="270"/>
                            </Border.Effect>
                        </Border>
                        <Border Background="{TemplateBinding Background}" Margin="5" CornerRadius="3" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" MinWidth="175" />
                                    <ColumnDefinition Width="*" MinWidth="175" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition MinHeight="22"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition MinHeight="22"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ComboBox x:Name="Operator1" Grid.Row="1" Margin="5" Style="{StaticResource ComboBoxStyle}">

                                    <ComboBox.ItemTemplate >
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="16" />
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                                <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <igPrim:CustomFilterDialogContentControl IsTabStop="False" x:Name="Operand1" Grid.Row="1" Grid.Column="1" Margin="5" Width="200"  HorizontalContentAlignment="Stretch"  />

                                <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="20,0,0,0" >
                                    <RadioButton x:Name="And" GroupName="AndOr" Content="{TemplateBinding AndRadioButtonText}" IsChecked="true" Style="{StaticResource igThemeRadioButtonStyle}"/>
                                    <RadioButton x:Name="Or" GroupName="AndOr" Content="{TemplateBinding OrRadioButtonText}"  Margin="10,0,0,0" Style="{StaticResource igThemeRadioButtonStyle}"/>
                                </StackPanel>

                                <ComboBox x:Name="Operator2" Grid.Row="3" Margin="5" Style="{StaticResource ComboBoxStyle}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="16" />
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                                <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <igPrim:CustomFilterDialogContentControl IsTabStop="False" x:Name="Operand2" Grid.Row="3" Grid.Column="1" Margin="5"  Width="200"  HorizontalContentAlignment="Stretch" />

                                <StackPanel Grid.Row="4" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="5">
                                    <Button Content="{TemplateBinding OKButtonText}" Width="74" Margin="0,0,10,0" Style="{StaticResource igButtonStyle}" >
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <igPrim:CustomFilteringDialogControlCommandSource CommandType="Accept" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                                <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                    <Button Content="{TemplateBinding CancelButtonText}" Width="74" Style="{StaticResource igButtonStyle}">
                                        <igBase:Commanding.Command>
                                            <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                        </igBase:Commanding.Command>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--___________________________________ FilterSelectionItemStyle _____________________________________________________-->
    <Style x:Key="FilterSelectionItemStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <Rectangle StrokeThickness="1" Stroke="{StaticResource FilterSelectionItemHighlightBrush}" RadiusY="1" RadiusX="1"/>
                        </Border>
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--_____________________________________________________ CustomFilterDialog Control _____________________________________________________-->

    <DataTemplate x:Key="filterMenuCustom">
        <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}"
                                      IsSeparator="{Binding IsSeparator}"
                                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                      Header="{Binding Label}"
                                      ItemsSource="{Binding Children}"
                                      HorizontalAlignment="Stretch"
                                      SubmenuPreferredLocation="Right">
            <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                    <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" ></ig:XamGridFilterMenuCommandSource>
                    <igPrim:CustomFilteringDialogFilterMenuCommandSource CommandType="ShowCustomFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click" ></igPrim:CustomFilteringDialogFilterMenuCommandSource>
                    <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click"></igPrim:XamGridPopupFilterMenuConditionalCommandSource>
                </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
        </igPrim:FilterMenuXamMenuItem>
    </DataTemplate>
<Style x:Key="RootFilterMenuXamMenuItem" TargetType="igPrim:FilterMenuXamMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="#FF00FF27" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard x:Name="MouseOverStoryboard" >
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderPresenter">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>

                                <VisualState x:Name="Highlighted">
                                	<Storyboard >
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedIndicator">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" >
                                    <Storyboard >
                                        <DoubleAnimation From="1" To=".3" Duration="0"
                                                         Storyboard.TargetName="MenuItemPresenter"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SubmenuState">

                                <VisualState x:Name="SubmenuOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuOpenImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuClose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuCloseImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="MenuItemRole">
                                <VisualState x:Name="TopLevelHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelHeaderWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItemWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ArrowPanel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IsSeperatorItem">
                                <VisualState x:Name="IsNotSeperator"/>
                                <VisualState x:Name="IsSeperator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState >
                            </VisualStateGroup >

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Seperator" Visibility="Collapsed">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OrientationState">
                                    <VisualState x:Name="Horizontal"/>
                                    <VisualState x:Name="Vertical">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1"/>
                            <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="MenuItem">
                            <Rectangle x:Name="SelectedIndicator"
						                                Fill="{StaticResource MenuItemMouseOver}"
						                                Stroke="{StaticResource MenuItemMouseOverBorder}"
						                                Visibility="Collapsed"
						                                Grid.ColumnSpan="3"
						                                HorizontalAlignment="Stretch"
						                                RadiusX="1"
						                                RadiusY="1"
						                                Margin="1"/>
                            <Rectangle x:Name="HighlightedIndicator"
											             Fill="{StaticResource MenuItemHighlighted}"
											             Stroke="{StaticResource MenuItemHighlightedBorder}"
											             Visibility="Collapsed"
											             Grid.ColumnSpan="3"
											             HorizontalAlignment="Stretch"
											             RadiusX="1"
											             RadiusY="1"
											             Margin="1"/>

                            <!-- MenuItemPresenter - presentes the content of the menu item. -->
                            <ContentPresenter x:Name="MenuItemPresenter"
                                                Visibility="Visible"
                                                Opacity="1" Margin="32,0,0,0">
                                <ContentPresenter.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="#59ffffff" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                                        <!-- Icon presenter-->
                                        <ContentControl x:Name="HeaderIconPresenter"
                                                          Height="16"
                                                          Width="16"
                                                          Visibility="{TemplateBinding IconVisibilityResolved}"
                                                          Content="{TemplateBinding Icon}"
                                                          Margin="4,3,4,3"/>

                                        <!-- Checkbox presenter-->
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                                          Margin="4,3,4,3"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <ContentPresenter.Content>
                                                <CheckBox IsTabStop="False" Style="{StaticResource igCheckBoxStyle}" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>

                                        <!-- Header presenter-->
                                        <Grid Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
											<ContentControl x:Name="contentControl" Margin="0,3,5,3" VerticalAlignment="Center"  Grid.Column="0">
                                            	<ContentPresenter x:Name="HeaderPresenter"													           
													            Content="{TemplateBinding Header}"
													            ContentTemplate="{TemplateBinding HeaderTemplate}"/>												           
											</ContentControl>

                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="Black"/>
                                        </Grid>

                                        <!-- Arrow indicator presenter-->
                                        <Grid Grid.Column="2"
										          x:Name="ArrowPanel"
										          VerticalAlignment="Center"
										          HorizontalAlignment="Center"
										          Visibility="Collapsed">
                                            <Path
										            Fill="Black"
										            x:Name="ArrowPanelPath"
										            VerticalAlignment="Center"
										            Margin="7,0,7,0"
										            Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                    </Grid>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup" >
                            <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                                <Border x:Name="PopupBorder" Opacity="0.01"
                                        Background="{StaticResource MenuItemBackgroundBrush}"
                                        BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBrush}"
                                                Width="27"  HorizontalAlignment="Left"/>
                                        <ScrollViewer x:Name="ScrollViewer"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                                                  Style="{StaticResource igThemeScrollViewerStyle}">

                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<DataTemplate x:Key="RootFilterMenuCustom">
        <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}"
                                      IsSeparator="{Binding IsSeparator}"
                                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                      Header="{Binding Label}"
                                      ItemsSource="{Binding Children}"
                                      HorizontalAlignment="Stretch"
                                      SubmenuPreferredLocation="Right"
									  Margin="-24,0,0,0"
									  Style="{StaticResource RootFilterMenuXamMenuItem}"
									  >
            <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                    <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" ></ig:XamGridFilterMenuCommandSource>
                    <igPrim:CustomFilteringDialogFilterMenuCommandSource CommandType="ShowCustomFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click" ></igPrim:CustomFilteringDialogFilterMenuCommandSource>
                    <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click"></igPrim:XamGridPopupFilterMenuConditionalCommandSource>
                </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
        </igPrim:FilterMenuXamMenuItem>
    </DataTemplate>
	
	 <Style x:Key="FilterMenuXamMenuStyle"
           TargetType="igBase:XamMenu">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MenuOrientation" Value="Vertical" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin"
                Value="0,1" />
        <Setter Property="HierarchicalItemTemplate">
            <Setter.Value>
                <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource filterMenuCustom}"
                                                 ItemsSource="{Binding Children}">
                    <igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
                        <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource filterMenuCustom}"
                                                         ItemsSource="{Binding Children}">
                        </igBase:HierarchicalDataTemplate>
                    </igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
                </igBase:HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--____________________________________ FilterSelectionControl ______________________________________________________-->
    <Style TargetType="igPrim:FilterSelectionControl">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="11,0,0,0"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource igCheckBoxStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterSelectionControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionBoxStates">
                                <VisualState x:Name="ShowSelectionBox" />
                                <VisualState x:Name="HideSelectionBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="itemsBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionBoxWaterMark">
                                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                                <VisualState x:Name="HideSelectionBoxWaterMark" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                           Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AppendButtonVisibility">
                                <VisualState x:Name="ShowAppendFilterButton" />
                                <VisualState x:Name="HideAppendFilterButton" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="AppendFiltersCheckBox"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <!-- ClearFilters -->
                                    <RowDefinition Height="Auto" MinHeight="22"/>

                                    <!-- CustomFilterDialog -->
                                    <RowDefinition Height="Auto" />

                                    <!-- The filter text box -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- HorizontalRule -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- SelectAll Checkbox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- Append filter checkbox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- FilterSelectionValues -->
                                    <RowDefinition Height="*" />

                                    <!-- SelectionButtons -->
                                    <RowDefinition Height="Auto"/>

                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <!-- LeftVerticalBackground -->
                                    <ColumnDefinition MinWidth="24" MaxWidth="24"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- LeftVerticalBackground -->
                                <Border HorizontalAlignment="Left" Width="26" Grid.RowSpan="7" VerticalAlignment="Stretch" CornerRadius="2,0,0,0" Background="{StaticResource FilterSelectionVerticalBrush}"/>

                                <!-- ClearFilters Control -->
                                <Button  x:Name="clearButton" Grid.ColumnSpan="2" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Path
												x:Name="clearFilterGlyphStroke"
												Width="11"
												Height="8"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="#FFFFFFFF"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphAdorner"
												HorizontalAlignment="Center"
												VerticalAlignment="Bottom"
												Height="4"
												Width="5"
												Stretch="Fill"
												Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Margin="10,4,0,0"/>
                                        </Grid>
                                        <Rectangle Fill="Transparent" Grid.Column="1"></Rectangle>
                                        <TextBlock  HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0"/>
                                    </Grid>
                                </Button>

                                
                                <!-- CustomFilterDialog Control -->
                                <igBase:XamMenu HorizontalAlignment="Stretch"
                                            MenuOrientation="Vertical"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                            MinHeight="22"
                                            DefaultItemsContainer="{StaticResource RootFilterMenuCustom}"
                                            ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                            Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
											Style="{StaticResource FilterMenuXamMenuStyle}">
				                                <igBase:XamMenu.Resources>
				                                    <Style TargetType="CheckBox"
				                                            BasedOn="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />
				                                </igBase:XamMenu.Resources>
				                            </igBase:XamMenu>
 								
								 <CheckBox x:Name="hasFilterCheckBox"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />
							
									  
                                <igPrim:FilterTextBoxWatermarked
                                FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                HorizontalAlignment="Stretch"
                                Grid.Row="2"
                                Margin="8,7,6,1"
                                Grid.Column="1"
                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                ></igPrim:FilterTextBoxWatermarked>

                                <!-- HorizontalRule -->
                                <Rectangle x:Name="SelectAllCheckBoxSeperator"
                                       Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" Margin="8,7,0,0" Grid.Row="3" Grid.Column="1"/>

                                <!-- SelectAll Checkbox -->
                                <CheckBox x:Name="SelectAllCheckBox" Style="{Binding StaticResource igCheckBoxStyle}" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0"/>

                                <CheckBox x:Name="AppendFiltersCheckBox"
                                          Grid.Row="5"
                                          Grid.Column="1"
                                          Margin="8,7,0,0"
										  Style="{StaticResource igCheckBoxStyle}"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilterText}"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilters, Mode=TwoWay}"
                                          />

                                <!-- FilterSelectionValues -->
                                <TextBlock x:Name="ItemsBoxWatermark"
                                    HorizontalAlignment="Center"
                                    Grid.Row="6"
                                    Grid.Column="1"
                                    Foreground="Silver"
                                    Margin="8,7,6,6"
                                    Padding="0"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}"
                                    />

                               <CheckBox Grid.Row="6"
                                      Grid.Column="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Margin="0,8,0,0"
                                      Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />

                                <ListBox x:Name="itemsBox"
			    						 Style="{StaticResource ListBoxStyle}"
					 					 ItemContainerStyle="{StaticResource igFilterSelectionListBoxItemStyle}"
                                         ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                                         MinHeight="169"
                                         Grid.Row="6"
                                         Grid.Column="1"
                                         Margin="8,7,6,7"
                                         Padding="0"
                                         MinWidth="200"
                                         Background="Transparent">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Content="{Binding ContentString}" IsThreeState="False" Style="{StaticResource igCheckBoxStyle}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <!-- Separator -->

                                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2"/>

                                <!-- SelectionButtons -->
                                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="7" Margin="0,7,6,7" Grid.Column="1">
                                    <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" Style="{StaticResource igButtonStyle}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}" Style="{StaticResource igButtonStyle}">
                                        <igBase:Commanding.Command>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:Commanding.Command>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ClearFiterTxtbxWatermarkButton" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" CornerRadius="0,2,2,0" BorderBrush="{StaticResource ButtonNormalBorderBrush}" BorderThickness="1" Background="{StaticResource ButtonNormalBackgroundBrush}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:FilterTextBoxWatermarked">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterTextBoxWatermarked">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WaterMarks">
                                <VisualState x:Name="ShowWaterMark"></VisualState>
                                <VisualState x:Name="HideWaterMark">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Duration="00:00:00.0010000"
                                           Storyboard.TargetName="Watermark"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ClearButtonStates">
                                <VisualState x:Name="ShowClearButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideClearButton"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Bg" Fill="{StaticResource TextBoxGradient}" RadiusY="3" RadiusX="3" Stroke="{StaticResource Gray2}" StrokeThickness="1" Margin="0"/>
                        <Border x:Name="border" Height="14" Width="14" HorizontalAlignment="Right" Margin="0,0,7,0" VerticalAlignment="Center">
                            <Viewbox>
                                <Grid>
                                    <Path Data="M19.869999,34.438999 L28.593,44.078999 L8.7229996,62.127998 L0,52.488998 z M41.877007,5.999999 C35.006012,5.9999995 28.87801,10.367 26.630009,16.865 C25.220009,20.938 25.48201,25.315998 27.365009,29.192999 C29.248009,33.07 32.529011,35.98 36.602013,37.389999 C38.31601,37.981998 40.091007,38.283001 41.880009,38.283001 C48.751007,38.283001 54.878006,33.917 57.127007,27.416998 C58.536007,23.344999 58.275009,18.966999 56.392006,15.09 C54.507008,11.213 51.228008,8.302 47.155006,6.8940001 L47.154007,6.8930001 C45.442009,6.2999997 43.666008,5.9999995 41.877007,5.999999 z M41.877007,0 C44.279007,1.4113701E-07 46.720009,0.39400011 49.117008,1.223 C60.669006,5.2199993 66.794014,17.827 62.797009,29.379997 C59.629005,38.535999 51.053009,44.282997 41.880009,44.282997 C39.479008,44.282997 37.036011,43.888996 34.640011,43.059998 C23.087009,39.063 16.962011,26.456999 20.960011,14.903 C24.12801,5.7469997 32.70401,1.4113701E-07 41.877007,0 z" Margin="-0.827,0,0.807,-0.128" Stretch="Fill" UseLayoutRounding="False" Stroke="#FF548CB6" StrokeThickness="0.5">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF1A1A1A" Offset="0.994"/>
                                                <GradientStop Color="#FF6E6E6E"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </Border>
                        <Border BorderThickness="1" Padding="5,0,0,0">
                            <TextBlock x:Name="Watermark" Foreground="Gray" Text="{TemplateBinding Watermark}" Grid.Row="0" VerticalAlignment="Center" />
                        </Border>
                        <igPrim:FilterTextBox x:Name="FilterTextBox"
                    		Background="Transparent"
                    		Grid.Row="0"
                    		HorizontalAlignment="Stretch"
                    		Text="{Binding FilterSelectionControl.FilterText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    		DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" Padding="3,2,2,2" BorderBrush="{x:Null}"
                                              >

                            <igBase:Commanding.Command>
                                <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="TextChanged"
                    				CommandType="Filter"
                    				FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                            </igBase:Commanding.Command>
                        </igPrim:FilterTextBox>
                        <Border HorizontalAlignment="Right" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Padding="0" >
                            <Button x:Name="ClearButton" DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Style="{StaticResource ClearFiterTxtbxWatermarkButton}" Width="17" Margin="0" Visibility="Collapsed">
                                <igBase:Commanding.Command>
                                    <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="Click"
                    					CommandType="ClearFilterText"
                    					FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                                </igBase:Commanding.Command>
                                <Viewbox Height="8" Margin="0" Stretch="Fill" Width="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" Stroke="White" StrokeThickness="2">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFC8C8C8" Offset="1"/>
                                                <GradientStop Color="#FFE9E9E9"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>

                                </Viewbox>
                            </Button>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxWidth" Value="Infinity"/>
    </Style>

    <Style TargetType="igPrim:DataBarControl">
        <Setter Property="BarHeight" Value="18"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DataBarControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DataBarDisplay">
                                <VisualState x:Name="UnidirectionalBarLeftToRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnidirectionalBarRightToLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="UnidirectionalDataBarRectangle" Storyboard.TargetProperty="(Grid.Column)" >
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BidirectionalBar">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="BidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="None"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Visibility="Collapsed" x:Name="UnidirectionalDataBar" Height="{TemplateBinding BarHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="UniDataBar" Width="*"></ColumnDefinition>
                                <ColumnDefinition x:Name="UniDataBarSpacer" Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="UnidirectionalDataBarRectangle"	Grid.Column="0"	Fill="{TemplateBinding UnidirectionalDataBarBrush}" />
                        </Grid>
                        <Grid x:Name="BidirectionalDataBar" Visibility="Collapsed"  Height="{TemplateBinding BarHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="BiNegativeColumnSpacer" Width="*"></ColumnDefinition>
                                    <ColumnDefinition x:Name="BiNegativeColumn" Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" x:Name="NegativeDataBar" HorizontalAlignment="Stretch" Fill="{TemplateBinding NegativeValueBarBrush}"></Rectangle>
                            </Grid>
                            <Grid Grid.Column="1" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" x:Name="BiPositiveColumn"></ColumnDefinition>
                                    <ColumnDefinition Width="*"  x:Name="BiPositiveColumnSpacer"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" x:Name="PositiveDataBar"  HorizontalAlignment="Stretch" Fill="{TemplateBinding PositiveValueBarBrush}"></Rectangle>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ConditionalFormattingCellControl _____________________________________________________-->
    <Style TargetType="ig:ConditionalFormattingCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="AltBackground" Value="{StaticResource CellItemAltNormalBackgroundBrush}" />
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="NegativeBarBrush" Value="{StaticResource DataBarBidirectionNegativeBrush}"></Setter>
        <Setter Property="BarBrush" Value="{StaticResource DataBarBidirectionPositiveBrush }"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:ConditionalFormattingCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverElem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentControl" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="White"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cellSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatIcon">
                                <VisualState x:Name="ShowConditionalFormattingIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideConditionalFormattingIcon"></VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatDataDisplay">
                                <VisualState x:Name="ShowData"></VisualState>
                                <VisualState x:Name="HideData">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CellDisplay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatDataBar">
                                <VisualState x:Name="HideDataBar"></VisualState>
                                <VisualState x:Name="ShowDataBar">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding AltBackground}" Visibility="Collapsed" x:Name="AltElem"/>
                        <Border x:Name="cellSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1" Visibility="Collapsed" Grid.ColumnSpan="2"/>
                        <Border x:Name="hoverElem" BorderBrush="{StaticResource CellItemHoverBorderBrush}" BorderThickness="1" Background="{StaticResource CellItemHoverBackgroundBrush}" Visibility="Collapsed" Grid.ColumnSpan="2"/>

                        <igPrim:DataBarControl
							Grid.ColumnSpan="2"
							Margin="1"
							DataBarDirection="{TemplateBinding BarDirection}"
							PositiveValueBarBrush="{TemplateBinding BarBrush}"
							NegativeValueBarBrush="{TemplateBinding NegativeBarBrush}"
							BarPercentage="{TemplateBinding BarPercentage}"
							DataBarPositiveNegative="{TemplateBinding BarPositiveOrNegative}"
							Visibility="Collapsed"
							x:Name="DataBar"/>

                        <ContentControl x:Name="FormattingIcon" Visibility="Collapsed" ContentTemplate="{TemplateBinding Icon}" VerticalAlignment="Center"></ContentControl>
                        <ContentControl x:Name="contentControl" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Grid.Column="1">
                            <ContentPresenter x:Name="CellDisplay"/>
                        </ContentControl>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooserDialog CloseBtn _______________________________________________-->
    <Style x:Key="ColumnChooserDialogCloseBtn" TargetType="Button">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="2" BorderBrush="#FF9B3D3D" BorderThickness="1" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFff8482"/>
                                            <GradientStop Offset="0.20" Color="#FFff8482"/>
                                            <GradientStop Offset="1" Color="#FFe36162"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00f87a79" Offset="0"/>
                                        <GradientStop Color="#fff87a79" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Grid x:Name="grid" Visibility="Collapsed">
                                    <Rectangle RadiusX="1" RadiusY="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFda6163"/>
                                                        <GradientStop Offset="0.10" Color="#FFf27776"/>
                                                        <GradientStop Offset="0.85" Color="#FFf27776"/>
                                                        <GradientStop Offset="1" Color="#FFda6163"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle RadiusY="1" RadiusX="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFda6163"/>
                                                        <GradientStop Offset="0.10" Color="#00f27776"/>
                                                        <GradientStop Offset="0.85" Color="#00f27776"/>
                                                        <GradientStop Offset="1" Color="#FFda6163"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                        </Border>
                        <ContentControl x:Name="contentControl" Foreground="#FF000000">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </ContentControl>
                        <Border x:Name="DisabledVisualElement" Background="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" CornerRadius="0,0,0,4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooserDialog _____________________________________________________-->
    <Style TargetType="igPrim:ColumnChooserDialog">
        <Setter Property="Background" Value="{StaticResource ColumnChooserDialogBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxHeight" Value="225"/>
        <Setter Property="Padding" Value="0,0,0,5"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnChooserDialog">
                    <Grid>
                        <Popup x:Name="Popup">
                            <Grid MaxHeight="{TemplateBinding MaxHeight}" x:Name="RootElement" >
                                <Border   BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"   CornerRadius="3">
                                    <Border.Effect>
                                        <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="15" Opacity="0.6"/>
                                    </Border.Effect>
                                </Border>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="Transparent"   CornerRadius="3">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <!-- HEADER CAPTION -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="HeaderElem" Background="{StaticResource HeaderNormalBackgroundBrush}" BorderBrush="{StaticResource HeaderNormalBorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" CornerRadius="2,2,0,0">
                                                <TextBlock Foreground="{StaticResource HeaderNormalForegroundBrush}" Text="{Binding ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="5,0"/>
                                            </Border>
                                            <Button Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource igButtonStyle}" VerticalAlignment="Center" Margin="5,0" Cursor="Hand">
                                                <igBase:Commanding.Command>
                                                    <ig:XamGridColumnChooserCommandSource EventName="Click" CommandType="Close"/>
                                                </igBase:Commanding.Command>
                                                <Path Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Fill="#E4FFFFFF" Stretch="Fill" Stroke="#FF525565" Data="M0.5,0.5 L4.5178828,0.5 L6.0620003,3.125 L7.4936447,0.5 L11.5,0.5 L11.5,1.5476431 L8.7425003,6.1201854 L11.5,10.359666 L11.5,11.5 L7.4941902,11.5 L6.0620003,8.8740005 L4.5172949,11.5 L0.5,11.5 L0.5,10.43379 L3.3059995,6.1201582 L0.5,1.4676378 L0.5,0.5 z"/>
                                            </Button>
                                        </Grid>

                                        <!-- LABELS -->
                                        <Grid x:Name="labels" Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="dragHandleColumn" Width="25"/>
                                                <ColumnDefinition x:Name="viewLabel" Width="35"/>
                                                <ColumnDefinition x:Name="columnLabel" Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{TemplateBinding ViewLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBlock Text="{TemplateBinding ColumnLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="9,0"/>
                                            <Rectangle x:Name="labelAreaSeparator" Height="1" Fill="#FFEBEBEB" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="3"/>
                                        </Grid>

                                        <!-- ITEMS -->
                                        <Grid Grid.Row="2">
                                            <igPrim:GridSortableListBox IsSortable="{Binding IsSortable, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" BorderThickness="0" Margin="{TemplateBinding Padding}" Style="{StaticResource igThemeListBoxStyle}">
                                                <igPrim:GridSortableListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="35"/>
                                                                <!-- This column width is equal width to the "labels" grid column "viewLabel" -->
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox IsEnabled="{Binding IsHideable}" IsChecked="{Binding Visibility, Mode=TwoWay, Converter={StaticResource VisToBool}}" HorizontalAlignment="Center">
                                                                <CheckBox.Style>
                                                                    <Style TargetType="CheckBox">
                                                                        <Setter Property="Background" Value="#FF448DCA"/>
                                                                        <Setter Property="Foreground" Value="#FF000000"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                        <Setter Property="Padding" Value="4,1,0,0"/>
                                                                        <Setter Property="BorderThickness" Value="1"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="CheckBox">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="16"/>
                                                                                            <ColumnDefinition Width="*"/>
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <VisualStateManager.VisualStateGroups>
                                                                                            <VisualStateGroup x:Name="CommonStates">
                                                                                                <VisualStateGroup.Transitions>
                                                                                                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                                                                                                </VisualStateGroup.Transitions>
                                                                                                <VisualState x:Name="Normal"/>
                                                                                                <VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Disabled">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                                <VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unchecked"/>
                                                                                                <VisualState x:Name="Indeterminate"/>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="FocusStates">
                                                                                                <VisualState x:Name="Focused">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="Unfocused"/>
                                                                                            </VisualStateGroup>
                                                                                            <VisualStateGroup x:Name="ValidationStates">
                                                                                                <VisualState x:Name="Valid"/>
                                                                                                <VisualState x:Name="InvalidUnfocused">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                                <VisualState x:Name="InvalidFocused">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" d:IsOptimized="True"/>
                                                                                                    </Storyboard>
                                                                                                </VisualState>
                                                                                            </VisualStateGroup>
                                                                                        </VisualStateManager.VisualStateGroups>
                                                                                        <Rectangle x:Name="normal"
    						Opacity="1"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray2}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                                                                        <Rectangle x:Name="hover"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan0}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" Opacity="0" />
                                                                                        <Rectangle x:Name="pressed"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                                                                        <Rectangle x:Name="focused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Cyan1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                                                                        <Rectangle x:Name="disabled"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource Gray1}"
    						StrokeThickness="1"
    						Fill="{StaticResource CheckBoxFill}" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" />
                                                                                        <Rectangle x:Name="invalidUnfocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource LightBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                                                                        <Rectangle x:Name="invalidFocused"
    						Opacity="0"
    						Width="13"
    						RadiusX="1"
    						RadiusY="1"
    						Stroke="{StaticResource DarkBrush12}"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="2,2,0,2" Height="13" VerticalAlignment="Top" Fill="{StaticResource CheckBoxFill}" />
                                                                                        <Rectangle x:Name="innerShadow"
    						Width="11"
    						StrokeThickness="1" HorizontalAlignment="Left" Margin="3,3,0,0" Height="11" VerticalAlignment="Top" >
                                                                                            <Rectangle.Fill>

                                                                                                <RadialGradientBrush RadiusX="0.916" RadiusY="2.028" Center="0.929,0.499" GradientOrigin="0.929,0.499">
                                                                                                    <GradientStop Color="#00565656" Offset="0.679"/>
                                                                                                    <GradientStop Color="#33565656" Offset="0.997"/>
                                                                                                </RadialGradientBrush>

                                                                                            </Rectangle.Fill>
                                                                                        </Rectangle>
                                                                                        <Path x:Name="checkBox"
    						Height="8"
    						Width="9"
    						Stretch="Fill"
    						Opacity="0"
    						Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z"
    						Fill="#505050" HorizontalAlignment="Left" Margin="4,5,0,0" UseLayoutRounding="False" VerticalAlignment="Top" />
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </CheckBox.Style>
                                                            </CheckBox>
                                                            <TextBlock Grid.Column="1" Text="{Binding DisplayNameResolved}" Margin="6,0"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </igPrim:GridSortableListBox.ItemTemplate>
                                                <igPrim:GridSortableListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical"></StackPanel>
                                                    </ItemsPanelTemplate>
                                                </igPrim:GridSortableListBox.ItemsPanel>
                                            </igPrim:GridSortableListBox>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GridSortableListBoxItem">
        <Setter Property="Padding" Value="4,4,20,4" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#FFEBEBEB"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Foreground" Value="#FF4E4E4E"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBoxItem">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <!-- This column width is equal width to the "labels" grid column "dragHandleColumn" -->
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DragHandle" Background="Transparent" BorderBrush="#FFEBEBEB" BorderThickness="0,0,1,0"  Cursor="Hand">
                                <Grid>
                                    <Rectangle Width="1" Fill="#7FFFFFFF" HorizontalAlignment="Right"/>
                                    <Path
					                    Height="11"
					                    Width="6"
					                    Data="M 4,9 C4,9 4,11 4,11 4,11 6,11 6,11 6,11 6,9 6,9 6,9 4,9 4,9 zM 0,9 C0,9 0,11 0,11 0,11 2,11 2,11 2,11 2,9 2,9 2,9 0,9 0,9 zM 4,6 C4,6 4,8 4,8 4,8 6,8 6,8 6,8 6,6 6,6 6,6 4,6 4,6 zM 0,6 C0,6 0,8 0,8 0,8 2,8 2,8 2,8 2,6 2,6 2,6 0,6 0,6 zM 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,3 C4,3 4,5 4,5 4,5 6,5 6,5 6,5 6,3 6,3 6,3 4,3 4,3 zM 0,3 C0,3 0,5 0,5 0,5 2,5 2,5 2,5 2,3 2,3 2,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z"
					                    Fill="{StaticResource GridBorderBrush}"/>
                                </Grid>
                            </Border>
                            <Grid Grid.Column="1">
                                <ContentPresenter
                                        x:Name="contentPresenter"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"/>
                            </Grid>
                            <Popup x:Name="Popup"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GroupCellControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupCellControl">
                    <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GroupHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupHeaderCellControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="Bd">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenLeftAdjacentColumnsElement" Grid.Column="0" Width="Auto">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ToolTipService.ToolTip>
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Border Background="{TemplateBinding Background}" Width="10">
                                            <Rectangle Fill="{StaticResource FocusBrush}" Width="3" HorizontalAlignment="Left"/>
                                        </Border>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Grid>
                                        <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="25"  MaxWidth="25"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" Background="{StaticResource FilterSelectionVerticalBrush}" CornerRadius="1,0,0,1"/>
                                                <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                </ListBox>
                                                <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                    <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource SeparatorBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                    <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                        <igBase:Commanding.Commands>
                                                            <igBase:CommandSourceCollection>
                                                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                            </igBase:CommandSourceCollection>
                                                        </igBase:Commanding.Commands>
                                                        <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </igPrim:HeaderDropDownControl>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid
								Grid.Column="2"
								x:Name="SortAndPinIndicators"
								HorizontalAlignment="Right"
								Margin="0,0,5,0"
								Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{StaticResource HeaderDropDownButtonStyle}" x:Name="PinnedIndicator" Grid.Column="1" Visibility="Collapsed" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
										Width="7"
										Height="10"
										Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
											Stretch="Fill"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                                                </ig:XamGridColumnCommandSource>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                    <Button x:Name="UnpinnedIndicator" Visibility="Collapsed" Style="{StaticResource HeaderDropDownButtonStyle}" Grid.Column="1" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
										Width="10"
										Height="7"
										Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                                                </ig:XamGridColumnCommandSource>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                    <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="Transparent" Visibility="Collapsed" Grid.Column="0">
                                        <igPrim:HeaderDropDownControl.OpenButtonContent>
                                            <Grid Background="Transparent">
                                                <Path
											        Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
											        Fill="{StaticResource HeaderCellGlyphBrush}"
											        Width="5"
											        Height="7"
											        x:Name="summarySigmaIcon"
											        StrokeThickness="0"/>
                                            </Grid>
                                        </igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:SummarySelectionControl>
                                    </igPrim:HeaderDropDownControl>
                                    <Button x:Name="VisibilityToggleButton" Style="{StaticResource HeaderDropDownButtonStyle}" Visibility="Collapsed" Grid.Column="2" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
				                                Width="8"
				                                Height="7"
				                                Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
				                                Fill="{StaticResource HeaderCellGlyphBrush}"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown"/>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                </Grid>
                                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4" Width="Auto">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ToolTipService.ToolTip>
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Border Background="{TemplateBinding Background}" Width="10">
                                            <Rectangle Fill="{StaticResource FocusBrush}" Width="3" HorizontalAlignment="Right"/>
                                        </Border>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Grid>
                                        <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource FocusBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="25" MaxWidth="25"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" Background="{StaticResource FilterSelectionVerticalBrush}" CornerRadius="1,0,0,1"/>
                                                <ListBox DataContext="{x:Null}"  ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                </ListBox>
                                                <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                    <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource SeparatorBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                    <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                        <igBase:Commanding.Commands>
                                                            <igBase:CommandSourceCollection>
                                                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                            </igBase:CommandSourceCollection>
                                                        </igBase:Commanding.Commands>
                                                        <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    </Button>

                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </igPrim:HeaderDropDownControl>
                            </Grid>
                        </Border>
                        <igPrim:GroupColumnPanel x:Name="Panel" Grid.Row="1" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="SortAndPinIndicators"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderMovingBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedIndicatorStates">
                                <VisualState x:Name="NotFixable"/>
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="VisibilityIconStates">
                                <VisualState x:Name="VisibilityIconHidden"/>
                                <VisualState x:Name="VisibilityIconVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenLeftAdjacentColumns"/>
                                <VisualState x:Name="HiddenLeftAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenRightAdjacentColumns"/>
                                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnLayoutTemplateCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ColumnLayoutTemplateCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnLayoutTemplateCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1" Visibility="Collapsed"/>
                        <ContentPresenter   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ MergedSummaryCellControl _____________________________________________________-->
    <Style TargetType="igPrim:MergedSummaryCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Padding" Value="7,3"/>
        <Setter Property="SummaryDisplayTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
                        <TextBlock Text=" = "/>
                        <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:MergedSummaryCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Rectangle Height="1" VerticalAlignment="Top" Fill="#7FFFFFFF"/>
                        </Border>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>
                        <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="Right" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <igPrim:DateFilterHierarchicalDataTemplate x:Key="dateTreeDataTemplate" ItemsSource="{Binding Children}">
        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource igCheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
            <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource igCheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                    <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource igCheckBoxStyle}"  Content="{Binding ContentString}"></CheckBox>
                        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                            <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource igCheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                                    <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource igCheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                                    </igPrim:DateFilterHierarchicalDataTemplate>
                                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                            </igPrim:DateFilterHierarchicalDataTemplate>
                        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                    </igPrim:DateFilterHierarchicalDataTemplate>
                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
            </igPrim:DateFilterHierarchicalDataTemplate>
        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
    </igPrim:DateFilterHierarchicalDataTemplate>
    <igPrim:DateFilterTypeConverter x:Key="dateFilterTypeConverter"></igPrim:DateFilterTypeConverter>

    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />

            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock UseLayoutRounding="false" Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
            </Border>
        </Grid>
    </ControlTemplate>
    <Style TargetType="igPrim:DateFilterTreeViewItem">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Margin" Value="0 1 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DateFilterTreeViewItem">
                    <Grid Background="{x:Null}">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal" />
                				<VisualState x:Name="MouseOver" />
                				<VisualState x:Name="Pressed" />
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground" Duration="0">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<SolidColorBrush Color="#FF999999" />
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="SelectionStates">
                				<VisualState x:Name="Unselected" />
                				<VisualState x:Name="Selected">
                					<Storyboard>
                						<DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="SelectedInactive">
                					<Storyboard>
                						<DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To=".2" />
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="HasItemsStates">
                				<VisualState x:Name="HasItems" />
                				<VisualState x:Name="NoItems">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="ExpanderButton"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ExpansionStates">
                				<VisualState x:Name="Collapsed" />
                				<VisualState x:Name="Expanded">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="ItemsHost"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ValidationStates">
                				<VisualState x:Name="Valid" />
                				<VisualState x:Name="InvalidUnfocused">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="Validation"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="InvalidFocused">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="Validation"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationToolTip" Storyboard.TargetProperty="IsOpen">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<System:Boolean>True</System:Boolean>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="FocusStates">
                				<VisualState x:Name="Focused"/>
                				<VisualState x:Name="Unfocused"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Grid.RowDefinitions>
                			<RowDefinition Height="Auto" />
                			<RowDefinition Height="*" />
                		</Grid.RowDefinitions>
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="15" />
                			<ColumnDefinition Width="*" />
                		</Grid.ColumnDefinitions>

                		<ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False" >
                			<ToggleButton.Template>
                				<ControlTemplate TargetType="ToggleButton">
                					<Grid x:Name="Root" Background="Transparent">
                						<VisualStateManager.VisualStateGroups>
                							<VisualStateGroup x:Name="CommonStates">
                								<VisualState x:Name="Normal" />
                								<VisualState x:Name="MouseOver">
                									<Storyboard>
                										<ColorAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Path.Stroke).Color" To="#FF1BBBFA" Duration="0" />
                									</Storyboard>
                								</VisualState>
                								<VisualState x:Name="Disabled">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                							<VisualStateGroup x:Name="CheckStates">
                								<VisualState x:Name="Unchecked" />
                								<VisualState x:Name="Checked">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                										<DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                						</VisualStateManager.VisualStateGroups>
                						<Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                							<Path x:Name="UncheckedVisual" Width="6" Height="9" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Right" Data="M 0,0 L 0,9 L 5,4.5 Z" StrokeThickness="1" StrokeLineJoin="Miter" Stroke="#FF989898"/>
                							<Path x:Name="CheckedVisual" Opacity="0" Width="6" Height="6" Fill="#FF262626" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M 6,0 L 6,6 L 0,6 Z" StrokeLineJoin="Miter" />
                						</Grid>
                					</Grid>
                				</ControlTemplate>
                			</ToggleButton.Template>
                		</ToggleButton>
                		<Rectangle x:Name="Selection" Fill="{StaticResource LightGrayGradient}" IsHitTestVisible="False" RadiusY="1" RadiusX="1" Stroke="{StaticResource Gray2}" Opacity="0"  Grid.Column="1" />
                		<Button x:Name="Header" Grid.Column="1" ClickMode="Hover" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" >
                			<Button.Template>
                				<ControlTemplate TargetType="Button">
                					<Grid Background="{TemplateBinding Background}">
                						<VisualStateManager.VisualStateGroups>
                							<VisualStateGroup x:Name="CommonStates">
                								<VisualState x:Name="Normal" />
                								<VisualState x:Name="Pressed">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                									</Storyboard>
                								</VisualState>
                								<VisualState x:Name="Disabled">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                						</VisualStateManager.VisualStateGroups>
                						<Border x:Name="Hover" Background="{StaticResource DropDown_Hover}" BorderBrush="{StaticResource DropDownStroke_Hover}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" CornerRadius="1" />
                						<ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" />
					
                					</Grid>
                				</ControlTemplate>
                			</Button.Template>
                			<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                		</Button>
                		<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--____________________________________ DateFilterSelectionControl ______________________________________________________-->
    <Style TargetType="igPrim:DateFilterSelectionControl">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="DateFilterHierarchicalDataTemplate" Value="{StaticResource dateTreeDataTemplate}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="11,0,0,0"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource igCheckBoxStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DateFilterSelectionControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionBoxStates">
                                <VisualState x:Name="ShowSelectionBox" />
                                <VisualState x:Name="HideSelectionBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ItemsBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionBoxWaterMark">
                                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                                <VisualState x:Name="HideSelectionBoxWaterMark" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                           Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AppendButtonVisibility">
                                <VisualState x:Name="ShowAppendFilterButton" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="AppendFiltersCheckBox"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideAppendFilterButton" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Border.Effect>
                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                            </Border.Effect>
                        </Border>

                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <!-- ClearFilters -->
                                    <RowDefinition Height="Auto" MinHeight="22"/>

                                    <!-- CustomFilterDialog -->
                                    <RowDefinition Height="Auto" />

                                    <!-- Filter TextBox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- HorizontalRule -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- SelectAll Checkbox -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- Append filter checkbox -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- FilterSelectionValues -->
                                    <RowDefinition Height="*" />

                                    <!-- SelectionButtons -->
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <!-- LeftVerticalBackground -->
                                    <ColumnDefinition MinWidth="24" MaxWidth="24"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- LeftVerticalBackground -->
                                <Border Grid.RowSpan="7" Background="{StaticResource FilterSelectionVerticalBrush}"/>

                                <!-- ClearFilters Control -->
                                <Button x:Name="clearButton" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Path
												x:Name="clearFilterGlyphStroke"
												Width="11"
												Height="8"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="#FFFFFFFF"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphAdorner"
												HorizontalAlignment="Center"
												VerticalAlignment="Bottom"
												Height="4"
												Width="5"
												Stretch="Fill"
												Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Margin="10,4,0,0"/>
                                        </Grid>
                                        <Rectangle Fill="Transparent" Grid.Column="1"></Rectangle>
                                        <TextBlock  HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0"/>
                                    </Grid>
                                </Button>

                                

                                <!-- CustomFilterDialog Control -->
                                <igBase:XamMenu x:Name="filtersMenu"
											HorizontalAlignment="Stretch"
											MenuOrientation="Vertical"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                            MinHeight="22"
                                            DefaultItemsContainer="{StaticResource RootFilterMenuCustom}"
                                            ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                            Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                            Style="{StaticResource FilterMenuXamMenuStyle}">
                                    <igBase:XamMenu.Resources>
                                        <Style TargetType="CheckBox"
                                               BasedOn="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />
                                    </igBase:XamMenu.Resources>
                                </igBase:XamMenu>
								
								<CheckBox x:Name="hasFilterCheckBox"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />

                                <Grid Grid.Row="2" Grid.Column="1" Margin="7,7,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"></ColumnDefinition>
                                        <ColumnDefinition Width="80"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <igPrim:FilterTextBoxWatermarked FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                 HorizontalAlignment="Stretch"
                                                                 Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Converter={StaticResource dateFilterTypeConverter}}"
                                                                 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"    >
                                    </igPrim:FilterTextBoxWatermarked>
                                    
									<ComboBox x:Name="dateFilterType" Grid.Column="1"
											Style="{StaticResource DateFilterComboBoxStyle}"
											Margin="5,0,5,0"
                                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterTypeList}"
                                            DisplayMemberPath="Name"
                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                            SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Mode=TwoWay}"
                                          />
                                </Grid>

                                <!-- HorizontalRule -->
                                <Rectangle x:Name="SelectAllCheckBoxSeperator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" Margin="7,7,7,0" Grid.Row="3" Grid.Column="1"/>

                                <!-- SelectAll Checkbox -->
                                <CheckBox x:Name="SelectAllCheckBox" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0"/>

                                <CheckBox x:Name="AppendFiltersCheckBox"
                                          Visibility="Collapsed"
                                          Grid.Row="5"
                                          Grid.Column="1"
					  Style="{StaticResource igCheckBoxStyle}"
                                          Margin="8,7,0,0"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                            Path=AppendFilterText}"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                              Path=AppendFilters,
                                                              Mode=TwoWay}"
                                          />

                                <TextBlock x:Name="ItemsBoxWatermark"
                                    HorizontalAlignment="Center"
                                    Grid.Row="6"
                                    Grid.Column="1"
                                    Foreground="Silver"
                                    Margin="8,7,6,0"
                                    Padding="0"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}"
                                    />
									
								<CheckBox Grid.Row="6"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}"
                                          Margin="0,8,0,0" />

                                <!-- FilterSelectionValues -->
                                <igPrim:DateFilterTreeView ItemTemplate="{TemplateBinding DateFilterHierarchicalDataTemplate}"
                                          x:Name="ItemsBox"
                                          ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                                          MinHeight="169"
                                          Grid.Row="6"
                                          Grid.Column="1"
                                          Margin="8,7,6,7"
                                          Padding="0"
                                          Background="Transparent"
										  BorderBrush="#FFC5C5C5"
                                          >
                                	<igPrim:DateFilterTreeView.Resources>
                                		<Style TargetType="ScrollViewer" BasedOn="{StaticResource igThemeScrollViewerStyle}" />		                       	
									</igPrim:DateFilterTreeView.Resources>
                                </igPrim:DateFilterTreeView>

                                <!-- Separator -->

                                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2"/>

                                <!-- SelectionButtons -->
                                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="7" Margin="0,7,6,7" Grid.Column="1">
                                    <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" Style="{StaticResource igButtonStyle}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}"  Style="{StaticResource igButtonStyle}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GridSortableListBox">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="2"
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Placement="Right"
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--__________________________________ FilterMenu Item Styles _____________________________________________________-->

    <Style TargetType="igPrim:FilterMenuXamMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="#FF00FF27" /> 		   
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard x:Name="MouseOverStoryboard" >
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HeaderPresenter">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>

                                <VisualState x:Name="Highlighted">
                                	<Storyboard >
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedIndicator">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                		<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" >
                                    <Storyboard >
                                        <DoubleAnimation From="1" To=".3" Duration="0"
                                                         Storyboard.TargetName="MenuItemPresenter"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SubmenuState">

                                <VisualState x:Name="SubmenuOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuOpenImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuClose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuCloseImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="MenuItemRole">
                                <VisualState x:Name="TopLevelHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelHeaderWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItemWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ArrowPanel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IsSeperatorItem">
                                <VisualState x:Name="IsNotSeperator"/>
                                <VisualState x:Name="IsSeperator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState >
                            </VisualStateGroup >

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Seperator" Visibility="Collapsed">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OrientationState">
                                    <VisualState x:Name="Horizontal"/>
                                    <VisualState x:Name="Vertical">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1"/>
                            <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="MenuItem">
                            <Rectangle x:Name="SelectedIndicator"
						                                Fill="{StaticResource MenuItemMouseOver}"
						                                Stroke="{StaticResource MenuItemMouseOverBorder}"
						                                Visibility="Collapsed"
						                                Grid.ColumnSpan="3"
						                                HorizontalAlignment="Stretch"
						                                RadiusX="1"
						                                RadiusY="1"
						                                Margin="1"/>
                            <Rectangle x:Name="HighlightedIndicator"
											             Fill="{StaticResource MenuItemHighlighted}"
											             Stroke="{StaticResource MenuItemHighlightedBorder}"
											             Visibility="Collapsed"
											             Grid.ColumnSpan="3"
											             HorizontalAlignment="Stretch"
											             RadiusX="1"
											             RadiusY="1"
											             Margin="1"/>

                            <!-- MenuItemPresenter - presentes the content of the menu item. -->
                            <ContentPresenter x:Name="MenuItemPresenter"
                                                Visibility="Visible"
                                                Opacity="1">
                                <ContentPresenter.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="#59ffffff" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                                        <!-- Icon presenter-->
                                        <ContentControl x:Name="HeaderIconPresenter"
                                                          Height="16"
                                                          Width="16"
                                                          Visibility="{TemplateBinding IconVisibilityResolved}"
                                                          Content="{TemplateBinding Icon}"
                                                          Margin="4,3,4,3"/>

                                        <!-- Checkbox presenter-->
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                                          Margin="4,3,4,3"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <ContentPresenter.Content>
                                                <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>

                                        <!-- Header presenter-->
                                        <Grid Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
											<ContentControl x:Name="contentControl" Margin="0,3,5,3" VerticalAlignment="Center"  Grid.Column="0">
                                            	<ContentPresenter x:Name="HeaderPresenter"													           
													            Content="{TemplateBinding Header}"
													            ContentTemplate="{TemplateBinding HeaderTemplate}"/>												           
											</ContentControl>

                                            <TextBlock x:Name="textBlock" Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="Black"/>
                                        </Grid>

                                        <!-- Arrow indicator presenter-->
                                        <Grid Grid.Column="2"
										          x:Name="ArrowPanel"
										          VerticalAlignment="Center"
										          HorizontalAlignment="Center"
										          Visibility="Collapsed">
                                            <Path
										            Fill="Black"
										            x:Name="ArrowPanelPath"
										            VerticalAlignment="Center"
										            Margin="7,0,7,0"
										            Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                    </Grid>
                                </ContentPresenter.Content> 
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup" >
                            <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                                <Border x:Name="PopupBorder" Opacity="0.01"
                                        Background="{StaticResource MenuItemBackgroundBrush}"
                                        BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBrush}"
                                                Width="27"  HorizontalAlignment="Left"/>
                                        <ScrollViewer x:Name="ScrollViewer"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                                                  Style="{StaticResource igThemeScrollViewerStyle}">

                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>