<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:igBase="http://schemas.infragistics.com/xaml"
	xmlns:ig="http://schemas.infragistics.com/xaml"
	xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!--__________________________________ BRUSHES START __________________________________-->
    <SolidColorBrush x:Key="GridBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="GridBorderBrush" Color="#FF728EAD"/>

    <!--__________________________________ Header Brushes __________________________________-->
    <SolidColorBrush x:Key="HeaderNormalBackgroundBrush" Color="#FFDAE7F5"/>
    <LinearGradientBrush x:Key="HeaderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffdf6b"/>
                <GradientStop Offset="1" Color="#FFfffce6"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderNormalBorderBrush" Color="#FFA0B0C7"/>
    <LinearGradientBrush x:Key="HeaderMovingBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF1e1305"/>
                <GradientStop Offset="1" Color="#FF100a04"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="HeaderMovingBorderBrush" Color="#FF7b6242"/>
    <SolidColorBrush x:Key="FooterBackgroundBrush" Color="#FFC7D9ED"/>

    <!--__________________________________ Cell Brushes __________________________________-->
    <SolidColorBrush x:Key="CellItemNormalBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CellItemNormalBorderBrush" Color="#FFDADCDD"/>

    <SolidColorBrush x:Key="CellItemAltNormalBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CellItemSelectedBackgroundBrush" Color="#FFB7DBFF"/>
    <SolidColorBrush x:Key="CellItemSelectedBorderBrush" Color="#FF000000"/>

    <SolidColorBrush x:Key="CellRowHoverBackgroundBrush" Color="Transparent"/>

    <SolidColorBrush x:Key="AddNewRowBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SummaryRowExpansionIndicatorBrush" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="SummaryRowBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CellRowActiveBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RowSelectorBackgroundBrush" Color="#FFDAE7F5"/>
    <SolidColorBrush x:Key="RowSelectorBorderBrush" Color="#FFA0B0C7"/>
    <SolidColorBrush x:Key="RowSelectorActiveBackgroundBrush" Color="#FFC7CED6"/>
    <SolidColorBrush x:Key="RowSelectorActiveBorderBrush" Color="#FF6E7B8A"/>

    <SolidColorBrush x:Key="ExpansionCellBackgroundBrush" Color="#FFDAE7F5"/>
    <SolidColorBrush x:Key="ExpansionCellBorderBrush" Color="#FFA0B0C7"/>
    <SolidColorBrush x:Key="ExpansionCellHoverBackgroundBrush" Color="#FFFFEB91"/>
    <SolidColorBrush x:Key="ExpansionCellHoverBorderBrush" Color="#FFE8BF3A"/>
    <SolidColorBrush x:Key="ExpansionIndicatorForegroundBrush" Color="#FF1E395B"/>

    <!--__________________________________ DataBar Brushes __________________________________-->
    <LinearGradientBrush x:Key="DataBarBidirectionNegativeBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#ffff5959"/>
                <GradientStop Offset="1" Color="#ffcc0000"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DataBarBidirectionPositiveBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFc1ebff"/>
                <GradientStop Offset="1" Color="#FF6DBDD1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ Pager Brushes __________________________________-->
    <SolidColorBrush x:Key="PagerAreaBackground" Color="#FFC7D9ED"/>
    <SolidColorBrush x:Key="PagerItemSelectedBorderBrush" Color="#FF728EAD"/>
    <SolidColorBrush x:Key="PagerGlyphBrush" Color="#FF576B82"/>

    <SolidColorBrush x:Key="PagerButtonBorderBrush" Color="#FFE8BF3A"/>
    <SolidColorBrush x:Key="PagerButtonHoverBackgroundBrush" Color="#FFFDE47B"/>
    <SolidColorBrush x:Key="PagerButtonPressedBackgroundBrush" Color="#FFFFDC61"/>

    <!--__________________________________ GroupBy Brushes __________________________________-->
    <LinearGradientBrush x:Key="GroupByHighlightBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#59FFFFFF"/>
                <GradientStop Offset="1" Color="#33FFFFFF"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByBackgroundBrush" Color="#FFCFDDEE"/>
    <SolidColorBrush x:Key="GroupByCloseBtnBorderBrush" Color="#FF603030"/>
    <LinearGradientBrush x:Key="GroupByCloseBtnBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFf0a8a0"/>
                <GradientStop Offset="0.10" Color="#FFf0a8a0"/>
                <GradientStop Offset="0.43" Color="#FFd06850"/>
                <GradientStop Offset="0.43" Color="#FFc04030"/>
                <GradientStop Offset="0.64" Color="#FFc44d3d"/>
                <GradientStop Offset="0.85" Color="#FFd07050"/>
                <GradientStop Offset="1" Color="#FFe0a090"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GroupByColumnLayoutHeaderFill" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFbbe0ea"/>
                <GradientStop Offset="1" Color="#FF6dbdd1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GroupByExpanderHoverBorderBrush" Color="#FFA0B0C7"/>
    <LinearGradientBrush x:Key="GroupByExpanderHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFffeea8"/>
        <GradientStop Offset="0.23" Color="#FFffe47f"/>
        <GradientStop Offset="0.5" Color="#FFffe37c"/>
        <GradientStop Offset="0.75" Color="#FFffe994"/>
        <GradientStop Offset="1" Color="#FFfffce0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByExpanderHoverHighlightBrush" Color="#AFFFFFFF"/>

    <LinearGradientBrush x:Key="GroupByExpanderPressedBackgroundBrush" StartPoint="0.684,-0.039" EndPoint="0.684,0.977">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="1" Color="#FFF9D87C"/>
                <GradientStop Color="#FFF7CC6D"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GroupByExpanderPressedBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFB57C33"/>
        <GradientStop Offset="1" Color="#FFB8A14B"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GroupByExpanderPressedHighlightBrush" Color="#FFF8D172"/>

    <LinearGradientBrush x:Key="GroupByHeaderBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFeff5fb"/>
                <GradientStop Offset="1" Color="#FFe1ecfa"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GroupByHeaderBorderBrush" Color="#FF849dbd"/>

    <!--__________________________________ Foreground Brushes __________________________________-->
    <SolidColorBrush x:Key="HeaderNormalForegroundBrush" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="HeaderHoverForegroundBrush" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="CellItemNormalForegroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="CellItemHoverForegroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="CellItemSelectedForegroundBrush" Color="#FF000000"/>

    <!--__________________________________ Glyph and Icon Brushes __________________________________-->
    <SolidColorBrush x:Key="HeaderCellGlyphBrush" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="FilterOperatorGlyphBrush" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="MoveIndicatorBrush" Color="#FFFF0000"/>
    <SolidColorBrush x:Key="ResizeIndicatorBrush" Color="#59000000"/>

    <!--__________________________________ PART_Popup Brushes __________________________________-->
    <SolidColorBrush x:Key="PopupBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="PopupBorderBrush" Color="#FFA7ABB0"/>

    <!--__________________________________ Filter Brushes (10.1 Feature) __________________________________-->
    <LinearGradientBrush x:Key="FilterSelectionItemBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFfdeeb3"/>
                <GradientStop Offset="0.30" Color="#FFfde48a"/>
                <GradientStop Offset="0.5" Color="#FFfde488"/>
                <GradientStop Offset="0.95" Color="#FFfdfdeb"/>
                <GradientStop Offset="1" Color="#FFfdfdeb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="FilterSelectionItemBorderBrush" Color="#FFf1ca58"/>
    <SolidColorBrush x:Key="FilterSelectionItemHighlightBrush" Color="#99FFFFFF"/>

    <SolidColorBrush x:Key="FilterSelectionVerticalBrush" Color="#FFF2F4F5"/>
    <SolidColorBrush x:Key="FilterCustomDialogBackgroundBrush" Color="#ffCFDDEE"/>

    <!--__________________________________ ColumnChooser Brushes (10.2 Feature) __________________________________-->
    <SolidColorBrush x:Key="ColumnChooserDialogBackgroundBrush" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ColumnChooserDialogBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFa3aeb9"/>
                <GradientStop Offset="0.37" Color="#FF8399a9"/>
                <GradientStop Offset="0.370" Color="#FF718597"/>
                <GradientStop Offset="1" Color="#FF617583"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0"/>
        <GradientStop Color="#FF8399A9" Offset="0.375"/>
        <GradientStop Color="#FF718597" Offset="0.375"/>
        <GradientStop Color="#FF617584" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnHoverBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFb5bdc8"/>
                <GradientStop Offset="0.370" Color="#FF8399a9"/>
                <GradientStop Offset="0.370" Color="#FF718597"/>
                <GradientStop Offset="0.906" Color="#FFb9c1ca"/>
                <GradientStop Offset="1" Color="#FFb9c1ca"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ColumnChooserDialogCloseBtnPressedBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF6b7c8d"/>
                <GradientStop Offset="0.370" Color="#FF4d606f"/>
                <GradientStop Offset="0.370" Color="#FF465460"/>
                <GradientStop Offset="0.906" Color="#FF262d33"/>
                <GradientStop Offset="1" Color="#FF262d33"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!--__________________________________ Other Brushes __________________________________-->
    <SolidColorBrush x:Key="FixedBorderFillBrush" Color="#FF646464"/>
    <SolidColorBrush x:Key="FocusBrush" Color="#FFA0B0C7"/>
    <SolidColorBrush x:Key="SeparatorBrush" Color="#FFE2E4E7"/>
    <SolidColorBrush x:Key="ToolTipBorderBrush" Color="#FF767676"/>
    <LinearGradientBrush x:Key="ToolTipBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFfbfcfd"/>
                <GradientStop Offset="1" Color="#FFd0def1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <igPrim:CultureValueConverter x:Key="CultureConverter"></igPrim:CultureValueConverter>
    <igPrim:SummaryResultFormatStringValueConverter x:Key="SDFormatStringConverter"></igPrim:SummaryResultFormatStringValueConverter>
    <igPrim:VisibilityToBoolValueConverter x:Key="VisToBool"/>

    <!--=========================================================================================================== -->
    <!--__________________________________ OFFICE 2010 INBOX CONTROL STYLES ________________________________________-->
    <!--=========================================================================================================== -->
    <SolidColorBrush x:Key="ScrollBarThumbGlyphDarkBrush" Color="#FF6d7783"/>
    <SolidColorBrush x:Key="ScrollBarThumbGlyphLightBrush" Color="#59FFFFFF"/>
    <SolidColorBrush x:Key="ScrollBarTrackBorderBrush" Color="#FF99AFC7"/>
    <LinearGradientBrush x:Key="ScrollBarTrackBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFa5bbd3"/>
                <GradientStop Offset="0.40" Color="#FFb1c7e0"/>
                <GradientStop Offset="1" Color="#FFbbcee4"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarTrackBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFa5bbd3"/>
                <GradientStop Offset="0.40" Color="#FFb1c7e0"/>
                <GradientStop Offset="1" Color="#FFbbcee4"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RepeatBtnBorderBrush" Color="#FF5C7796"/>
    <LinearGradientBrush x:Key="RepeatBtnNormalBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFb9cee6"/>
                <GradientStop Offset="0.15" Color="#FFb9cee6"/>
                <GradientStop Offset="1" Color="#FF91abc9"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RepeatBtnHoverBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFc1d7f0"/>
                <GradientStop Offset="0.15" Color="#FFc1d7f0"/>
                <GradientStop Offset="0.89" Color="#FFa3bedb"/>
                <GradientStop Offset="1" Color="#FFa3bedb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RepeatBtnHoverHighlightBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFc1d7f0"/>
                <GradientStop Offset="1" Color="#FFb1cae5"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RepeatBtnPressedBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFb0c7de"/>
                <GradientStop Offset="0.15" Color="#FFb0c7de"/>
                <GradientStop Offset="1" Color="#FF89a4c1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollBarGlyphFillBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF6e7ea6"/>
                <GradientStop Offset="1" Color="#FF424b63"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalRepeatBtnNormalBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFb9cee6"/>
                <GradientStop Offset="0.15" Color="#FFb9cee6"/>
                <GradientStop Offset="1" Color="#FF91abc9"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalRepeatBtnHoverBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFc1d7f0"/>
                <GradientStop Offset="0.15" Color="#FFc1d7f0"/>
                <GradientStop Offset="0.89" Color="#FFa3bedb"/>
                <GradientStop Offset="1" Color="#FFa3bedb"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalRepeatBtnHoverHighlightBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFc1d7f0"/>
                <GradientStop Offset="1" Color="#FFb1cae5"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalRepeatBtnPressedBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFb0c7de"/>
                <GradientStop Offset="0.15" Color="#FFb0c7de"/>
                <GradientStop Offset="1" Color="#FF89a4c1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarGlyphFillBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FF6e7ea6"/>
                <GradientStop Offset="1" Color="#FF424b63"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button_Normal" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFFEFEFE"/>
        <GradientStop Offset="1" Color="#FFEBEDEE"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonStroke_Normal" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFE8E9E9"/>
        <GradientStop Offset="1" Color="White"/>
        <GradientStop Offset="0.988" Color="#FFAEAFB1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonStroke_Hover" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFF8CE57"/>
        <GradientStop Offset="1" Color="#FFF8D52F"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button_Hover" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFffeea8"/>
        <GradientStop Offset="0.23" Color="#FFffe47f"/>
        <GradientStop Offset="0.5" Color="#FFffe37c"/>
        <GradientStop Offset="0.75" Color="#FFffe994"/>
        <GradientStop Offset="1" Color="#FFfffce0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="Button_Pressed" StartPoint="0.684,-0.039" EndPoint="0.684,0.977">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="1" Color="#FFF9D87C"/>
                <GradientStop Color="#FFF7CC6D"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonStroke_Pressed" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFB57C33"/>
        <GradientStop Offset="1" Color="#FFB8A14B"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="Button_Disabled" Color="#FFEBEBEB"/>
    <SolidColorBrush x:Key="ButtonStroke_Disabled" Color="#FFEBEBEB"/>
	
	
	    <!--__________________________________ Filter Menu Brushes _____________________________________________-->
    
    <LinearGradientBrush x:Key="MenuItemCheckMarkBackgroundBrush"
                    StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF6C7BA3" Offset="0"/>
        	<GradientStop Color="#FF444E66" Offset="1"/>
    </LinearGradientBrush>


	<!--________________________________________ Filter Dropdown brushes_________________________________________-->
	
	<SolidColorBrush x:Key="ForegroundBrush" Color="#FF333333" />	
	 <LinearGradientBrush x:Key="DropDown_Hover" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="0" Color="#FFffeea8" />
        <GradientStop Offset="0.23" Color="#FFffe47f" />
        <GradientStop Offset="0.5" Color="#FFffe37c" />
        <GradientStop Offset="0.75" Color="#FFffe994" />
        <GradientStop Offset="1" Color="#FFfffce0" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="1" Color="#FFFFEF87" />
        <GradientStop Color="#FFF3CB59" Offset="0.404" />
        <GradientStop Color="#FFFFE173" />
        <GradientStop Color="#FFF1CB5C" Offset="0.668" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Focused" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDCAD28" Offset="0.404" />
        <GradientStop Color="#FFCAA434" Offset="0.668" />
        <GradientStop Color="#FFF1CC55" />
        <GradientStop Color="#FFE5CA5F" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="DropDownStroke_Normal" Color="#FF8CA6C9" />
    <LinearGradientBrush x:Key="DropDownStroke_Hover" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="1" Color="#FFDEBC20" />
        <GradientStop Color="#FFF3D749" Offset="0.056" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDownStroke_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Offset="0" Color="#FFA17B28" />
        <GradientStop Offset="1" Color="#FFBC9D46" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDownStroke_Focused" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFCE8826" Offset="0" />
        <GradientStop Color="#FFC26D1D" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDownStroke_Disabled" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#B29CB2D0" Offset="1" />
        <GradientStop Color="#B2F8FAFE" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DropDown_Disabled" StartPoint="0,0 " EndPoint="0,1 ">
        <GradientStop Color="#FFd3d3d3" />
        <GradientStop Color="#FFa1a1a1" Offset="1" />
	</LinearGradientBrush>
    
	
	<!--____________________________Date filter DropDown item brushes_________________________-->
	
	 <SolidColorBrush x:Key="ItemHottrackCenterFill" Color="#FFC7D9ED" />
    <SolidColorBrush x:Key="ItemHottrackOuterBorderFill" Color="#FF849DBD" />
    <LinearGradientBrush x:Key="ItemSelectedOuterBorderFill" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFedc23e" />
        <GradientStop Offset="1" Color="#FFf1ce2f" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ItemSelectedCenterFill" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFfdeeb3" />
        <GradientStop Offset="0.30" Color="#FFfde48a" />
        <GradientStop Offset="0.5" Color="#FFfde488" />
        <GradientStop Offset="0.85" Color="#FFfdfdeb" />
        <GradientStop Offset="1" Color="#FFfdfdeb" />
    </LinearGradientBrush>
	
	<SolidColorBrush x:Key="ItemSelectedHighlightFill" Color="#AFFFFFFF" />
	
	
	
	<!--____________________________MenuItem CheckBox___________________________________-->
	
	 <Style x:Key="MenuItemCheckMarkCheckBoxStyle"
           TargetType="CheckBox">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="MinWidth"
                Value="18" />
        <Setter Property="MinHeight"
                Value="18" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="grid1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="DisabledVisualElement"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Duration="0"
                                                         To="0.55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                		<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid1" d:IsOptimized="True"/>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                       <Grid x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
							<Path x:Name="CheckIcon" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Fill="{TemplateBinding Background}" FlowDirection="LeftToRight" Height="10" Margin="1,1,0,1.5" Stretch="Fill" Width="10.5"/>
                    </Grid>
					</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource MenuItemCheckMarkBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
	
	
	<Style x:Key="Office2010Button" TargetType="Button">
        <Setter Property="Foreground" Value="#FF262626"/>
        <Setter Property="Padding" Value="3,5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button_Hover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonStroke_Hover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
												Duration="0"
												Storyboard.TargetName="hoverGlow"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="1"/>
                                        <DoubleAnimation
												Duration="0"
												Storyboard.TargetName="highlightStroke"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="normal" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonStroke_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation
												Duration="0"
												Storyboard.TargetName="pressedGlow"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
												Duration="0"
												Storyboard.TargetName="disabled"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="1"/>
                                        <DoubleAnimation
												Duration="0"
												Storyboard.TargetName="contentPresenter"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle
								x:Name="normal"
								Margin="0"
								Fill="{StaticResource Button_Normal}"
								Opacity="1"
								RadiusX="2"
								RadiusY="2"
								Stroke="{StaticResource ButtonStroke_Normal}"
								StrokeThickness="1"/>
                        <Rectangle
								x:Name="hoverGlow"
								Margin="1"
								Opacity="0"
								RadiusX="1"
								RadiusY="1"
								StrokeThickness="0">
                            <Rectangle.Fill>
                                <RadialGradientBrush Center="0.51,0.939" GradientOrigin="0.51,0.939" RadiusX="1.082">
                                    <GradientStop Offset="0.162" Color="#E5FFFEEB"/>
                                    <GradientStop Offset="1" Color="#00FFFEEB"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FFF8CE57"/>
                                    <GradientStop Offset="1" Color="#FFF8D52F"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle
								x:Name="pressedGlow"
								Margin="1"
								Opacity="0"
								RadiusX="1"
								RadiusY="1"
								StrokeThickness="0">
                            <Rectangle.Fill>
                                <RadialGradientBrush Center="0.51,0.939" GradientOrigin="0.51,0.939" RadiusX="1.082">
                                    <GradientStop Offset="0.162" Color="#FFFEF4A1"/>
                                    <GradientStop Offset="1" Color="#00FEF4A1"/>
                                </RadialGradientBrush>
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#FFF8CE57"/>
                                    <GradientStop Offset="1" Color="#FFF8D52F"/>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle
								x:Name="disabled"
								Margin="0"
								Opacity="0"
								RadiusX="2"
								RadiusY="2"
								Stroke="#9b9b9b"
								StrokeThickness="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFd3d3d3"/>
                                            <GradientStop Offset="0.961" Color="#FFA2A2A2"/>
                                            <GradientStop Offset="0.994" Color="#FFa1a1a1"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle
								x:Name="highlightStroke"
								Margin="1"
								Opacity="0"
								RadiusX="1"
								RadiusY="1"
								Stroke="#BFFFFFFF"
								StrokeThickness="1"/>
                        <ContentPresenter
								x:Name="contentPresenter"
								HorizontalAlignment="Center"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="Center"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2010ScrollBar" TargetType="ScrollBar">
        <Setter Property="MinWidth" Value="17"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root" Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource HorizontalRepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource HorizontalRepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <ContentPresenter
										x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										Margin="{TemplateBinding Padding}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource HorizontalRepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource HorizontalRepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <ContentPresenter
										x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										Margin="{TemplateBinding Padding}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource RepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource RepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <ContentPresenter
										x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										Margin="{TemplateBinding Padding}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="contentPresenter"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource RepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource RepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <ContentPresenter
										x:Name="contentPresenter"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										Margin="{TemplateBinding Padding}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource RepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="Root"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource RepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource RepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <Grid>
                                        <Path
											Width="8"
											Height="7"
											Data="M 0,6 C0,6 0,7 0,7 0,7 8,7 8,7 8,7 8,6 8,6 8,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 8,5 8,5 8,5 8,4 8,4 8,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 8,3 8,3 8,3 8,2 8,2 8,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 8,1 8,1 8,1 8,0 8,0 8,0 0,0 0,0 z"
											Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}"/>
                                        <Path
											Width="6"
											Height="7"
											Margin="1,2,0,0"
											Data="M 0,6 C0,6 0,7 0,7 0,7 6,7 6,7 6,7 6,6 6,6 6,6 0,6 0,6 zM 0,4 C0,4 0,5 0,5 0,5 6,5 6,5 6,5 6,4 6,4 6,4 0,4 0,4 zM 0,2 C0,2 0,3 0,3 0,3 6,3 6,3 6,3 6,2 6,2 6,2 0,2 0,2 zM 0,0 C0,0 0,1 0,1 0,1 6,1 6,1 6,1 6,0 6,0 6,0 0,0 0,0 z"
											Fill="{StaticResource ScrollBarThumbGlyphLightBrush}"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                                <Grid x:Name="Root">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnHoverBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <Visibility>Visible
                                                                </Visibility>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HorizontalRepeatBtnPressedBackgroundBrush}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation
														d:IsOptimized="True"
														Duration="0"
														Storyboard.TargetName="Root"
														Storyboard.TargetProperty="(UIElement.Opacity)"
														To="0.65"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border
										x:Name="Bd"
										Background="{StaticResource HorizontalRepeatBtnNormalBackgroundBrush}"
										BorderBrush="{StaticResource RepeatBtnBorderBrush}"
										BorderThickness="1"
										CornerRadius="1">
                                        <Rectangle x:Name="highlight" Stroke="{StaticResource HorizontalRepeatBtnHoverHighlightBrush}" Visibility="Collapsed"/>
                                    </Border>
                                    <Path
										Width="7"
										Height="7"
										Data="M 6,0 C6,0 6,7 6,7 6,7 7,7 7,7 7,7 7,0 7,0 7,0 6,0 6,0 zM 4,0 C4,0 4,7 4,7 4,7 5,7 5,7 5,7 5,0 5,0 5,0 4,0 4,0 zM 2,0 C2,0 2,7 2,7 2,7 3,7 3,7 3,7 3,0 3,0 3,0 2,0 2,0 zM 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,0 1,0 1,0 0,0 0,0 z"
										Fill="{StaticResource ScrollBarThumbGlyphDarkBrush}"/>
                                    <Path
										Width="7"
										Height="7"
										Margin="1,0,0,2"
										Data="M 6,0 C6,0 6,7 6,7 6,7 7,7 7,7 7,7 7,0 7,0 7,0 6,0 6,0 zM 4,0 C4,0 4,7 4,7 4,7 5,7 5,7 5,7 5,0 5,0 5,0 4,0 4,0 zM 2,0 C2,0 2,7 2,7 2,7 3,7 3,7 3,7 3,0 3,0 3,0 2,0 2,0 zM 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,0 1,0 1,0 0,0 0,0 z"
										Fill="{StaticResource ScrollBarThumbGlyphLightBrush}"/>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="MouseOver" GeneratedDuration="0">
                                        <Storyboard>
                                            <DoubleAnimation
												Duration="0:0:0.2"
												Storyboard.TargetName="VerticalSmallDecrease"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0"/>
                                            <DoubleAnimation
												Duration="0:0:0.2"
												Storyboard.TargetName="VerticalSmallIncrease"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0"/>
                                            <DoubleAnimation
												Duration="0:0:0.2"
												Storyboard.TargetName="HorizontalSmallDecrease"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0"/>
                                            <DoubleAnimation
												Duration="0:0:0.2"
												Storyboard.TargetName="HorizontalSmallIncrease"
												Storyboard.TargetProperty="(UIElement.Opacity)"
												To="0"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation
											Duration="0"
											Storyboard.TargetName="VerticalSmallDecrease"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"/>
                                        <DoubleAnimation
											Duration="0"
											Storyboard.TargetName="VerticalSmallIncrease"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"/>
                                        <DoubleAnimation
											Duration="0"
											Storyboard.TargetName="HorizontalSmallDecrease"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"/>
                                        <DoubleAnimation
											Duration="0"
											Storyboard.TargetName="HorizontalSmallIncrease"
											Storyboard.TargetProperty="(UIElement.Opacity)"
											To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
											Duration="0"
											Storyboard.TargetName="Root"
											Storyboard.TargetProperty="Opacity"
											To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border
								Grid.ColumnSpan="5"
								Background="{StaticResource HorizontalScrollBarTrackBrush}"
								BorderBrush="{StaticResource ScrollBarTrackBorderBrush}"
								BorderThickness="1,0"/>
                            <RepeatButton
								x:Name="HorizontalSmallDecrease"
								Width="17"
								Grid.Column="0"
								Interval="50"
								IsTabStop="False"
								Opacity="0"
								Template="{StaticResource HorizontalDecrementTemplate}"/>
                            <Path
								x:Name="horizontalSmallDecreaseGlyph"
								Width="5"
								Height="9"
								Data="M 0,4 C0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,9 5,9 5,9 4,9 4,9 4,9 4,8 4,8 4,8 3,8 3,8 3,8 3,7 3,7 3,7 2,7 2,7 2,7 2,6 2,6 2,6 1,6 1,6 1,6 1,5 1,5 1,5 0,5 0,5 0,5 0,4 0,4 z"
								Fill="{StaticResource HorizontalScrollBarGlyphFillBrush}"
								IsHitTestVisible="False"/>
                            <RepeatButton
								x:Name="HorizontalLargeDecrease"
								Width="0"
								Grid.Column="1"
								Interval="50"
								IsTabStop="False"
								Template="{StaticResource RepeatButtonTemplate}"/>
                            <Thumb
								x:Name="HorizontalThumb"
								MinWidth="18"
								Width="18"
								Grid.Column="2"
								Background="{TemplateBinding Background}"
								Template="{StaticResource HorizontalThumbTemplate}"/>
                            <RepeatButton
								x:Name="HorizontalLargeIncrease"
								Grid.Column="3"
								Interval="50"
								IsTabStop="False"
								Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton
								x:Name="HorizontalSmallIncrease"
								Width="17"
								Grid.Column="4"
								Interval="50"
								IsTabStop="False"
								Opacity="0"
								Template="{StaticResource HorizontalIncrementTemplate}"/>
                            <Path
								x:Name="horizontalSmallIncreaseGlyph"
								Width="5"
								Height="9"
								Grid.Column="4"
								Data="M 5,4 C5,4 4,4 4,4 4,4 4,3 4,3 4,3 3,3 3,3 3,3 3,2 3,2 3,2 2,2 2,2 2,2 2,1 2,1 2,1 1,1 1,1 1,1 1,0 1,0 1,0 0,0 0,0 0,0 0,9 0,9 0,9 1,9 1,9 1,9 1,8 1,8 1,8 2,8 2,8 2,8 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 z"
								Fill="{StaticResource HorizontalScrollBarGlyphFillBrush}"
								IsHitTestVisible="False"/>
                        </Grid>
                        <Grid x:Name="VerticalRoot" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border
								Grid.RowSpan="5"
								Background="{StaticResource ScrollBarTrackBrush}"
								BorderBrush="{StaticResource ScrollBarTrackBorderBrush}"
								BorderThickness="0,1"/>
                            <RepeatButton
								x:Name="VerticalSmallDecrease"
								Height="17"
								Grid.Row="0"
								Margin="0,0,1,0"
								Interval="50"
								IsTabStop="False"
								Opacity="0"
								Template="{StaticResource VerticalDecrementTemplate}"/>
                            <Path
								x:Name="smallDecreaseGlyph"
								Width="9"
								Height="5"
								Data="M 4,0 C4,0 4,1 4,1 4,1 3,1 3,1 3,1 3,2 3,2 3,2 2,2 2,2 2,2 2,3 2,3 2,3 1,3 1,3 1,3 1,4 1,4 1,4 0,4 0,4 0,4 0,5 0,5 0,5 9,5 9,5 9,5 9,4 9,4 9,4 8,4 8,4 8,4 8,3 8,3 8,3 7,3 7,3 7,3 7,2 7,2 7,2 6,2 6,2 6,2 6,1 6,1 6,1 5,1 5,1 5,1 5,0 5,0 5,0 4,0 4,0 z"
								Fill="{StaticResource ScrollBarGlyphFillBrush}"
								IsHitTestVisible="False"/>
                            <RepeatButton
								x:Name="VerticalLargeDecrease"
								Height="0"
								Grid.Row="1"
								Interval="50"
								IsTabStop="False"
								Template="{StaticResource RepeatButtonTemplate}"/>
                            <Thumb
								x:Name="VerticalThumb"
								Height="18"
								MinHeight="18"
								Grid.Row="2"
								Margin="0,0,1,0"
								Template="{StaticResource VerticalThumbTemplate}"/>
                            <RepeatButton
								x:Name="VerticalLargeIncrease"
								Grid.Row="3"
								Interval="50"
								IsTabStop="False"
								Template="{StaticResource RepeatButtonTemplate}"/>
                            <RepeatButton
								x:Name="VerticalSmallIncrease"
								Height="17"
								Grid.Row="4"
								Margin="0,0,1,0"
								Interval="50"
								IsTabStop="False"
								Opacity="0"
								Template="{StaticResource VerticalIncrementTemplate}"/>
                            <Path
								x:Name="smallIncreaseGlyph"
								Width="9"
								Height="5"
								Grid.Row="4"
								Data="M 4,5 C4,5 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 0,1 0,0 0,0 0,0 9,0 9,0 9,0 9,1 9,1 9,1 8,1 8,1 8,1 8,2 8,2 8,2 7,2 7,2 7,2 7,3 7,3 7,3 6,3 6,3 6,3 6,4 6,4 6,4 5,4 5,4 5,4 5,5 5,5 5,5 4,5 4,5 z"
								Fill="{StaticResource ScrollBarGlyphFillBrush}"
								IsHitTestVisible="False"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Office2010ScrollViewer" TargetType="ScrollViewer">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource SeparatorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                            <Rectangle Grid.Column="1" Fill="{StaticResource FooterBackgroundBrush}" Grid.Row="1"/>
                            <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-1,-1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="17" Style="{StaticResource Office2010ScrollBar}"/>
                            <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="16" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-1" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource Office2010ScrollBar}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Office2010ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" BorderBrush="#fff1ca58" BorderThickness="1" CornerRadius="2" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFfdeeb3"/>
                                            <GradientStop Offset="0.30" Color="#FFfde48a"/>
                                            <GradientStop Offset="0.5" Color="#FFfde488"/>
                                            <GradientStop Offset="0.85" Color="#FFfdfdeb"/>
                                            <GradientStop Offset="1" Color="#FFfdfdeb"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Rectangle RadiusY="1" RadiusX="1" Stroke="#99FFFFFF" StrokeThickness="1"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	<Style x:Key="DateFilterComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Padding" Value="5,3,5,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                	<Storyboard>
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBorder">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                		<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl" d:IsOptimized="True" />
                                	</Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" >
                                	<Storyboard>
                                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedBorder">
                                			<DiscreteObjectKeyFrame KeyTime="0">
                                				<DiscreteObjectKeyFrame.Value>
                                					<Visibility>Visible</Visibility>
                                				</DiscreteObjectKeyFrame.Value>
                                			</DiscreteObjectKeyFrame>
                                		</ObjectAnimationUsingKeyFrames>
                                	</Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded" />
                                <VisualState x:Name="BeforeLoaded" />
                                <VisualState x:Name="BeforeUnloaded" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="hoverBorder" Background="{StaticResource ItemHottrackCenterFill}" BorderBrush="{StaticResource ItemHottrackOuterBorderFill}" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" CornerRadius="1" />
                        <Border x:Name="SelectedBorder" Background="{StaticResource ItemSelectedCenterFill}" BorderBrush="{StaticResource ItemSelectedOuterBorderFill}" CornerRadius="2" BorderThickness="{TemplateBinding BorderThickness}" Visibility="Collapsed" IsHitTestVisible="False">
                        	<Rectangle Stroke="{StaticResource ItemSelectedHighlightFill}" StrokeThickness="1" RadiusX="1" RadiusY="1" />
                        </Border>
                        <Rectangle x:Name="FocusVisualElement" Stroke="#FFC2782C" StrokeThickness="{TemplateBinding BorderThickness}" StrokeDashCap="Round" StrokeDashOffset="10" StrokeDashArray="1 5" Visibility="Collapsed" />
                        <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--__________________________________________ Date filter ComboBox ToggleButton Style _____________________________________-->
	
	<Style x:Key="ComboToggleButtonStyle" x:Name="toggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonStroke_Normal}" />
        <Setter Property="Background" Value="{StaticResource Button_Normal}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checkedBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bg" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="2" />
                        <Border x:Name="hoverBd" BorderBrush="{StaticResource ButtonStroke_Hover}" BorderThickness="1" Background="{StaticResource Button_Hover}" CornerRadius="2" Visibility="Collapsed" />
                        <Border x:Name="pressedBd" BorderBrush="{StaticResource ButtonStroke_Pressed}" BorderThickness="1" Background="{StaticResource Button_Pressed}" CornerRadius="2" Visibility="Collapsed" />
                        <Border x:Name="checkedBd" BorderBrush="{StaticResource ButtonStroke_Pressed}" BorderThickness="1" Background="{StaticResource Button_Pressed}" CornerRadius="2" Visibility="Collapsed" />
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!--_______________________________________Date filter ComboBoxStyle__________________________________________-->
	
	<Style x:Key="DateFilterComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="6,2,25,2" />
        <Setter Property="Background" Value="#FF1F3B53" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="TabNavigation" Value="Once" />-->
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource DateFilterComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" VerticalAlignment="Stretch" Style="{StaticResource ComboToggleButtonStyle}" Foreground="White">
                                    <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor" Color="#FF1E395B" />
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="#FF1E395B">
                                    <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <TextBlock Text="" Foreground="White" />
                                    </ContentPresenter>
                                </ContentControl>

                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3" />
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1" />
                        <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">                            
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                        <GradientStop Color="#FFFEFEFE" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource Office2010ScrollViewer}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	
	
	
	
    <Style x:Key="Office2010ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource Office2010ComboBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Bd">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed"/>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressedBd">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unchecked"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualState x:Name="Focused"/>
                                                        <VisualState x:Name="Unfocused" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Rectangle x:Name="Bd" Stroke="#abbad0" StrokeThickness="1" RadiusX="1" RadiusY="1">
                                                    <Rectangle.Fill>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Offset="0" Color="#FFe1edfa"/>
                                                                    <GradientStop Offset="1" Color="#FFd0dfee"/>
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <Border x:Name="hoverBd" BorderBrush="#eac656" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Offset="0" Color="#FFf7eab2"/>
                                                                    <GradientStop Offset="0.40" Color="#FFf7df85"/>
                                                                    <GradientStop Offset="0.5" Color="#FFf7e28e"/>
                                                                    <GradientStop Offset="0.89" Color="#FFf9f6dd"/>
                                                                    <GradientStop Offset="1" Color="#FFf9f6dd"/>
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Rectangle Stroke="#A5FFFFFF" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                                                </Border>
                                                <Border x:Name="pressedBd" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                                    <Border.BorderBrush>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Offset="0" Color="#FFc2762b"/>
                                                                    <GradientStop Offset="1" Color="#FFc29e47"/>
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.BorderBrush>
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.3,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStopCollection>
                                                                    <GradientStop Offset="0" Color="#FFf5c664"/>
                                                                    <GradientStop Offset="0.15" Color="#FFfddf84"/>
                                                                    <GradientStop Offset="0.85" Color="#FFfddf84"/>
                                                                    <GradientStop Offset="1" Color="#FFf9d577"/>
                                                                </GradientStopCollection>
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Rectangle Stroke="#FFEAC656" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                                                </Border>
                                                <ContentPresenter
											x:Name="contentPresenter"
											Content="{TemplateBinding Content}"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder" Background="#FFFFFFFF" BorderThickness="1" BorderBrush="#FF8BA0BC" CornerRadius="0,3,3,0"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="17"/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}" HorizontalContentAlignment="Center" Grid.Column="1">
                                <Grid>
                                    <Path
								Width="9"
								Height="5"
								Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 0,0 0,0 z"
								Fill="#ffffff"
								Stretch="Fill"/>
                                    <Path
								Width="5"
								Height="3"
								Data="M 2,1 C2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,3 5,3 5,3 6,3 6,3 6,3 6,2 6,2 6,2 7,2 7,2 7,2 7,1 7,1 7,1 2,1 2,1 z"
								Fill="#586585"
								Stretch="Fill"/>
                                </Grid>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentPresenter"
						Margin="{TemplateBinding Padding}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock Text=" " />
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" HorizontalAlignment="Stretch" Height="Auto" BorderThickness="1" BorderBrush="#FF000000">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Style="{StaticResource Office2010ScrollViewer}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2010RadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hoverBd">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="check">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Bd">
                            <Ellipse
										Width="13"
										Height="13"
										Fill="#f4f4f4"
										Stroke="#8e8f8f"
										StrokeThickness="1"/>
                            <Ellipse
										Width="9"
										Height="9"
										Stroke="#aeb3b9"
										StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFd8dbde"/>
                                                <GradientStop Offset="1" Color="#FFf6f6f6"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="hoverBd" Visibility="Collapsed">
                            <Ellipse
										Width="13"
										Height="13"
										Fill="#def9fa"
										Stroke="#5586a3"
										StrokeThickness="1"/>
                            <Ellipse
										Width="9"
										Height="9"
										Stroke="#79c6f9"
										StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFb1dffd"/>
                                                <GradientStop Offset="1" Color="#FFe7f7fe"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="pressedBd" Visibility="Collapsed">
                            <Ellipse
											Width="13"
											Height="13"
											Fill="#c2e4f6"
											Stroke="#2c628b"
											StrokeThickness="1"/>
                            <Ellipse
											Width="9"
											Height="9"
											Stroke="#62baf7"
											StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FF9dd5fc"/>
                                                <GradientStop Offset="0.80" Color="#FFe0f4fe"/>
                                                <GradientStop Offset="1" Color="#FFe0f4fe"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>
                        <Grid x:Name="check" Visibility="Collapsed">
                            <Ellipse
												Width="9"
												Height="9"
												Stroke="#285e87"
												StrokeThickness="1">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FF2fa8d5"/>
                                                <GradientStop Offset="0.80" Color="#FF1e698f"/>
                                                <GradientStop Offset="1" Color="#FF1e698f"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse
												Width="7"
												Height="7"
												Stroke="#599dc4"
												StrokeThickness="1"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2010ListBox" TargetType="igPrim:GridSortableListBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBox">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource Office2010ScrollViewer}" >
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Margin="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2010FilterSelectionListBox" TargetType="ListBox">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource EmptyListBoxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer x:Name="ScrollViewer" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource Office2010ScrollViewer}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Office2010CheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#FF808080"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                            <Rectangle x:Name="Background" Fill="#FFFFFFFF" Height="11" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="11"/>
                            <Path x:Name="CheckIcon" Data="M 0,3 C0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 7,1 7,1 7,1 7,0 7,0 7,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 4,2 4,2 4,2 4,3 4,3 4,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 0,3 0,3 z" Fill="Black" FlowDirection="LeftToRight" Height="7" Opacity="0" Stretch="Fill" Width="7"/>
                            <Rectangle x:Name="IndeterminateIcon" Fill="Black" Height="2" Opacity="0" Width="6"/>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--=========================================================================================================== -->
    <!--__________________________________ END OFFICE 2010 INBOX CONTROL STYLES ____________________________________-->
    <!--=========================================================================================================== -->

    <!--__________________________________ XamGrid _____________________________________________________-->
    <Style TargetType="ig:XamGrid">
        <Setter Property="Background" Value="#FFC7D9ED"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:XamGrid">
                    <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ReadOnlyStates">
                                <VisualState x:Name="Active"></VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ReadOnlyBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border.Resources>
                            <DataTemplate x:Key="DefaultDeferredScrollingTemplate">
                                <Grid Margin="0,20,0,0">
                                    <Border Background="{StaticResource ToolTipBackgroundBrush}" BorderBrush="{StaticResource ToolTipBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Foreground="#FF4C4C4C" Text="{Binding FirstColumnValue, Converter={StaticResource CultureConverter}}" Margin="5" />
                                    </Border>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="DefaultGroupByDeferredScrollingTemplate">
                                <Grid Margin="0,20,0,0">
                                    <Border Background="{StaticResource ToolTipBackgroundBrush}" BorderBrush="{StaticResource ToolTipBorderBrush}" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Right" VerticalAlignment="Top">
                                        <TextBlock Foreground="#FF4C4C4C" Text="{Binding Row.Data, Converter={StaticResource CultureConverter}}" Margin="5"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                            <!-- _______ Filtering Icons _________ -->
                            <DataTemplate x:Key="EqualsOperand">
                                <Path
									Width="8"
									Height="5"
									Data="M 0,3 C0,3 0,5 0,5 0,5 8,5 8,5 8,5 8,3 8,3 8,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 8,2 8,2 8,2 8,0 8,0 8,0 0,0 0,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"
									VerticalAlignment="Center"/>
                            </DataTemplate>
                            <DataTemplate x:Key="NotEqualsOperand">
                                <Path
									Width="8"
									Height="11"
									Data="M 0,3 C0,3 0,5 0,5 0,5 3,5 3,5 3,5 2,6 2,6 2,6 0,6 0,6 0,6 0,8 0,8 0,8 1.7,8 1.7,8 1.7,8 0,11 0,11 0,11 2,11 2,11 2,11 3.7,8 3.7,8 3.7,8 8,8 8,8 8,8 8,6 8,6 8,6 4,6 4,6 4,6 5.275,5 5.275,5 5.275,5 8,5 8,5 8,5 8,3 8,3 8,3 6.365,3 6.365,3 6.365,3 8,0 8,0 8,0 6,0 6,0 6,0 4.365,3 4.365,3 4.365,3 0,3 0,3 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Key="StartsWithOperand">
                                <StackPanel x:Name="BeginsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Key="EndsWithOperand">
                                <StackPanel x:Name="EndsWith" HorizontalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="DoesNotStartWithOperand">
                                <Grid x:Name="DoesnotBeginWith">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                        <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    </StackPanel>
                                    <Grid>
                                        <Path
											Width="8"
											Height="11"
											HorizontalAlignment="Center"
											Margin="-4,0,0,0"
											Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z"
											Fill="{StaticResource FilterOperatorGlyphBrush}"
											Stretch="Fill"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                            <DataTemplate x:Key="DoesNotEndWithOperand">
                                <Grid x:Name="DoesnotendWith">
                                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                        <TextBlock FontSize="10" Text="a" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                        <TextBlock FontSize="10" Text="A" TextDecorations="Underline" Foreground="{StaticResource FilterOperatorGlyphBrush}"/>
                                    </StackPanel>
                                    <Grid>
                                        <Path
											Width="8"
											Height="11"
											HorizontalAlignment="Center"
											Margin="0,0,-4,0"
											Data="M 0,11 C0,11 2,11 2,11 2,11 8,0 8,0 8,0 6,0 6,0 6,0 0,11 0,11 z"
											Fill="{StaticResource FilterOperatorGlyphBrush}"
											Stretch="Fill"/>
                                    </Grid>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="ContainsOperand">
                                <Border
									Width="10"
									Height="10"
									Background="#FFFFFFFF"
									BorderBrush="{StaticResource FilterOperatorGlyphBrush}"
									BorderThickness="1">
                                    <Rectangle Margin="2" Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </Border>
                            </DataTemplate>
                            <DataTemplate x:Key="DoesNotContainOperand">
                                <Grid x:Name="DoesNotContains">
                                    <Rectangle
										Width="10"
										Height="10"
										Fill="#FFFFFFFF"
										Stroke="{StaticResource FilterOperatorGlyphBrush}"
										StrokeDashArray="2"/>
                                    <Rectangle Width="4" Height="4" Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate x:Key="GreaterThanOperand">
                                <Path
									Width="8"
									Height="8"
									HorizontalAlignment="Center"
									Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Key="GreaterThanOrEqualOperand">
                                <StackPanel x:Name="GreaterThanOrEqual">
                                    <Path
										Width="8"
										Height="8"
										HorizontalAlignment="Center"
										Data="M 1,0 C1,0 0,1 0,1 0,1 5,4 5,4 5,4 0,7 0,7 0,7 1,8 1,8 1,8 8,4 8,4 8,4 1,0 1,0 z"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <Rectangle
										Width="8"
										Height="1"
										Margin="0,1,0,0"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>
                            <DataTemplate x:Key="LessThanOperand">
                                <Path
									Width="8"
									Height="8"
									HorizontalAlignment="Center"
									Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z"
									Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                            </DataTemplate>
                            <DataTemplate x:Key="LessThanOrEqualOperand">
                                <StackPanel x:Name="LessThanOrEqual">
                                    <Path
										Width="8"
										Height="8"
										HorizontalAlignment="Center"
										Data="M 7,0 C7,0 8,1 8,1 8,1 3,4 3,4 3,4 8,7 8,7 8,7 7,8 7,8 7,8 0,4 0,4 0,4 7,0 7,0 z"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                    <Rectangle
										Width="8"
										Height="1"
										Margin="0,1,0,0"
										Fill="{StaticResource FilterOperatorGlyphBrush}"/>
                                </StackPanel>
                            </DataTemplate>

                            <DataTemplate x:Key="DefaultFilterIcon">
                                <Grid>
                                    <Path
										Width="11"
										Height="8"
										Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                    <Path
										Width="7"
										Height="6"
										Data="M 2,1 C2,1 9,1 9,1 9,1 6,4 6,4 6,4 6,7 6,7 6,7 5,7 5,7 5,7 5,4 5,4 5,4 2,1 2,1 z"
										Fill="#FFFFFFFF"
										Stretch="Fill"/>
                                    <Path
										Width="3.5"
										Height="7"
										HorizontalAlignment="Center"
										Margin="11,7,0,0"
										VerticalAlignment="Center"
										Data="M 0,0 C0,0 0,7 0,7 0,7 3.5,3.5 3.5,3.5 3.5,3.5 0,0 0,0 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                </Grid>
                            </DataTemplate>

                        </Border.Resources>
                        <Grid>
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <igPrim:RowsPanel x:Name="RowsPanel"/>
                                <ScrollBar x:Name="VerticalScrollBar" Width="17" Grid.Row="0" Grid.Column="1" Style="{StaticResource Office2010ScrollBar}"/>
                                <ScrollBar x:Name="HorizontalScrollBar"  Height="16" Grid.Row="2" Style="{StaticResource Office2010ScrollBar}"/>
                            </Grid>
                            <Border x:Name="ReadOnlyBorder" Opacity=".2" Background="Black" Visibility="Collapsed" ></Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowSelectorCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Rectangle Height="1" VerticalAlignment="Top" Fill="#AFFFFFFF"/>
                        </Border>
                        <Path
							x:Name="summarySigmaIcon"
							Data="M 5.5,-0.5 C5.5,-0.5 5.5,0.5 5.5,0.5 5.5,0.5 1.5,0.5 1.5,0.5 1.5,0.5 4.5,3.5 4.5,3.5 4.5,3.5 1.5,6.5 1.5,6.5 1.5,6.5 5.5,6.5 5.5,6.5 5.5,6.5 5.5,7.5 5.5,7.5 5.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,7.5 -0.5,6.5 -0.5,6.5 -0.5,6.5 2.5,3.5 2.5,3.5 2.5,3.5 -0.5,0.5 -0.5,0.5 -0.5,0.5 -0.5,-0.5 -0.5,-0.5 -0.5,-0.5 5.5,-0.5 5.5,-0.5 z"
							Fill="{StaticResource HeaderCellGlyphBrush}"
							Width="6"
							Height="8"
							Stretch="Fill"
							StrokeThickness="0"
							RenderTransformOrigin="0.5, 0.5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ AddNewRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowSelectorCellControl">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Path Fill="#ffffff" Stretch="Fill" Stroke="{StaticResource HeaderCellGlyphBrush}" StrokeThickness="1" Data="M3.5,0.5 L6.5,0.5 L6.5,3.5 L9.5,3.5 L9.5,6.5 L6.5,6.5 L6.5,9.5 L3.5,9.5 L3.5,6.5 L0.5,6.5 L0.5,3.5 L3.5,3.5 z" Width="10" Height="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowSelectorCellControl">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Grid Width="15" Height="9">
                            <Path
			                         Width="11"
			                         Height="9"
			                         Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,9 4,9 4,9 7,9 7,9 7,9 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,1 10,1 10,1 11,1 11,1 11,1 11,0 11,0 11,0 0,0 0,0 z"
			                         Stretch="Fill">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.59,1.01">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFc0b8c0"/>
                                                <GradientStop Offset="0.58" Color="#FF707070"/>
                                                <GradientStop Offset="1" Color="#FF000800"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path
			                         Width="7"
			                         Height="5"
			                         Margin="0,1,0,0"
			                         VerticalAlignment="Top"
			                         Data="M 2,1 C2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,6 5,6 5,6 6,6 6,6 6,6 6,4 6,4 6,4 7,4 7,4 7,4 7,3 7,3 7,3 8,3 8,3 8,3 8,2 8,2 8,2 9,2 9,2 9,2 9,1 9,1 9,1 2,1 2,1 z"
			                         Stretch="Fill">
                                <Path.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.55,0.92">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0" Color="#FFffffff"/>
                                                <GradientStop Offset="1" Color="#FF909890"/>
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Path.Fill>
                            </Path>
                            <Path
			                         Width="5"
			                         Height="3"
			                         HorizontalAlignment="Left"
			                         VerticalAlignment="Bottom"
			                         Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 0,0 0,0 z"
			                         Fill="#444444"
			                         Stretch="Fill"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="hoverBd" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active"/>
                                <VisualState x:Name="Editing">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="EditingIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="selectedBd" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Border x:Name="selectedBd" BorderBrush="{StaticResource RowSelectorActiveBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource RowSelectorActiveBackgroundBrush}" Visibility="Collapsed"/>
                        <Border x:Name="hoverBd" BorderBrush="{StaticResource ExpansionCellHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ExpansionCellHoverBackgroundBrush}" Visibility="Collapsed"/>
                        <Path
							x:Name="EditingIndicator"
							Visibility="Collapsed"
							Width="6"
							Height="12"
							Data="M 2.284,10.299 C2.284,10.299 2.5,10.434 2.5,10.434 2.5,10.434 2.699,9.991 2.699,9.991 2.699,9.991 3.5,9.391 3.5,9.391 3.5,9.391 3.054,9.193 3.054,9.193 3.054,9.193 6,2.608 6,2.608 6,2.608 6,0.521 6,0.521 6,0.521 3.5,0 3.5,0 3.5,0 3,1.565 3,1.565 3,1.565 0.360,7.987 0.360,7.987 0.360,7.987 0,7.826 0,7.826 0,7.826 0,8.869 0,8.869 0,8.869 0,12 0,12 0,12 2.284,10.299 2.284,10.299 z"
							Margin="3,0,0,0"
							Stretch="Fill"
							HorizontalAlignment="Left">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.666,-0.043" EndPoint="-0.066,0.949">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFfe6e6c"/>
                                            <GradientStop Offset="0.125" Color="#FFfe6e6c"/>
                                            <GradientStop Offset="0.195" Color="#FF78d1ec"/>
                                            <GradientStop Offset="0.608" Color="#FF6cc0d9"/>
                                            <GradientStop Offset="0.753" Color="#FFffcc99"/>
                                            <GradientStop Offset="0.934" Color="#FF333333"/>
                                            <GradientStop Offset="1" Color="#FF333333"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="hoverBd" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Alternate" ></VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <Border x:Name="hoverBd" BorderBrush="{StaticResource ExpansionCellHoverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ExpansionCellHoverBackgroundBrush}" Visibility="Collapsed"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        <igPrim:ExpansionIndicator x:Name="Indicator" Visibility="Collapsed"  Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Cursor="Hand">
                            <igPrim:ExpansionIndicator.Style>
                                <Style TargetType="igPrim:ExpansionIndicator">
                                    <Setter Property="Foreground" Value="{StaticResource ExpansionIndicatorForegroundBrush}"/>
                                    <Setter Property="Width" Value="20"/>
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="igPrim:ExpansionIndicator">
                                                <Grid Background="Transparent">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="ExpansionStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition From="Collapsed" To="Expanded" GeneratedDuration="00:00:00.2000000"></VisualTransition>
                                                                <VisualTransition From="Expanded" To="Collapsed" GeneratedDuration="00:00:00.2000000"></VisualTransition>
                                                            </VisualStateGroup.Transitions>

                                                            <VisualState x:Name="Expanded">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="90" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"></DoubleAnimation>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Collapsed">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetName="ExpansionIndicatorGlyph" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"></DoubleAnimation>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Grid x:Name="ExpansionIndicator" Background="#00000000" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Path
															Width="{TemplateBinding Width}"
															Height="{TemplateBinding Height}"
															Data="M8,5 L8,14 L14,9.5 z"
															x:Name="ExpansionIndicatorGlyph"
															HorizontalAlignment="Center"
															VerticalAlignment="Center"
															Fill="{TemplateBinding Foreground}"
															RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </igPrim:ExpansionIndicator.Style>
                        </igPrim:ExpansionIndicator>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ AddNewRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowExpansionIndicatorCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource ExpansionCellBackgroundBrush}"   />
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowExpansionIndicatorCellControl">
                    <Grid Background="Transparent">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooser Dialog Button _____________________________________________________-->
    <Style x:Key="ColumnChooserDialogBtn" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="2">
                            <Rectangle StrokeThickness="1" Stroke="{StaticResource FilterSelectionItemHighlightBrush}" RadiusY="1" RadiusX="1"/>
                        </Border>
                        <Grid
			                    x:Name="columnChooserIcon"
			                    Width="14"
			                    Height="14"
			                    VerticalAlignment="Center"
			                    HorizontalAlignment="Center">
                            <Path Fill="{StaticResource HeaderNormalBackgroundBrush}" Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z"/>
                            <Path Fill="{StaticResource GridBorderBrush}" Data="M 1,5 C1,5 6,5 6,5 6,5 6,7 6,7 6,7 1,7 1,7 1,7 1,5 1,5 zM 1,8 C1,8 6,8 6,8 6,8 6,10 6,10 6,10 1,10 1,10 1,10 1,8 1,8 zM 1,11 C1,11 6,11 6,11 6,11 6,13 6,13 6,13 1,13 1,13 1,13 1,11 1,11 zM 7,7 C7,7 13,7 13,7 13,7 13,9 13,9 13,9 7,9 7,9 7,9 7,7 7,7 zM 7,4 C7,4 13,4 13,4 13,4 13,6 13,6 13,6 7,6 7,6 7,6 7,4 7,4 zM 4,1 C4,1 13,1 13,1 13,1 13,3 13,3 13,3 4,3 4,3 4,3 4,1 4,1 zM 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,14 0,14 0,14 7,14 7,14 7,14 7,10 7,10 7,10 14,10 14,10 14,10 14,0 14,0 14,0 3,0 3,0 z"/>
                            <Grid Margin="0,0,0,1">
                                <Border
					                    Width="6"
					                    Height="3"
					                    Margin="0,0,2,2"
					                    BorderBrush="Black"
					                    BorderThickness="0,0,1,1"
					                    CornerRadius="0,0,2,0"/>
                                <Path
					                    Width="5"
					                    Height="3"
					                    Margin="3,1,0,0"
					                    VerticalAlignment="Top"
					                    Data="M 0,2 C0,2 0,3 0,3 0,3 5,3 5,3 5,3 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 2,0 2,0 2,0 2,1 2,1 2,1 1,1 1,1 1,1 1,2 1,2 1,2 0,2 0,2 z"
					                    Fill="Black"
					                    Stretch="Fill"/>
                            </Grid>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnChooserPopupItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed" Grid.ColumnSpan="2">
                            <Rectangle StrokeThickness="1" Stroke="{StaticResource FilterSelectionItemHighlightBrush}" RadiusY="1" RadiusX="1"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Column="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HeaderDropDownButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="rectangle" Visibility="Collapsed">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.76,0" EndPoint="0.76,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FF3e3e3e"/>
                                            <GradientStop Offset="0.93" Color="#FF272727"/>
                                            <GradientStop Offset="0.97" Color="#FF272727"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ Menu Brushes (11.2 Feature)  _____________________________________________________-->

    <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFFFFFFF" Offset="0" />
            <GradientStop Color="#FFF2F4F5" Offset="0.48" />
            <GradientStop Color="#FFCFD5DA" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuPopupOuterBorderBrush" StartPoint="0.5,0" EndPoint="0.5,0.1">

        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFa2adb8" Offset="0"/>
                <GradientStop Color="#FF8498a8" Offset="0.3790000081062317"/>
                <GradientStop Color="#FF718496" Offset="0.3799999952316284"/>
                <GradientStop Color="#FF617583" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MenuSeparatorLine" Color="#FF9D989E"/>

    <!--__________________________________ MenuItems Brushes  (11.2 Feature) _____________________________________________________-->

    <LinearGradientBrush x:Key="MenuItemMouseOver" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFffeea8"/>
        <GradientStop Offset="0.23" Color="#FFffe47f"/>
        <GradientStop Offset="0.5" Color="#FFffe37c"/>
        <GradientStop Offset="0.75" Color="#FFffe994"/>
        <GradientStop Offset="1" Color="#FFfffce0"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemMouseOverBorder" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFF8CE57"/>
        <GradientStop Offset="1" Color="#FFF8D52F"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MenuItemHighlighted" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#FFffeea8"/>
        <GradientStop Offset="0.23" Color="#FFffe47f"/>
        <GradientStop Offset="0.5" Color="#FFffe37c"/>
        <GradientStop Offset="0.75" Color="#FFffe994"/>
        <GradientStop Offset="1" Color="#FFfffce0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuItemHighlightedBorder" Color="#FFF8D433"/>

    <SolidColorBrush x:Key="MenuItemVerticalBrush" Color="#FFF2F4F5" />
    <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="#FFFFFFFF" />

    <!--__________________________________ HeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:HeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:HeaderCellControl">
                    <igPrim:SimpleClickableContainer
							x:Name="NormalFill"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="0,0,1,1">
                        <igBase:Commanding.Commands>
                            <igBase:CommandSourceCollection>
                                <ig:XamGridColumnCommandSource CommandType="Select" EventName="SimpleClick"/>
                                <ig:XamGridColumnCommandSource CommandType="SortToggle" EventName="SimpleClick"/>
                            </igBase:CommandSourceCollection>
                        </igBase:Commanding.Commands>
                        <Grid x:Name="Bd">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition ></ColumnDefinition>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenLeftAdjacentColumnsElement">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ToolTipService.ToolTip>
                                <igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Border Background="Transparent" Width="10">
                                        <Rectangle x:Name="hiddenColumnIndicator" Fill="{StaticResource HeaderNormalBorderBrush}" Width="1" HorizontalAlignment="Left"/>
                                    </Border>
                                </igPrim:HeaderDropDownControl.OpenButtonContent>
                                <Grid>
                                    <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="25"  MaxWidth="25"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.RowSpan="2" BorderBrush="#FFE2E4E7" BorderThickness="0,0,1,0" />
                                            <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent"  BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <igBase:Commanding.Commands>
                                                    <igBase:CommandSourceCollection>
                                                        <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                    </igBase:CommandSourceCollection>
                                                </igBase:Commanding.Commands>
												<ListBox.Resources>
													<Style TargetType="ScrollViewer" BasedOn="{StaticResource Office2010ScrollViewer}"/>
												</ListBox.Resources>
											</ListBox>
                                            <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource CellItemNormalBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                    <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderNormalForegroundBrush}"/>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </igPrim:HeaderDropDownControl>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid
								Grid.Column="2"
								x:Name="SortAndPinIndicators"
								HorizontalAlignment="Right"
								Margin="0,0,5,0"
								Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Path
									x:Name="SortedDescending"
									HorizontalAlignment="Right"
									Margin="3,0"
									VerticalAlignment="Center"
									Data="M 0 0 L 4 4 L 8 0 Z"
									Fill="{StaticResource HeaderCellGlyphBrush}"
									Visibility="Collapsed"/>
                                <Path
									x:Name="SortedAscending"
									HorizontalAlignment="Right"
									Margin="3,0"
									VerticalAlignment="Center"
									Data="M0,4 L8,4 L4,0 z"
									Fill="{StaticResource HeaderCellGlyphBrush}"
									Visibility="Collapsed"/>
                                <Grid
									x:Name="PinnedIndicator"
									Grid.Column="3"
									Background="Transparent"
									Cursor="Hand"
									Visibility="Collapsed">
                                    <Path
										Width="7"
										Height="10"
										Margin="3,0"
										Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
											Stretch="Fill"/>
                                    <igBase:Commanding.Command>
                                        <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                                        </ig:XamGridColumnCommandSource>
                                    </igBase:Commanding.Command>
                                </Grid>
                                <Grid
									x:Name="UnpinnedIndicator"
									Grid.Column="3"
									Background="Transparent"
									Cursor="Hand"
									Visibility="Collapsed">
                                    <Path
										Width="10"
										Height="7"
										Margin="3,0"
										Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                    <igBase:Commanding.Command>
                                        <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                                        </ig:XamGridColumnCommandSource>
                                    </igBase:Commanding.Command>
                                </Grid>
                                <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="Transparent" Visibility="Collapsed" Grid.Column="1">
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Path
											Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
											Fill="{StaticResource HeaderCellGlyphBrush}"
											Width="5"
											Height="7"
											x:Name="summarySigmaIcon"
											StrokeThickness="0"/>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:SummarySelectionControl>
                                </igPrim:HeaderDropDownControl>
                                <igPrim:HeaderDropDownControl AllowResizing="true" x:Name="FilterHeaderDropDownControl" Visibility="Collapsed" Background="Transparent" Grid.Column="2">
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Grid Width="11" Height="9">
                                            <Path
							    x:Name="clearFilterGlyphStroke"
			                                    Width="11"
			                                    Height="9"
			                                    Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,9 4,9 4,9 7,9 7,9 7,9 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,1 10,1 10,1 11,1 11,1 11,1 11,0 11,0 11,0 0,0 0,0 z"
			                                    Stretch="Fill">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.59,1.01">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Offset="0" Color="#FFc0b8c0"/>
                                                                <GradientStop Offset="0.58" Color="#FF707070"/>
                                                                <GradientStop Offset="1" Color="#FF000800"/>
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>

                                            <Path	x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="#FFFFFFFF"
												Stretch="Fill"/>

                                            <Path
                                                x:Name="redFilterGlyphFill"
			                                    Width="7"
			                                    Height="5"
			                                    Margin="0,1,0,0"
			                                    VerticalAlignment="Top"
			                                    Data="M 2,1 C2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,6 5,6 5,6 6,6 6,6 6,6 6,4 6,4 6,4 7,4 7,4 7,4 7,3 7,3 7,3 8,3 8,3 8,3 8,2 8,2 8,2 9,2 9,2 9,2 9,1 9,1 9,1 2,1 2,1 z"
			                                    Stretch="Fill">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.55,0.92">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Offset="0" Color="#FFffffff"/>
                                                                <GradientStop Offset="1" Color="#FF909890"/>
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                        </Grid>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <igPrim:FilterSelectorControl Height="370" MinWidth="250" MinHeight="370" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"  Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:FilterSelectorControl>
                                </igPrim:HeaderDropDownControl>

                                <Grid x:Name="VisibilityToggleButton" Background="Transparent" Width="14" Visibility="Collapsed" Grid.Column="4" Cursor="Hand">
                                    <Path
				                        Width="8"
				                        Height="7"
				                        Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
				                        Fill="{StaticResource HeaderCellGlyphBrush}"/>
                                    <igBase:Commanding.Command>
                                        <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown"/>
                                    </igBase:Commanding.Command>
                                </Grid>

                            </Grid>
                            <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </ToolTipService.ToolTip>
                                <igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Border Background="Transparent" Width="10">
                                        <Rectangle Fill="{StaticResource HeaderNormalBorderBrush}" Width="1" HorizontalAlignment="Right"/>
                                    </Border>
                                </igPrim:HeaderDropDownControl.OpenButtonContent>
                                <Grid>
                                    <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                        <Border.Effect>
                                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                        </Border.Effect>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="24" MaxWidth="24"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Border Grid.RowSpan="2" BorderBrush="#FFE2E4E7" BorderThickness="0,0,1,0" />
                                            <ListBox DataContext="{x:Null}"  ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                                <igBase:Commanding.Commands>
                                                    <igBase:CommandSourceCollection>
                                                        <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                    </igBase:CommandSourceCollection>
                                                </igBase:Commanding.Commands>
												<ListBox.Resources>
													<Style TargetType="ScrollViewer" BasedOn="{StaticResource Office2010ScrollViewer}"/>
												</ListBox.Resources>
                                            </ListBox>
                                            <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource CellItemNormalBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                    <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderNormalForegroundBrush}"/>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </igPrim:HeaderDropDownControl>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="SortAndPinIndicators"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderMovingBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderMovingBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Storyboard.TargetName="NormalFill"
												Storyboard.TargetProperty="BorderThickness">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedIndicatorStates">
                                <VisualState x:Name="NotFixable"/>
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SummaryStates">
                                <VisualState x:Name="Summable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SummaryHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unsummable">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderFilterStates">
                                <VisualState x:Name="NoIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FilterIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FilterHeaderDropDownControl" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderFilterAppliedStates">
                                <VisualState x:Name="NotFiltered">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Filtered">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="clearFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="redFilterGlyphFill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="VisibilityIconStates">
                                <VisualState x:Name="VisibilityIconHidden"/>
                                <VisualState x:Name="VisibilityIconVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenLeftAdjacentColumns"/>
                                <VisualState x:Name="HiddenLeftAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenRightAdjacentColumns"/>
                                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </igPrim:SimpleClickableContainer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ChildBandCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ChildBandCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ChildBandCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Fill="#FFC7CED6" x:Name="ActiveRect" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="{StaticResource HeaderHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorFooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorFooterCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ RowSelectorHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:RowSelectorHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:RowSelectorHeaderCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorFooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorFooterCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ExpansionIndicatorHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ExpansionIndicatorHeaderCellControl">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FooterCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource FooterBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FooterCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ CellControl _____________________________________________________-->
    <Style TargetType="ig:CellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:CellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="3" Visibility="Collapsed"/>
                        <ContentPresenter   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ AddNewRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:AddNewRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:AddNewRowCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle Fill="{StaticResource CellRowHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="3" Visibility="Collapsed"/>

                        <ContentPresenter   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummaryRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:SummaryRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Padding" Value="7,3"/>
        <Setter Property="SummaryDisplayTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
                        <TextBlock Text=" = "/>
                        <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummaryRowCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Rectangle Height="1" VerticalAlignment="Top" Fill="#7FFFFFFF"/>
                        </Border>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>
                        <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="Right" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--___________________________________ FilterClearButton ______________________________________________________-->
    <Style x:Key="NoChromeBtn" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FilterRowCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FilterRowCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource AddNewRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterRowCellControl">
                    <Grid x:Name="FilterUIArea">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AllowFiltering">
                                <VisualState x:Name="ShowFilterUIWithCancelButton" >
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ShowFilterUI"/>
                                <VisualState x:Name="HideFilterUI" >
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearFilters" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="OperatorControl" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FilterCellValueVisibility">
                                <VisualState x:Name="ShowFilterCellValue"></VisualState>
                                <VisualState x:Name="HideFilterCellValue">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterCellValueContent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="FilterRowElem" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="{StaticResource CellRowHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <igPrim:FilterControl x:Name="OperatorControl" Grid.Column="0"/>
                            <ContentPresenter x:Name="FilterCellValueContent" Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,3,3,3"/>
                            <ContentControl x:Name="ClearFilters" Grid.Column="2" Padding="0,0,5,0" Visibility="Collapsed"  HorizontalAlignment="Center" VerticalAlignment="Center"  >
                                <igBase:Commanding.Command>
                                    <ig:XamGridFilteringCommandSource EventName="MouseLeftButtonDown" CommandType="ClearFilters"></ig:XamGridFilteringCommandSource>
                                </igBase:Commanding.Command>
                                <Grid Width="15" Height="10" Background="Transparent" Cursor="Hand">
                                    <Path
			                                        Width="11"
			                                        Height="9"
			                                        Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 4,4 4,4 4,4 4,9 4,9 4,9 7,9 7,9 7,9 7,4 7,4 7,4 8,4 8,4 8,4 8,3 8,3 8,3 9,3 9,3 9,3 9,2 9,2 9,2 10,2 10,2 10,2 10,1 10,1 10,1 11,1 11,1 11,1 11,0 11,0 11,0 0,0 0,0 z"
			                                        Stretch="Fill"
                                                       VerticalAlignment="Top">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0.59,1.01">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFc0b8c0"/>
                                                        <GradientStop Offset="0.58" Color="#FF707070"/>
                                                        <GradientStop Offset="1" Color="#FF000800"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path
			                                        Width="7"
			                                        Height="5"
			                                        Margin="0,1,0,0"
			                                        VerticalAlignment="Top"
			                                        Data="M 2,1 C2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,6 5,6 5,6 6,6 6,6 6,6 6,4 6,4 6,4 7,4 7,4 7,4 7,3 7,3 7,3 8,3 8,3 8,3 8,2 8,2 8,2 9,2 9,2 9,2 9,1 9,1 9,1 2,1 2,1 z"
			                                        Stretch="Fill">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0.55,0.92">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFffffff"/>
                                                        <GradientStop Offset="1" Color="#FF909890"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path
			                                        x:Name="clearFilterGlyphAdorner"
			                                        Width="5"
			                                        Height="4"
			                                        HorizontalAlignment="Right"
			                                        Margin="10,4,0,0"
			                                        VerticalAlignment="Bottom"
			                                        Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
			                                        Fill="Red"
			                                        Stretch="Fill"/>
                                </Grid>
                            </ContentControl>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ MovingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:MovingIndicator">
        <Setter Property="Background" Value="{StaticResource MoveIndicatorBrush}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:MovingIndicator">
                    <Canvas>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path
								x:Name="TopIndicator"
								Width="{TemplateBinding Width}"
								Height="9"
								Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z"
								Fill="{TemplateBinding Background}"/>
                        <Path
								x:Name="BottomIndicator"
								Width="{TemplateBinding Width}"
								Height="9"
								Data="M 3,9 C3,9 3,5 3,5 3,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 9,4 9,4 9,4 9,5 9,5 9,5 6,5 6,5 6,5 6,9 6,9 6,9 3,9 3,9 z"
								Fill="{TemplateBinding Background}"/>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ResizingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:ResizingIndicator">
        <Setter Property="Background" Value="{StaticResource ResizeIndicatorBrush}"/>
        <Setter Property="Width" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ResizingIndicator">
                    <Canvas>
                        <Rectangle x:Name="FillIndicator" Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{Binding Path=Height,RelativeSource={RelativeSource TemplatedParent}}"></Rectangle>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ Styles for Pager _______________________________________________-->
    <Style x:Key="PagerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Padding" Value="0,0,0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="hoverRec" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pressedRec" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".3"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="hoverRec" Stroke="{StaticResource PagerButtonBorderBrush}" Fill="{StaticResource PagerButtonHoverBackgroundBrush}" Visibility="Collapsed" StrokeThickness="1"/>
                        <Rectangle x:Name="pressedRec" Stroke="{StaticResource PagerButtonBorderBrush}" Fill="{StaticResource PagerButtonPressedBackgroundBrush}" Visibility="Collapsed" StrokeThickness="1"/>
                        <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PagerItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="5,1,5,1"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="pagerItem" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerButtonHoverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="itemFill" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PagerButtonBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor" Fill="{StaticResource PagerButtonHoverBackgroundBrush}" Stroke="{StaticResource PagerButtonBorderBrush}" IsHitTestVisible="False" Opacity="0"/>
                        <Grid>
                            <Border x:Name="itemFill" Background="Transparent" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <TextBlock x:Name="pagerItem" Foreground="{TemplateBinding Foreground}" TextAlignment="Center" VerticalAlignment="Center"  Text="{Binding}" Margin="{TemplateBinding Padding}"></TextBlock>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________________ FilterControl Button Style __________________________________ -->
    <Style x:Key="FilterDropdownToggle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterDropdown" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                                <VisualState x:Name="InvalidFocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <ToggleButton x:Name="DropDownToggle" Background="Transparent" HorizontalAlignment="Stretch" Margin="0" Style="{StaticResource FilterDropdownToggle}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right"  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
              RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="Popup"  IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border x:Name="PopupBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border.Effect>
                                    <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                </Border.Effect>
                                <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1" Background="Transparent" Style="{StaticResource Office2010ScrollViewer}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ______________________________________FilterControl_________________________________________ -->
    <Style TargetType="igPrim:FilterControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FilterImage">
                                <VisualState x:Name="Equals">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="=">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="StartsWith">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="ABc">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="EndsWith">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="aBC">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GreaterThan">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FilterComparisonButton" Storyboard.TargetProperty="(Content)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value=">">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Button x:Name="FilterOperandButton" Width="20" HorizontalAlignment="Left" ContentTemplate="{TemplateBinding SelectedItemIcon}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Style="{StaticResource NoChromeBtn}"/>
                        <ComboBox x:Name="FilterOperands" Width="16" Style="{StaticResource FilterDropdown}" Cursor="Hand" ItemContainerStyle="{StaticResource Office2010ComboBoxItemStyle}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="16" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                        <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!-- _________________________________ PagerControl___________________________________________-->
    <Style TargetType="igPrim:PagerControl" >
        <Setter Property="MaximumAvailablePagerValues" Value="10"/>
        <Setter Property="Margin" Value="10,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PagerControl">
                    <StackPanel Orientation="Horizontal" Background="{TemplateBinding Background}" HorizontalAlignment="Right" >
                        <Button  x:Name="FirstPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Path
			                         Width="6"
			                         Height="7"
			                         Data="M 2,3 C2,3 2,4 2,4 2,4 3,4 3,4 3,4 3,5 3,5 3,5 4,5 4,5 4,5 4,6 4,6 4,6 5,6 5,6 5,6 5,7 5,7 5,7 6,7 6,7 6,7 6,0 6,0 6,0 5,0 5,0 5,0 5,1 5,1 5,1 4,1 4,1 4,1 4,2 4,2 4,2 3,2 3,2 3,2 3,3 3,3 3,3 2,3 2,3 zM 0,0 C0,0 0,7 0,7 0,7 1,7 1,7 1,7 1,0 1,0 1,0 0,0 0,0 z"
			                         Stretch="Fill"
                                        Fill="{StaticResource PagerGlyphBrush}"/>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="FirstPage" ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Button x:Name="PreviousPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Path
			                         Width="4"
			                         Height="7"
			                         Data="M 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
			                         Stretch="Fill"
                                        Fill="{StaticResource PagerGlyphBrush}"/>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="PreviousPage"  ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <ListBox x:Name="PagerItems" ItemContainerStyle="{StaticResource PagerItemStyle}" Background="Transparent" BorderThickness="0" >
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="SelectionChanged" CommandType="GoToPage"  ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"></StackPanel>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox >
                        <Button x:Name="NextPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Path
			                         Width="4"
			                         Height="7"
			                         Data="M 4,3 C4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,5 3,5 3,5 2,5 2,5 2,5 2,6 2,6 2,6 1,6 1,6 1,6 1,7 1,7 1,7 0,7 0,7 0,7 0,0 0,0 0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 z"
			                         Stretch="Fill"
                                        Fill="{StaticResource PagerGlyphBrush}"/>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="NextPage"  ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Button  x:Name="LastPageButton" Style="{StaticResource PagerButtonStyle}">
                            <Path
			                         Width="6"
			                         Height="7"
			                         Data="M 4,3 C4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,5 3,5 3,5 2,5 2,5 2,5 2,6 2,6 2,6 1,6 1,6 1,6 1,7 1,7 1,7 0,7 0,7 0,7 0,0 0,0 0,0 1,0 1,0 1,0 1,1 1,1 1,1 2,1 2,1 2,1 2,2 2,2 2,2 3,2 3,2 3,2 3,3 3,3 3,3 4,3 4,3 zM 6,0 C6,0 6,7 6,7 6,7 5,7 5,7 5,7 5,0 5,0 5,0 6,0 6,0 z"
			                         Stretch="Fill"
                                        Fill="{StaticResource PagerGlyphBrush}"/>
                            <igBase:Commanding.Command>
                                <ig:XamGridPagingControlsCommandSource EventName="Click" CommandType="LastPage" ></ig:XamGridPagingControlsCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderCellControl">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderHeaderCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderHeaderCellControl">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedBorderFooterCellControl _____________________________________________________-->
    <Style TargetType="igPrim:FixedBorderFooterCellControl">
        <Setter Property="Background" Value="{StaticResource FixedBorderFillBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedBorderFooterCellControl">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ClickableContainer _____________________________________________________-->
    <Style TargetType="igPrim:SimpleClickableContainer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SimpleClickableContainer">
                    <Border x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ DropAreaIndicator _____________________________________________________-->
    <Style TargetType="igPrim:DropAreaIndicator">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                    <GradientStop Color="#79000000"/>
                    <GradientStop Color="#BF000000" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DropAreaIndicator">
                    <Border x:Name="Root" Opacity="{TemplateBinding Opacity}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderTransformOrigin="0,0">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="rootScale" ScaleX="0"></ScaleTransform>
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Hidden" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <DoubleAnimation To="1" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX"></DoubleAnimation>
                                        <DoubleAnimation From="1" To="1" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity"></DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisplayFromLeft">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                                            <EasingPointKeyFrame KeyTime="00:00:00" Value="0,0"/>
                                        </PointAnimationUsingKeyFrames>
                                        <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="Root" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>1,0,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisplayFromRight">
                                    <Storyboard>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="RenderTransformOrigin">
                                            <EasingPointKeyFrame KeyTime="00:00:00" Value="1,0"/>
                                        </PointAnimationUsingKeyFrames>
                                        <!-- Leave Ease -->
                                        <DoubleAnimation To="1" Duration="00:00:00.3" Storyboard.TargetName="rootScale" Storyboard.TargetProperty="ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________________ PagerCellControl________________________________________-->
    <Style TargetType="igPrim:PagerCellControl">
        <Setter Property="Background" Value="{StaticResource PagerAreaBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:PagerCellControl">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Orientation">
                                <VisualState x:Name="Top">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="VerticalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <VerticalAlignment>Bottom</VerticalAlignment>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="pagerStroke" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="pagerStroke" Height="1" VerticalAlignment="Top" Background="{TemplateBinding BorderBrush}" Visibility="Collapsed"/>
                        <igPrim:PagerControl x:Name="PagerItemControl" >
                            <igBase:Commanding.Commands>
                                <igBase:CommandSourceCollection>
                                    <ig:XamGridPagingCommandSource EventName="FirstPage"  CommandType="FirstPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="LastPage"  CommandType="LastPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="PreviousPage"  CommandType="PreviousPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="NextPage"  CommandType="NextPage" >
                                    </ig:XamGridPagingCommandSource>
                                    <ig:XamGridPagingCommandSource EventName="GoToPage"  CommandType="GoToPage" >
                                    </ig:XamGridPagingCommandSource>
                                </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                        </igPrim:PagerControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOver1" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive"/>
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="NormalFill"/>
                        <Rectangle Fill="{StaticResource HeaderHoverBackgroundBrush}" x:Name="MouseOver1" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Rectangle Fill="#FFC7CED6" StrokeThickness="1"  x:Name="ActiveRect" Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <ContentPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ___________________________ GroupByAreaCellControlExpansionDecorator ____________________________-->
    <Style x:Key="ExpansionBar" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource GroupByBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FF8399a9"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Rectangle.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="elemVisual" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByExpanderPressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByExpanderPressedBorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="highlight" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource GroupByExpanderPressedHighlightBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="elemVisual" Visibility="Collapsed">
                            <Border x:Name="Bd" Background="{StaticResource GroupByExpanderHoverBackgroundBrush}" BorderBrush="{StaticResource GroupByExpanderHoverBorderBrush}"/>
                            <Rectangle x:Name="highlight" Stroke="{StaticResource GroupByExpanderHoverHighlightBrush}" Margin="0,0,0,1"/>
                        </Grid>
                        <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource GroupByExpanderHoverBorderBrush}"/>
                        <ContentPresenter
								x:Name="contentPresenter"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- _________________________________ GroupByAreaCellControl ________________________________________-->
    <Style TargetType="igPrim:GroupByAreaCellControl">
        <Setter Property="Background" Value="{StaticResource GroupByBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByAreaCellControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="ExpansionIndicator" Height="11" VerticalAlignment="Top" IsChecked="{TemplateBinding IsExpanded}" Style="{StaticResource ExpansionBar}" >
                            <igBase:Commanding.Commands>
                                <igBase:CommandSourceCollection>
                                    <ig:XamGroupByAreaCommandSource EventName="Checked" CommandType="Expand"></ig:XamGroupByAreaCommandSource>
                                    <ig:XamGroupByAreaCommandSource EventName="Unchecked" CommandType="Collapse"></ig:XamGroupByAreaCommandSource>
                                </igBase:CommandSourceCollection>
                            </igBase:Commanding.Commands>
                            <Grid>
                                <Grid x:Name="topGlyphSet" Visibility="Collapsed">
                                    <Path x:Name="topExpandGlyph" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                                    <Path x:Name="topCollapseGlyph"  Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                                </Grid>
                                <Grid x:Name="bottomGlyphSet" Visibility="Collapsed">
                                    <Path x:Name="bottomExpandGlyph"  Data="M0,4 L8,4 L4,0 z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                                    <Path x:Name="bottomCollapseGlyph" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{StaticResource HeaderCellGlyphBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" UseLayoutRounding="True" Visibility="Collapsed" Margin="0,0,0,2" />
                                </Grid>
                            </Grid>
                        </ToggleButton>
                        <Border x:Name="panelContainer" Grid.Row="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Grid.Row="1" x:Name="PanelArea" MinHeight="30">
                                <Rectangle x:Name="fill" Fill="{TemplateBinding Background}"/>
                                <Rectangle x:Name="bgGlow" VerticalAlignment="Bottom" Height="20" Opacity="0">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush RadiusX="0.75" RadiusY="0.75" GradientOrigin="0.5,1.5">
                                            <GradientStop Color="#BFFFFFFF" Offset="0.2"/>
                                            <GradientStop Color="#00617583" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="glassHighlight" Height="18" VerticalAlignment="Top" Fill="{StaticResource GroupByHighlightBrush}"/>
                                <ContentControl x:Name="EmptyContentControl" Content="{TemplateBinding EmptyContent}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="10,0"/>
                                <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto" BorderThickness="0" Style="{StaticResource Office2010ScrollViewer}">
                                    <igPrim:GroupByAreaPanel Margin="5" x:Name="Panel"></igPrim:GroupByAreaPanel>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionVisibilityStates">
                                <VisualState x:Name="ExpansionVisible" />
                                <VisualState x:Name="ExpansionHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandedStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="bottomCollapseGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="topCollapseGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="bottomExpandGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="topExpandGlyph" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisplayStates">
                                <VisualState x:Name="Empty" />
                                <VisualState x:Name="NonEmpty">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="EmptyContentControl" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DraggingStates">
                                <VisualState x:Name="NotDragging">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgGlow" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Dragging"/>
                                <VisualState x:Name="DraggingOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bgGlow" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GroupByAreaLocation">
                                <VisualState x:Name="Top">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="topGlyphSet" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="panelContainer" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>0</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Int32>1</System:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpansionIndicator" Storyboard.TargetProperty="(Control.BorderThickness)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,1,0,0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="bottomGlyphSet" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--____________________________ GroupByHeaderCellControlCloseButton ________________________________________________-->
    <Style x:Key="GroupByHeaderCloseBtn" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource GroupByCloseBtnBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupByCloseBtnBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0,0,0,1" />
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
                            <Rectangle Stroke="#59FFFFFF"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource GroupByHeaderBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,3,6,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByHeaderCellControl">
                    <igPrim:SimpleClickableContainer>
                        <igBase:Commanding.Command>
                            <ig:XamGridColumnCommandSource EventName="SimpleClick" CommandType="SortToggle"/>
                        </igBase:Commanding.Command>
                        <Grid x:Name="Root">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="8"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="connectorRec" Fill="#FF000000" Grid.Column="1" Height="1"/>
                            <Border x:Name="fill" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>

                            <Border x:Name="fillMoving" Visibility="Collapsed" Background="{StaticResource HeaderMovingBackgroundBrush}" BorderBrush="{StaticResource HeaderMovingBorderBrush}" BorderThickness="0,1"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Column="0"/>
                                <Path x:Name="SortedDescending" Grid.Column="1" Fill="{StaticResource HeaderCellGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M 0 0 L 4 4 L 8 0 Z" Margin="5,0"/>
                                <Path x:Name="SortedAscending" Grid.Column="1" Fill="{StaticResource HeaderCellGlyphBrush}" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="0" Data="M0,4 L8,4 L4,0 z" Margin="5,0"/>
                                <Button Style="{StaticResource GroupByHeaderCloseBtn}" x:Name="closeButton" Opacity="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" d:LayoutOverrides="GridBox" Margin="0,0,10,0">
                                    <igBase:Commanding.Command>
                                        <ig:XamGridColumnCommandSource EventName="Click" CommandType="RemoveGroupBy" />
                                    </igBase:Commanding.Command>
                                    <Path
										Width="9"
										Height="7"
										Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,2 1,2 1,2 2,2 2,2 2,2 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,5 2,5 2,5 1,5 1,5 1,5 1,6 1,6 1,6 0,6 0,6 0,6 0,7 0,7 0,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,6 5,6 5,6 6,6 6,6 6,6 6,7 6,7 6,7 7,7 7,7 7,7 8,7 8,7 8,7 9,7 9,7 9,7 9,6 9,6 9,6 8,6 8,6 8,6 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,1 8,1 8,1 9,1 9,1 9,1 9,0 9,0 9,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 4,2 4,2 4,2 4,1 4,1 4,1 3,1 3,1 3,1 3,0 3,0 3,0 0,0 0,0 z"
										Fill="#ffffff"/>
                                </Button>
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="closeButton" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fillMoving" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="fill" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FirstStates">
                                <VisualState x:Name="NotFirst" />
                                <VisualState x:Name="First"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LastStates">
                                <VisualState x:Name="NotLast" />
                                <VisualState x:Name="Last">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="connectorRec">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortedStates">
                                <VisualState x:Name="NotSorted">
                                </VisualState>
                                <VisualState x:Name="Ascending">
                                    <Storyboard >
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedAscending" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Descending">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SortedDescending" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </igPrim:SimpleClickableContainer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByMovingIndicator _____________________________________________________-->
    <Style TargetType="igPrim:GroupByMovingIndicator">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="HorizontalOffset" Value="-8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByMovingIndicator">
                    <Canvas >
                        <Path
			                    Width="{TemplateBinding Width}"
			                    Height="{TemplateBinding Height}"
			                    Data="M 3,0 C3,0 3,4 3,4 3,4 0,4 0,4 0,4 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,8 3,8 3,8 4,8 4,8 4,8 4,9 4,9 4,9 5,9 5,9 5,9 5,8 5,8 5,8 6,8 6,8 6,8 6,7 6,7 6,7 7,7 7,7 7,7 7,6 7,6 7,6 8,6 8,6 8,6 8,5 8,5 8,5 9,5 9,5 9,5 9,4 9,4 9,4 6,4 6,4 6,4 6,0 6,0 6,0 3,0 3,0 z"
			                    Fill="{TemplateBinding Background}"
                                   Margin="0,-9,0,0"/>
                        <Path
			                    Width="{TemplateBinding Width}"
			                    Height="{TemplateBinding Height}"
			                    Data="M 3,9 C3,9 3,5 3,5 3,5 0,5 0,5 0,5 0,4 0,4 0,4 1,4 1,4 1,4 1,3 1,3 1,3 2,3 2,3 2,3 2,2 2,2 2,2 3,2 3,2 3,2 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 5,0 5,0 5,0 5,1 5,1 5,1 6,1 6,1 6,1 6,2 6,2 6,2 7,2 7,2 7,2 7,3 7,3 7,3 8,3 8,3 8,3 8,4 8,4 8,4 9,4 9,4 9,4 9,5 9,5 9,5 6,5 6,5 6,5 6,9 6,9 6,9 3,9 3,9 z"
			                    Fill="{TemplateBinding Background}"
                                   Margin="0,22,0,0"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ GroupByColumnLayoutHeaderCellControl _____________________________________________________-->
    <Style TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource GroupByHeaderBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GroupByHeaderBorderBrush}"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="20,0,0,0"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupByColumnLayoutHeaderCellControl">
                    <Border x:Name="NormalFill" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" d:LayoutOverrides="Width" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ FixedRowSeparator _____________________________________________________-->
    <Style TargetType="igPrim:FixedRowSeparator">
        <Setter Property="Background" Value="{StaticResource ExpansionCellBorderBrush}"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FixedRowSeparator">
                    <Rectangle Fill="{TemplateBinding Background}"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ HeaderDropDownControl _____________________________________________________-->
    <Style TargetType="igPrim:HeaderDropDownControl">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:HeaderDropDownControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ResizeStates">
                                <VisualState x:Name="NotResizable"/>
                                <VisualState x:Name="Resizable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Resizer" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition Height="0"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Button x:Name="OpenButton" Padding="{TemplateBinding Padding}" VerticalContentAlignment="Stretch" Content="{TemplateBinding OpenButtonContent}" Style="{StaticResource NoChromeBtn}">
                            <igBase:Commanding.Command>
                                <igPrim:XamGridPopupCommandSource CommandType="TogglePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                            </igBase:Commanding.Command>
                        </Button>
                        <Popup x:Name="Popup" Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter x:Name="cp"/>
                                <igPrim:PopupResizer x:Name="Resizer" Visibility="Collapsed"  Grid.Row="1" ResizeElement="{Binding ElementName=cp, Path=Content}"
                                                     BorderBrush="{StaticResource GridBorderBrush}"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ SummarySelectionControl _____________________________________________________-->
    <Style TargetType="igPrim:SummarySelectionControl" >
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PopupBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="CheckBoxStyle">
            <Setter.Value>
                <Style TargetType="CheckBox">
                    <Setter Property="Foreground" Value="#FF000000"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="10,0,0,0"/>
                    <Setter Property="Margin" Value="0,1"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="#FF808080"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="CheckBox">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver"/>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked"/>
                                            <VisualState x:Name="Indeterminate">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused"/>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ValidationStates">
                                            <VisualState x:Name="Valid"/>
                                            <VisualState x:Name="InvalidUnfocused"/>
                                            <VisualState x:Name="InvalidFocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <Rectangle x:Name="Background" Fill="#FFFFFFFF" Height="11" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Width="11"/>
                                        <Path x:Name="CheckIcon" Data="M 0,3 C0,3 0,5 0,5 0,5 1,5 1,5 1,5 1,6 1,6 1,6 2,6 2,6 2,6 2,7 2,7 2,7 3,7 3,7 3,7 3,6 3,6 3,6 4,6 4,6 4,6 4,5 4,5 4,5 5,5 5,5 5,5 5,4 5,4 5,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 7,1 7,1 7,1 7,0 7,0 7,0 6,0 6,0 6,0 6,1 6,1 6,1 5,1 5,1 5,1 5,2 5,2 5,2 4,2 4,2 4,2 4,3 4,3 4,3 3,3 3,3 3,3 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 0,3 0,3 z" Fill="Black" FlowDirection="LeftToRight" Height="7" Opacity="0" Stretch="Fill" Width="7"/>
                                        <Rectangle x:Name="IndeterminateIcon" Fill="Black" Height="2" Opacity="0" Width="6"/>
                                    </Grid>
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:SummarySelectionControl">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                        </Border.Effect>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="#FFE2E4E7" BorderThickness="0,0,1,0"  Width="24" HorizontalAlignment="Left" Margin="0,-1,0,0"/>
                            <StackPanel x:Name="Panel" Margin="{TemplateBinding Padding}"/>
                            <Rectangle Height="1" Fill="{StaticResource SeparatorBrush}" VerticalAlignment="Top" Margin="1,0" Grid.Row="1"/>
                            <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1" Margin="{TemplateBinding Padding}">
                                <Button x:Name="AcceptButton" Margin="0,0,5,0" Cursor="Hand" Content="{Binding OKCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource Office2010Button}">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:SummarySelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:SummarySelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                </Button>
                                <Button x:Name="CancelButton" Cursor="Hand" Content="{Binding CancelCaption, RelativeSource={RelativeSource TemplatedParent}}" Width="80" Style="{StaticResource Office2010Button}">
                                    <igBase:Commanding.Command>
                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                    </igBase:Commanding.Command>
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:CustomFilterDialogContentControl">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:CustomFilterDialogContentControl">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                                        x:Name="contentPresenter"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--__________________________________ ColumnFilterDialogControl _____________________________________________________-->
    <Style TargetType="igPrim:ColumnFilterDialogControl" >
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnFilterDialogControl">
                    <Grid>
                        <Border CornerRadius="{Binding Path=CornerRadius, ElementName=Bd}" Background="Transparent">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="15" Opacity="0.75" ShadowDepth="0" Direction="270"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Bd" CornerRadius="5" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#7fffffff"/>
                                            <GradientStop Offset="1" Color="#bfffffff"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border Background="{TemplateBinding Background}" Margin="5" CornerRadius="3" Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" MinWidth="175" />
                                        <ColumnDefinition Width="*" MinWidth="175" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition MinHeight="22"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition MinHeight="22"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <ComboBox x:Name="Operator1" Grid.Row="1" Margin="5" Style="{StaticResource Office2010ComboBoxStyle}">
                                        <ComboBox.ItemTemplate >
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="16" />
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                                    <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ContentControl IsTabStop="False" x:Name="Operand1" Grid.Row="1" Grid.Column="1" Margin="5" Width="200"  HorizontalContentAlignment="Stretch"  />

                                    <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="20,0,0,0" >
                                        <RadioButton x:Name="And" GroupName="AndOr" Content="{TemplateBinding AndRadioButtonText}" IsChecked="true"   Style="{StaticResource Office2010RadioButtonStyle}"/>
                                        <RadioButton x:Name="Or" GroupName="AndOr" Content="{TemplateBinding OrRadioButtonText}"  Margin="10,0,0,0" Style="{StaticResource Office2010RadioButtonStyle}"/>
                                    </StackPanel>

                                    <ComboBox x:Name="Operator2" Grid.Row="3" Margin="5" Style="{StaticResource Office2010ComboBoxStyle}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="16" />
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentControl IsTabStop="False" ContentTemplate="{Binding IconResolved}" VerticalAlignment="Center" HorizontalAlignment="Center"></ContentControl>
                                                    <TextBlock Text="{Binding DisplayName}" Grid.Column="1" Margin="5,0,0,0"></TextBlock>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <ContentControl IsTabStop="False" x:Name="Operand2" Grid.Row="3" Grid.Column="1" Margin="5"  Width="200"  HorizontalContentAlignment="Stretch" />

                                    <StackPanel Grid.Row="4" Orientation="Horizontal" Grid.ColumnSpan="4" HorizontalAlignment="Right" Margin="5">
                                        <Button Content="{TemplateBinding OKButtonText}" Width="74" Margin="0,0,10,0" Style="{StaticResource Office2010Button}">
                                            <igBase:Commanding.Commands>
                                                <igBase:CommandSourceCollection>
                                                    <igPrim:CustomFilteringDialogControlCommandSource CommandType="Accept" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                                    <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                                </igBase:CommandSourceCollection>
                                            </igBase:Commanding.Commands>
                                        </Button>
                                        <Button Content="{TemplateBinding CancelButtonText}" Width="74" Style="{StaticResource Office2010Button}">
                                            <igBase:Commanding.Command>
                                                <igPrim:CustomFilteringDialogControlCommandSource CommandType="Close" EventName="Click"></igPrim:CustomFilteringDialogControlCommandSource>
                                            </igBase:Commanding.Command>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--___________________________________ FilterSelectionItemStyle _____________________________________________________-->
    <Style x:Key="FilterSelectionItemStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource FilterSelectionItemBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource FilterSelectionItemBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent" >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                            <Rectangle StrokeThickness="1" Stroke="{StaticResource FilterSelectionItemHighlightBrush}" RadiusY="1" RadiusX="1"/>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--_____________________________________________________ CustomFilterDialog Control _____________________________________________________-->

    <DataTemplate x:Key="filterMenuCustom">
        <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}"
                                      IsSeparator="{Binding IsSeparator}"
                                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                      Header="{Binding Label}"
                                      ItemsSource="{Binding Children}"
                                      HorizontalAlignment="Stretch"
                                      SubmenuPreferredLocation="Right">
            <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                    <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" ></ig:XamGridFilterMenuCommandSource>
                    <igPrim:CustomFilteringDialogFilterMenuCommandSource CommandType="ShowCustomFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click" ></igPrim:CustomFilteringDialogFilterMenuCommandSource>
                    <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click"></igPrim:XamGridPopupFilterMenuConditionalCommandSource>
                </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
        </igPrim:FilterMenuXamMenuItem>
    </DataTemplate>
	<Style x:Key="RootFilterMenuXamMenuItem" TargetType="igPrim:FilterMenuXamMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="#FF00FF27" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard x:Name="MouseOverStoryboard" >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Highlighted">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" >
                                    <Storyboard >
                                        <DoubleAnimation From="1" To=".3" Duration="0"
                                                         Storyboard.TargetName="MenuItemPresenter"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SubmenuState">

                                <VisualState x:Name="SubmenuOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuOpenImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuClose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuCloseImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="MenuItemRole">
                                <VisualState x:Name="TopLevelHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelHeaderWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItemWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ArrowPanel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IsSeperatorItem">
                                <VisualState x:Name="IsNotSeperator"/>
                                <VisualState x:Name="IsSeperator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState >
                            </VisualStateGroup >

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Seperator" Visibility="Collapsed">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OrientationState">
                                    <VisualState x:Name="Horizontal"/>
                                    <VisualState x:Name="Vertical">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1"/>
                            <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="MenuItem">
                            <Rectangle x:Name="SelectedIndicator"
						                                Fill="{StaticResource MenuItemMouseOver}"
						                                Stroke="{StaticResource MenuItemMouseOverBorder}"
						                                Visibility="Collapsed"
						                                Grid.ColumnSpan="3"
						                                HorizontalAlignment="Stretch"
						                                RadiusX="1"
						                                RadiusY="1"
						                                Margin="1"/>
                            <Rectangle x:Name="HighlightedIndicator"
											             Fill="{StaticResource MenuItemHighlighted}"
											             Stroke="{StaticResource MenuItemHighlightedBorder}"
											             Visibility="Collapsed"
											             Grid.ColumnSpan="3"
											             HorizontalAlignment="Stretch"
											             RadiusX="1"
											             RadiusY="1"
											             Margin="1"/>

                            <!-- MenuItemPresenter - presentes the content of the menu item. -->
                            <ContentPresenter x:Name="MenuItemPresenter"
                                                Visibility="Visible"
                                                Opacity="1" Margin="32,0,0,0">
                                <ContentPresenter.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="#59ffffff" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                                        <!-- Icon presenter-->
                                        <ContentControl x:Name="HeaderIconPresenter"
                                                          Height="16"
                                                          Width="16"
                                                          Visibility="{TemplateBinding IconVisibilityResolved}"
                                                          Content="{TemplateBinding Icon}"
                                                          Margin="4,3,4,3"/>

                                        <!-- Checkbox presenter-->
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                                          Margin="4,3,4,3"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <ContentPresenter.Content>
                                                <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>

                                        <!-- Header presenter-->
                                        <Grid Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="HeaderPresenter"
													            Margin="5,3,5,3"
													            Content="{TemplateBinding Header}"
													            ContentTemplate="{TemplateBinding HeaderTemplate}"
													            Grid.Column="0"
													            VerticalAlignment="Center"/>

                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="Black"/>
                                        </Grid>

                                        <!-- Arrow indicator presenter-->
                                        <Grid Grid.Column="2"
										          x:Name="ArrowPanel"
										          VerticalAlignment="Center"
										          HorizontalAlignment="Center"
										          Visibility="Collapsed">
                                            <Path
										            Fill="Black"
										            x:Name="ArrowPanelPath"
										            VerticalAlignment="Center"
										            Margin="7,0,7,0"
										            Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                    </Grid>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup" >
                            <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                                <Border x:Name="PopupBorder" Opacity="0.01"
                                        Background="{StaticResource MenuItemBackgroundBrush}"
                                        BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBrush}"
                                                Width="27"  HorizontalAlignment="Left"/>
                                        <ScrollViewer x:Name="ScrollViewer"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                                                  Style="{StaticResource Office2010ScrollViewer}">

                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<DataTemplate x:Key="RootFilterMenuCustom">
        <igPrim:FilterMenuXamMenuItem IsCheckable="{Binding IsCheckable}"
                                      IsSeparator="{Binding IsSeparator}"
                                      IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                      Header="{Binding Label}"
                                      ItemsSource="{Binding Children}"
                                      HorizontalAlignment="Stretch"
                                      SubmenuPreferredLocation="Right"
									  Margin="-24,0,0,0"
									  Style="{StaticResource RootFilterMenuXamMenuItem}"
									  >
            <igBase:Commanding.Commands>
                <igBase:CommandSourceCollection>
                    <ig:XamGridFilterMenuCommandSource EventName="Click" CommandType="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" ></ig:XamGridFilterMenuCommandSource>
                    <igPrim:CustomFilteringDialogFilterMenuCommandSource CommandType="ShowCustomFilterDialog" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click" ></igPrim:CustomFilteringDialogFilterMenuCommandSource>
                    <igPrim:XamGridPopupFilterMenuConditionalCommandSource CommandType="ClosePopup" ConditionalCommandParameter="{Binding Path=SourceElement.DataContext.FilterOperands,RelativeSource={RelativeSource Self}}" EventName="Click"></igPrim:XamGridPopupFilterMenuConditionalCommandSource>
                </igBase:CommandSourceCollection>
            </igBase:Commanding.Commands>
        </igPrim:FilterMenuXamMenuItem>
    </DataTemplate>
	
	
	   
    <Style x:Key="FilterMenuXamMenuStyle"
           TargetType="igBase:XamMenu">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="MenuOrientation" Value="Vertical" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin"
                Value="0,1" />
        <Setter Property="HierarchicalItemTemplate">
            <Setter.Value>
                <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource filterMenuCustom}"
                                                 ItemsSource="{Binding Children}">
                    <igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
                        <igBase:HierarchicalDataTemplate DefaultItemsContainer="{StaticResource filterMenuCustom}"
                                                         ItemsSource="{Binding Children}">
                        </igBase:HierarchicalDataTemplate>
                    </igBase:HierarchicalDataTemplate.HierarchicalItemTemplate>
                </igBase:HierarchicalDataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--____________________________________ FilterSelectionControl ______________________________________________________-->

    <Style TargetType="igPrim:FilterSelectionControl">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="11,0,0,0"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource Office2010CheckBoxStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterSelectionControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionBoxStates">
                                <VisualState x:Name="ShowSelectionBox" />
                                <VisualState x:Name="HideSelectionBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="itemsBox" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionBoxWaterMark">
                                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                                <VisualState x:Name="HideSelectionBoxWaterMark" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                           Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AppendButtonVisibility">
                                <VisualState x:Name="ShowAppendFilterButton" />
                                <VisualState x:Name="HideAppendFilterButton" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="AppendFiltersCheckBox"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">

                            <Grid>
                                <Grid.RowDefinitions>
                                    <!-- ClearFilters -->
                                    <RowDefinition Height="Auto" MinHeight="22"/>

                                    <!-- CustomFilterDialog -->
                                    <RowDefinition Height="Auto" />

                                    <!-- The filter text box -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- HorizontalRule -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- SelectAll Checkbox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- Append filter checkbox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- FilterSelectionValues -->
                                    <RowDefinition Height="*" />

                                    <!-- SelectionButtons -->
                                    <RowDefinition Height="Auto"/>

                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <!-- LeftVerticalBackground -->
                                    <ColumnDefinition MinWidth="24" MaxWidth="24"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- LeftVerticalBackground -->
                                <Border HorizontalAlignment="Left" Width="26" Grid.RowSpan="7" VerticalAlignment="Stretch" CornerRadius="2,0,0,0" Background="#FFF2F4F5"/>

                                <!-- ClearFilters Control -->
                                <Button Grid.ColumnSpan="2" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Path
												x:Name="clearFilterGlyphStroke"
												Width="11"
												Height="8"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="#FFFFFFFF"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphAdorner"
												HorizontalAlignment="Center"
												VerticalAlignment="Bottom"
												Height="4"
												Width="5"
												Stretch="Fill"
												Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Margin="10,4,0,0"/>
                                        </Grid>
                                        <Rectangle Fill="Transparent" Grid.Column="1"></Rectangle>
                                        <TextBlock  HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0"/>
                                    </Grid>
                                </Button>

                               

                                <!-- CustomFilterDialog Control -->
                                <igBase:XamMenu x:Name="filtersMenu"
										    HorizontalAlignment="Stretch"
                                            MenuOrientation="Vertical"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                            MinHeight="22"
                                            DefaultItemsContainer="{StaticResource RootFilterMenuCustom}"
                                            ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                            Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                            Style="{StaticResource FilterMenuXamMenuStyle}">
				                                <igBase:XamMenu.Resources>
				                                    <Style TargetType="CheckBox"
				                                            BasedOn="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />
				                                </igBase:XamMenu.Resources>
				                            </igBase:XamMenu>
 								
								 <CheckBox x:Name="hasFilterCheckBox"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />

                                <igPrim:FilterTextBoxWatermarked
                                FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                HorizontalAlignment="Stretch"
                                Grid.Row="2"
                                Margin="8,7,6,1"
                                Grid.Column="1"
                                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                ></igPrim:FilterTextBoxWatermarked>

                                <!-- HorizontalRule -->
                                <Rectangle x:Name="SelectAllCheckBoxSeperator"
                                       Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" Margin="8,7,0,0" Grid.Row="3" Grid.Column="1"/>

                                <!-- SelectAll Checkbox -->
                                <CheckBox x:Name="SelectAllCheckBox" Style="{StaticResource Office2010CheckBoxStyle}" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0"/>

                                <CheckBox x:Name="AppendFiltersCheckBox"
                                          Grid.Row="5"
                                          Grid.Column="1"
                                          Margin="8,7,0,0"
					  Style="{StaticResource Office2010CheckBoxStyle}"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilterText}"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AppendFilters, Mode=TwoWay}"
                                          />

                                <!-- FilterSelectionValues -->
                                <TextBlock x:Name="ItemsBoxWatermark"
                                    HorizontalAlignment="Center"
                                    Grid.Row="6"
                                    Grid.Column="1"
                                    Foreground="Silver"
                                    Margin="8,7,6,6"
                                    Padding="0"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}"
                                    />

                                <CheckBox Grid.Row="6"
                                      Grid.Column="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Top"
                                      IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Margin="0,8,0,0"
                                      Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />

                                <ListBox x:Name="itemsBox"
										 Style="{StaticResource Office2010FilterSelectionListBox}"
                                         ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                                         MinHeight="169"
                                         Grid.Row="6"
                                         Grid.Column="1"
                                         Margin="8,7,6,7"
                                         Padding="0"
                                         MinWidth="200"
                                         Background="Transparent">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Content="{Binding ContentString}" IsThreeState="False" Style="{StaticResource Office2010CheckBoxStyle}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                                <!-- Separator -->

                                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2"/>

                                <!-- SelectionButtons -->
                                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="7" Margin="0,7,6,7" Grid.Column="1">
                                    <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" Style="{StaticResource Office2010Button}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}" Style="{StaticResource Office2010Button}">
                                        <igBase:Commanding.Command>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:Commanding.Command>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ClearFiterTxtbxWatermarkButton" TargetType="Button">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button_Hover}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Button_Disabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Bd" CornerRadius="0,2,2,0" BorderBrush="#FF476B8B" BorderThickness="1" Background="{StaticResource Button_Normal}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:FilterTextBoxWatermarked">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterTextBoxWatermarked">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="WaterMarks">
                                <VisualState x:Name="ShowWaterMark"></VisualState>
                                <VisualState x:Name="HideWaterMark">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Duration="00:00:00.0010000"
                                           Storyboard.TargetName="Watermark"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                    Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ClearButtonStates">
                                <VisualState x:Name="ShowClearButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ClearButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideClearButton"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" Height="14" Width="14" HorizontalAlignment="Right" Margin="0,0,7,0" VerticalAlignment="Center">
                            <Viewbox>
                                <Grid>
                                    <Path Data="M19.869999,34.438999 L28.593,44.078999 L8.7229996,62.127998 L0,52.488998 z M41.877007,5.999999 C35.006012,5.9999995 28.87801,10.367 26.630009,16.865 C25.220009,20.938 25.48201,25.315998 27.365009,29.192999 C29.248009,33.07 32.529011,35.98 36.602013,37.389999 C38.31601,37.981998 40.091007,38.283001 41.880009,38.283001 C48.751007,38.283001 54.878006,33.917 57.127007,27.416998 C58.536007,23.344999 58.275009,18.966999 56.392006,15.09 C54.507008,11.213 51.228008,8.302 47.155006,6.8940001 L47.154007,6.8930001 C45.442009,6.2999997 43.666008,5.9999995 41.877007,5.999999 z M41.877007,0 C44.279007,1.4113701E-07 46.720009,0.39400011 49.117008,1.223 C60.669006,5.2199993 66.794014,17.827 62.797009,29.379997 C59.629005,38.535999 51.053009,44.282997 41.880009,44.282997 C39.479008,44.282997 37.036011,43.888996 34.640011,43.059998 C23.087009,39.063 16.962011,26.456999 20.960011,14.903 C24.12801,5.7469997 32.70401,1.4113701E-07 41.877007,0 z" Margin="-0.827,0,0.807,-0.128" Stretch="Fill" UseLayoutRounding="False" Stroke="#FF548CB6" StrokeThickness="0.5">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF677B8A" Offset="1"/>
                                                <GradientStop Color="#FF95A3B0"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Grid>
                            </Viewbox>
                        </Border>
                        <Border BorderThickness="1" Padding="5,0,0,0">
                            <TextBlock x:Name="Watermark" Foreground="Gray" Text="{TemplateBinding Watermark}" Grid.Row="0" VerticalAlignment="Center" />
                        </Border>
                        <igPrim:FilterTextBox x:Name="FilterTextBox"
                    		Background="Transparent"
                    		Grid.Row="0"
                    		HorizontalAlignment="Stretch"
                    		Text="{Binding FilterSelectionControl.FilterText, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    		DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" Padding="3,2,2,2"
                                              >

                            <igBase:Commanding.Command>
                                <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="TextChanged"
                    				CommandType="Filter"
                    				FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                            </igBase:Commanding.Command>
                        </igPrim:FilterTextBox>
                        <Border HorizontalAlignment="Right" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Padding="0" >
                            <Button x:Name="ClearButton" DataContext="{Binding FilterSelectionControl, RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Style="{StaticResource ClearFiterTxtbxWatermarkButton}" Width="17" Margin="0" Visibility="Collapsed">
                                <igBase:Commanding.Command>
                                    <ig:XamGridFilterMenuFilterTextBoxCommandSource EventName="Click"
                    					CommandType="ClearFilterText"
                    					FilterSelectionControl="{Binding SourceElement.DataContext, RelativeSource={RelativeSource Self}}" />
                                </igBase:Commanding.Command>
                                <Viewbox Height="8" Margin="0" Stretch="Fill" Width="8" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path Data="F1 M 53.122,8.510 L 44.610,0.000 L 26.561,18.050 L 8.510,0.000 L 0.000,8.510 L 18.050,26.561 L 0.000,44.611 L 8.510,53.123 L 26.561,35.072 L 44.612,53.123 L 53.122,44.612 L 35.071,26.561 L 53.122,8.510 Z" Stroke="White" StrokeThickness="2" Fill="#FF6C6C6C"/>

                                </Viewbox>
                            </Button>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MaxWidth" Value="Infinity"/>
    </Style>

    <Style TargetType="igPrim:DataBarControl">
        <Setter Property="BarHeight" Value="18"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DataBarControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DataBarDisplay">
                                <VisualState x:Name="UnidirectionalBarLeftToRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnidirectionalBarRightToLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="UnidirectionalDataBarRectangle" Storyboard.TargetProperty="(Grid.Column)" >
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="1">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BidirectionalBar">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="BidirectionalDataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="None"></VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Visibility="Collapsed" x:Name="UnidirectionalDataBar" Height="{TemplateBinding BarHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="UniDataBar" Width="*"></ColumnDefinition>
                                <ColumnDefinition x:Name="UniDataBarSpacer" Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="UnidirectionalDataBarRectangle"	Grid.Column="0"	Fill="{TemplateBinding UnidirectionalDataBarBrush}" />
                        </Grid>
                        <Grid x:Name="BidirectionalDataBar" Visibility="Collapsed"  Height="{TemplateBinding BarHeight}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="BiNegativeColumnSpacer" Width="*"></ColumnDefinition>
                                    <ColumnDefinition x:Name="BiNegativeColumn" Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="1" x:Name="NegativeDataBar" HorizontalAlignment="Stretch" Fill="{TemplateBinding NegativeValueBarBrush}"></Rectangle>
                            </Grid>
                            <Grid Grid.Column="1" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" x:Name="BiPositiveColumn"></ColumnDefinition>
                                    <ColumnDefinition Width="*"  x:Name="BiPositiveColumnSpacer"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" x:Name="PositiveDataBar"  HorizontalAlignment="Stretch" Fill="{TemplateBinding PositiveValueBarBrush}"></Rectangle>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ConditionalFormattingCellControl _____________________________________________________-->
    <Style TargetType="ig:ConditionalFormattingCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="AltBackground" Value="{StaticResource CellItemAltNormalBackgroundBrush}" />
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="NegativeBarBrush" Value="{StaticResource DataBarBidirectionNegativeBrush}"></Setter>
        <Setter Property="BarBrush" Value="{StaticResource DataBarBidirectionPositiveBrush }"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ig:ConditionalFormattingCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AltElem" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cellSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ActiveSelected">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatIcon">
                                <VisualState x:Name="ShowConditionalFormattingIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FormattingIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideConditionalFormattingIcon"></VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatDataDisplay">
                                <VisualState x:Name="ShowData"></VisualState>
                                <VisualState x:Name="HideData">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CellDisplay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ConditionalFormatDataBar">
                                <VisualState x:Name="HideDataBar"></VisualState>
                                <VisualState x:Name="ShowDataBar">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DataBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding AltBackground}" Visibility="Collapsed" x:Name="AltElem"/>
                        <Border x:Name="cellSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="3" Visibility="Collapsed" Grid.ColumnSpan="2"/>

                        <igPrim:DataBarControl
							Grid.ColumnSpan="2"
							Margin="1"
							DataBarDirection="{TemplateBinding BarDirection}"
							PositiveValueBarBrush="{TemplateBinding BarBrush}"
							NegativeValueBarBrush="{TemplateBinding NegativeBarBrush}"
							BarPercentage="{TemplateBinding BarPercentage}"
							DataBarPositiveNegative="{TemplateBinding BarPositiveOrNegative}"
							Visibility="Collapsed"
							x:Name="DataBar"/>

                        <ContentControl x:Name="FormattingIcon" Visibility="Collapsed" ContentTemplate="{TemplateBinding Icon}" VerticalAlignment="Center"></ContentControl>
                        <ContentPresenter Grid.Column="1" x:Name="CellDisplay"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooserDialog CloseBtn _______________________________________________-->
    <Style x:Key="ColumnChooserDialogCloseBtn" TargetType="Button">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="2" BorderBrush="#FF9B3D3D" BorderThickness="1" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0" Color="#FFff8482"/>
                                            <GradientStop Offset="0.20" Color="#FFff8482"/>
                                            <GradientStop Offset="1" Color="#FFe36162"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border x:Name="border" BorderThickness="1" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#00f87a79" Offset="0"/>
                                        <GradientStop Color="#fff87a79" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Grid x:Name="grid" Visibility="Collapsed">
                                    <Rectangle RadiusX="1" RadiusY="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFda6163"/>
                                                        <GradientStop Offset="0.10" Color="#FFf27776"/>
                                                        <GradientStop Offset="0.85" Color="#FFf27776"/>
                                                        <GradientStop Offset="1" Color="#FFda6163"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <Rectangle RadiusY="1" RadiusX="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="#FFda6163"/>
                                                        <GradientStop Offset="0.10" Color="#00f27776"/>
                                                        <GradientStop Offset="0.85" Color="#00f27776"/>
                                                        <GradientStop Offset="1" Color="#FFda6163"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Grid>
                            </Border>
                        </Border>
                        <ContentControl x:Name="contentControl" Foreground="#FF000000">
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </ContentControl>
                        <Border x:Name="DisabledVisualElement" Background="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" CornerRadius="0,0,0,4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnChooserDialog _____________________________________________________-->
    <Style TargetType="igPrim:ColumnChooserDialog">
        <Setter Property="Background" Value="{StaticResource ColumnChooserDialogBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ColumnChooserDialogBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MaxHeight" Value="225"/>
        <Setter Property="Padding" Value="0,0,0,5"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnChooserDialog">
                    <Grid>
                        <Popup x:Name="Popup">
                            <Grid MaxHeight="{TemplateBinding MaxHeight}" x:Name="RootElement" >
                                <Border   BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}"   CornerRadius="3">
                                    <Border.Effect>
                                        <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="15" Opacity="0.6"/>
                                    </Border.Effect>
                                </Border>
                                <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  BorderBrush="Transparent"   CornerRadius="3">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <!-- HEADER CAPTION -->
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="HeaderElem" Background="{StaticResource HeaderNormalBackgroundBrush}" BorderBrush="{StaticResource HeaderNormalBorderBrush}" BorderThickness="0,0,0,1" Grid.ColumnSpan="2" CornerRadius="2,2,0,0">
                                                <TextBlock Foreground="{TemplateBinding Foreground}" Text="{Binding ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Margin="5,0"/>
                                            </Border>
                                            <Button Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource ColumnChooserDialogCloseBtn}" VerticalAlignment="Center" Margin="5,0" Cursor="Hand">
                                                <igBase:Commanding.Command>
                                                    <ig:XamGridColumnChooserCommandSource EventName="Click" CommandType="Close"/>
                                                </igBase:Commanding.Command>
                                                <Path Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Width="12" Fill="#E4FFFFFF" Stretch="Fill" Stroke="#FF525565" Data="M0.5,0.5 L4.5178828,0.5 L6.0620003,3.125 L7.4936447,0.5 L11.5,0.5 L11.5,1.5476431 L8.7425003,6.1201854 L11.5,10.359666 L11.5,11.5 L7.4941902,11.5 L6.0620003,8.8740005 L4.5172949,11.5 L0.5,11.5 L0.5,10.43379 L3.3059995,6.1201582 L0.5,1.4676378 L0.5,0.5 z"/>
                                            </Button>
                                        </Grid>

                                        <!-- LABELS -->
                                        <Grid x:Name="labels" Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="dragHandleColumn" Width="25"/>
                                                <ColumnDefinition x:Name="viewLabel" Width="35"/>
                                                <ColumnDefinition x:Name="columnLabel" Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{TemplateBinding ViewLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            <TextBlock Text="{TemplateBinding ColumnLabelText}" Foreground="{TemplateBinding Foreground}" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Margin="9,0"/>
                                            <Rectangle x:Name="labelAreaSeparator" Height="1" Fill="{StaticResource HeaderNormalBorderBrush}" VerticalAlignment="Bottom" Grid.Row="1" Grid.ColumnSpan="3"/>
                                        </Grid>

                                        <!-- ITEMS -->
                                        <Grid Grid.Row="2">
                                            <igPrim:GridSortableListBox IsSortable="{Binding IsSortable, RelativeSource={RelativeSource TemplatedParent}}" ItemsSource="{Binding Columns, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" BorderThickness="0" Margin="{TemplateBinding Padding}" Style="{StaticResource Office2010ListBox}">
                                                <igPrim:GridSortableListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="35"/>
                                                                <!-- This column width is equal width to the "labels" grid column "viewLabel" -->
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <CheckBox IsEnabled="{Binding IsHideable}" IsChecked="{Binding Visibility, Mode=TwoWay, Converter={StaticResource VisToBool}}" HorizontalAlignment="Center"/>
                                                            <TextBlock Grid.Column="1" Text="{Binding DisplayNameResolved}" Margin="6,0"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </igPrim:GridSortableListBox.ItemTemplate>
                                                <igPrim:GridSortableListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical"></StackPanel>
                                                    </ItemsPanelTemplate>
                                                </igPrim:GridSortableListBox.ItemsPanel>
                                            </igPrim:GridSortableListBox>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GridSortableListBoxItem">
        <Setter Property="Padding" Value="4,4,20,4" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBoxItem">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <!-- This column width is equal width to the "labels" grid column "dragHandleColumn" -->
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DragHandle" Background="Transparent" BorderBrush="{StaticResource HeaderNormalBorderBrush}" BorderThickness="0,0,1,0"  Cursor="Hand">
                                <Grid>
                                    <Rectangle Width="1" Fill="#7FFFFFFF" HorizontalAlignment="Right"/>
                                    <Path
					                    Height="11"
					                    Width="6"
					                    Data="M 4,9 C4,9 4,11 4,11 4,11 6,11 6,11 6,11 6,9 6,9 6,9 4,9 4,9 zM 0,9 C0,9 0,11 0,11 0,11 2,11 2,11 2,11 2,9 2,9 2,9 0,9 0,9 zM 4,6 C4,6 4,8 4,8 4,8 6,8 6,8 6,8 6,6 6,6 6,6 4,6 4,6 zM 0,6 C0,6 0,8 0,8 0,8 2,8 2,8 2,8 2,6 2,6 2,6 0,6 0,6 zM 4,0 C4,0 4,2 4,2 4,2 6,2 6,2 6,2 6,0 6,0 6,0 4,0 4,0 zM 4,3 C4,3 4,5 4,5 4,5 6,5 6,5 6,5 6,3 6,3 6,3 4,3 4,3 zM 0,3 C0,3 0,5 0,5 0,5 2,5 2,5 2,5 2,3 2,3 2,3 0,3 0,3 zM 0,0 C0,0 0,2 0,2 0,2 2,2 2,2 2,2 2,0 2,0 2,0 0,0 0,0 z"
					                    Fill="{StaticResource GridBorderBrush}"/>
                                </Grid>
                            </Border>
                            <Grid Grid.Column="1">
                                <ContentPresenter
                                        x:Name="contentPresenter"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"/>
                            </Grid>
                            <Popup x:Name="Popup"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GroupCellControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupCellControl">
                    <igPrim:GroupColumnPanel x:Name="Panel" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GroupHeaderCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="{StaticResource HeaderNormalBackgroundBrush}"   />
        <Setter Property="Foreground" Value="{StaticResource HeaderNormalForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource HeaderNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GroupHeaderCellControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid x:Name="Bd">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition ></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenLeftAdjacentColumnsElement" Grid.Column="0">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ToolTipService.ToolTip>
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Border Background="Transparent" Width="10">
                                            <Rectangle Fill="{StaticResource FocusBrush}" Width="3" HorizontalAlignment="Left"/>
                                        </Border>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Grid>
                                        <Border x:Name="ColumnChooserBd" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupBorderBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="25"  MaxWidth="25"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" BorderBrush="#FFE2E4E7" BorderThickness="0,0,1,0" />
                                                <ListBox DataContext="{x:Null}" ItemsSource="{Binding Cell.ColumnsHiddenToLeft, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <igBase:Commanding.Commands>
                                                        <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                        <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                    </igBase:Commanding.Commands>
                                                </ListBox>
                                                <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                    <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource CellItemNormalBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                    <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                        <igBase:Commanding.Commands>
                                                            <igBase:CommandSourceCollection>
                                                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                            </igBase:CommandSourceCollection>
                                                        </igBase:Commanding.Commands>
                                                        <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderNormalForegroundBrush}"/>
                                                    </Button>
                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </igPrim:HeaderDropDownControl>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Grid
								Grid.Column="2"
								x:Name="SortAndPinIndicators"
								HorizontalAlignment="Right"
								Margin="0,0,5,0"
								Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Style="{StaticResource HeaderDropDownButtonStyle}" x:Name="PinnedIndicator" Grid.Column="1" Visibility="Collapsed" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
										Width="7"
										Height="10"
										Data="M 6,4 C6,4 8,4 8,4 8,4 8,9 8,9 8,9 6,9 6,9 6,9 6,4 6,4 zM 5,3 C5,3 5,9 5,9 5,9 4,9 4,9 4,9 4,10 4,10 4,10 7,10 7,10 7,10 7,13 7,13 7,13 8,13 8,13 8,13 8,10 8,10 8,10 11,10 11,10 11,10 11,9 11,9 11,9 10,9 10,9 10,9 10,3 10,3 10,3 5,3 5,3 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
											Stretch="Fill"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Unfix" EventName="MouseLeftButtonDown">
                                                </ig:XamGridColumnCommandSource>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                    <Button x:Name="UnpinnedIndicator" Visibility="Collapsed" Style="{StaticResource HeaderDropDownButtonStyle}" Grid.Column="1" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
										Width="10"
										Height="7"
										Data="M 12,7 C12,7 12,9 12,9 12,9 7,9 7,9 7,9 7,7 7,7 7,7 12,7 12,7 zM 13,6 C13,6 7,6 7,6 7,6 7,5 7,5 7,5 6,5 6,5 6,5 6,8 6,8 6,8 3,8 3,8 3,8 3,9 3,9 3,9 6,9 6,9 6,9 6,12 6,12 6,12 7,12 7,12 7,12 7,11 7,11 7,11 13,11 13,11 13,11 13,6 13,6 z"
										Fill="{StaticResource HeaderCellGlyphBrush}"
										Stretch="Fill"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Fix" EventName="MouseLeftButtonDown">
                                                </ig:XamGridColumnCommandSource>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                    <igPrim:HeaderDropDownControl x:Name="SummaryHeaderDropDownControl" Background="Transparent" Visibility="Collapsed" Grid.Column="0">
                                        <igPrim:HeaderDropDownControl.OpenButtonContent>
                                            <Path
											Data="M 0,0 C0,0 5,0 5,0 5,0 5,1 5,1 5,1 2,1 2,1 2,1 4,3.5 4,3.5 4,3.5 2,6 2,6 2,6 5,6 5,6 5,6 5,7 5,7 5,7 0,7 0,7 0,7 0,6 0,6 0,6 2,3.5625 2,3.5625 2,3.5625 0,1 0,1 0,1 0,0 0,0 z"
											Fill="{StaticResource HeaderCellGlyphBrush}"
											Width="5"
											Height="7"
											x:Name="summarySigmaIcon"
											StrokeThickness="0"/>
                                        </igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <igPrim:SummarySelectionControl Cell="{Binding Path=Cell,RelativeSource={RelativeSource TemplatedParent}}"></igPrim:SummarySelectionControl>
                                    </igPrim:HeaderDropDownControl>
                                    <Button x:Name="VisibilityToggleButton" Style="{StaticResource HeaderDropDownButtonStyle}" Visibility="Collapsed" Grid.Column="2" Width="20">
                                        <Grid Background="Transparent">
                                            <Path
				                        Width="8"
				                        Height="7"
				                        Data="M 7,0 C7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 5,4 5,4 5,4 5,5 5,5 5,5 6,5 6,5 6,5 6,6 6,6 6,6 7,6 7,6 7,6 7,7 7,7 7,7 8,7 8,7 8,7 8,5 8,5 8,5 7,5 7,5 7,5 7,4 7,4 7,4 6,4 6,4 6,4 6,3 6,3 6,3 7,3 7,3 7,3 7,2 7,2 7,2 8,2 8,2 8,2 8,0 8,0 8,0 7,0 7,0 zM 0,3 C0,3 0,4 0,4 0,4 1,4 1,4 1,4 1,5 1,5 1,5 2,5 2,5 2,5 2,6 2,6 2,6 3,6 3,6 3,6 3,7 3,7 3,7 4,7 4,7 4,7 4,6 4,6 4,6 4,5 4,5 4,5 3,5 3,5 3,5 3,4 3,4 3,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,2 3,2 3,2 4,2 4,2 4,2 4,1 4,1 4,1 4,0 4,0 4,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,2 2,2 2,2 1,2 1,2 1,2 1,3 1,3 1,3 0,3 0,3 z"
				                        Fill="{StaticResource HeaderCellGlyphBrush}"/>
                                            <igBase:Commanding.Command>
                                                <ig:XamGridColumnCommandSource CommandType="Hide" EventName="MouseLeftButtonDown"/>
                                            </igBase:Commanding.Command>
                                        </Grid>
                                    </Button>
                                </Grid>
                                <igPrim:HeaderDropDownControl Padding="0" Visibility="Collapsed" x:Name="HiddenRightAdjacentColumnsElement" Grid.Column="4">
                                    <ToolTipService.ToolTip>
                                        <ToolTip Content="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.HiddenColumnIndicatorToolTipText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ToolTipService.ToolTip>
                                    <igPrim:HeaderDropDownControl.OpenButtonContent>
                                        <Border Background="Transparent" Width="10">
                                            <Rectangle Fill="{StaticResource FocusBrush}" Width="3" HorizontalAlignment="Right"/>
                                        </Border>
                                    </igPrim:HeaderDropDownControl.OpenButtonContent>
                                    <Grid>
                                        <Border x:Name="ColumnChooserBdRight" MaxHeight="200" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource FocusBrush}" BorderThickness="1" CornerRadius="3" Padding="1">
                                            <Border.Effect>
                                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition MinWidth="25" MaxWidth="25"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="2" BorderBrush="#FFE2E4E7" BorderThickness="0,0,1,0" />
                                                <ListBox DataContext="{x:Null}"  ItemsSource="{Binding Cell.ColumnsHiddenToRight, RelativeSource={RelativeSource TemplatedParent}}" Background="Transparent" BorderThickness="0" Padding="0" Margin="0" Grid.ColumnSpan="2" ItemContainerStyle="{StaticResource ColumnChooserPopupItemStyle}">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding DisplayNameResolved}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                    <igBase:Commanding.Commands>
                                                        <igBase:CommandSourceCollection>
                                                            <ig:XamGridColumnCommandSource ParameterBinding="{Binding SelectedItem}" EventName="SelectionChanged" CommandType="Show"/>
                                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="SelectionChanged"/>
                                                        </igBase:CommandSourceCollection>
                                                    </igBase:Commanding.Commands>
                                                </ListBox>
                                                <StackPanel Background="Transparent" Grid.Row="1" Grid.ColumnSpan="2">
                                                    <Path Data="M132,227 L443,227" Width="165"  Height="1" Stroke="{StaticResource CellItemNormalBorderBrush}" StrokeThickness="1" HorizontalAlignment="Right" StrokeDashArray="2 2" Stretch="Fill" Margin="33,0,0,0"/>
                                                    <Button Margin="0,1,0,0" Style="{StaticResource ColumnChooserDialogBtn}">
                                                        <igBase:Commanding.Commands>
                                                            <igBase:CommandSourceCollection>
                                                                <ig:XamGridColumnChooserCommandSource CommandType="Open" EventName="Click"/>
                                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"/>
                                                            </igBase:CommandSourceCollection>
                                                        </igBase:Commanding.Commands>
                                                        <TextBlock Text="{Binding Cell.Column.ColumnLayout.Grid.ColumnChooserSettings.ColumnChooserDisplayText, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{StaticResource HeaderNormalForegroundBrush}"/>
                                                    </Button>

                                                </StackPanel>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </igPrim:HeaderDropDownControl>
                            </Grid>
                        </Border>
                        <igPrim:GroupColumnPanel x:Name="Panel" Grid.Row="1" Cell="{Binding Cell, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="SortAndPinIndicators"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderHoverBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Moving">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="NormalFill" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="Bd"
												Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{StaticResource HeaderMovingBackgroundBrush}">
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedIndicatorStates">
                                <VisualState x:Name="NotFixable"/>
                                <VisualState x:Name="Pinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unpinned">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UnpinnedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="VisibilityIconStates">
                                <VisualState x:Name="VisibilityIconHidden"/>
                                <VisualState x:Name="VisibilityIconVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="VisibilityToggleButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="LeftAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenLeftAdjacentColumns"/>
                                <VisualState x:Name="HiddenLeftAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenLeftAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RightAdjacentColumnHiddenStates">
                                <VisualState x:Name="NoHiddenRightAdjacentColumns"/>
                                <VisualState x:Name="LastVisibleColumnWithHiddenRightAdjacentColumns">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HiddenRightAdjacentColumnsElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ ColumnLayoutTemplateCellControl _____________________________________________________-->
    <Style TargetType="igPrim:ColumnLayoutTemplateCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource CellItemNormalBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:ColumnLayoutTemplateCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="rowSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ActiveSelected" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" x:Name="Root"/>
                        <Border x:Name="rowSelected" Background="{StaticResource CellItemSelectedBackgroundBrush}"  Visibility="Collapsed" Margin="{TemplateBinding BorderThickness}"/>
                        <Border x:Name="ActiveSelected" BorderBrush="{StaticResource CellItemSelectedBorderBrush}" BorderThickness="1" Visibility="Collapsed"/>
                        <ContentPresenter   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--__________________________________ MergedSummaryCellControl _____________________________________________________-->
    <Style TargetType="igPrim:MergedSummaryCellControl">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="{StaticResource SummaryRowBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource CellItemNormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="Padding" Value="7,3"/>
        <Setter Property="SummaryDisplayTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding SummaryDefinition.SummaryOperand.RowDisplayLabelResolved}" />
                        <TextBlock Text=" = "/>
                        <TextBlock Text="{Binding Converter={StaticResource SDFormatStringConverter}}"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:MergedSummaryCellControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Alternate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="NotSelected"/>
                                <VisualState x:Name="Selected"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="InActive" />
                                <VisualState x:Name="Active">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="ActiveRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FixedStates">
                                <VisualState x:Name="Fixed"/>
                                <VisualState x:Name="Unfixed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AddNewRowElem" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Rectangle Height="1" VerticalAlignment="Top" Fill="#7FFFFFFF"/>
                        </Border>
                        <Rectangle Fill="Transparent" Stroke="{StaticResource CellItemSelectedBorderBrush}" StrokeThickness="1" x:Name="ActiveRect" Visibility="Collapsed"></Rectangle>
                        <StackPanel x:Name="SummaryDisplay" HorizontalAlignment="Right" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <igPrim:DateFilterHierarchicalDataTemplate x:Key="dateTreeDataTemplate" ItemsSource="{Binding Children}">
        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
            <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                    <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}"  Content="{Binding ContentString}"></CheckBox>
                        <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                            <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                                <igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                                    <igPrim:DateFilterHierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}" Style="{StaticResource Office2010CheckBoxStyle}" Content="{Binding ContentString}"></CheckBox>
                                    </igPrim:DateFilterHierarchicalDataTemplate>
                                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                            </igPrim:DateFilterHierarchicalDataTemplate>
                        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
                    </igPrim:DateFilterHierarchicalDataTemplate>
                </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
            </igPrim:DateFilterHierarchicalDataTemplate>
        </igPrim:DateFilterHierarchicalDataTemplate.ItemTemplate>
    </igPrim:DateFilterHierarchicalDataTemplate>

    <igPrim:DateFilterTypeConverter x:Key="dateFilterTypeConverter"></igPrim:DateFilterTypeConverter>

    <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
        <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation" X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5" />
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4" />
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3" />
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2" />

            <Border Background="#FFDC000C" CornerRadius="2">
                <TextBlock UseLayoutRounding="false" Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
            </Border>
        </Grid>
    </ControlTemplate>

<Style TargetType="igPrim:DateFilterTreeViewItem">
        <Setter Property="Padding" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Margin" Value="0 1 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DateFilterTreeViewItem">
                    <Grid Background="{x:Null}">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal" />
                				<VisualState x:Name="MouseOver" />
                				<VisualState x:Name="Pressed" />
                				<VisualState x:Name="Disabled">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Foreground" Duration="0">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<SolidColorBrush Color="#FF999999" />
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="SelectionStates">
                				<VisualState x:Name="Unselected" />
                				<VisualState x:Name="Selected">
                					<Storyboard>
                						<DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="SelectedInactive">
                					<Storyboard>
                						<DoubleAnimation Storyboard.TargetName="Selection" Storyboard.TargetProperty="Opacity" Duration="0" To=".2" />
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="HasItemsStates">
                				<VisualState x:Name="HasItems" />
                				<VisualState x:Name="NoItems">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="ExpanderButton"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Collapsed</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ExpansionStates">
                				<VisualState x:Name="Collapsed" />
                				<VisualState x:Name="Expanded">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="ItemsHost"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="ValidationStates">
                				<VisualState x:Name="Valid" />
                				<VisualState x:Name="InvalidUnfocused">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="Validation"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="InvalidFocused">
                					<Storyboard>
                						<ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                							Storyboard.TargetName="Validation"
                							Storyboard.TargetProperty="(UIElement.Visibility)">
                							<DiscreteObjectKeyFrame KeyTime="00:00:00">
                								<DiscreteObjectKeyFrame.Value>
                									<Visibility>Visible</Visibility>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationToolTip" Storyboard.TargetProperty="IsOpen">
                							<DiscreteObjectKeyFrame KeyTime="0">
                								<DiscreteObjectKeyFrame.Value>
                									<System:Boolean>True</System:Boolean>
                								</DiscreteObjectKeyFrame.Value>
                							</DiscreteObjectKeyFrame>
                						</ObjectAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Grid.RowDefinitions>
                			<RowDefinition Height="Auto" />
                			<RowDefinition Height="*" />
                		</Grid.RowDefinitions>
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="15" />
                			<ColumnDefinition Width="*" />
                		</Grid.ColumnDefinitions>

                		<ToggleButton x:Name="ExpanderButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False" >
                			<ToggleButton.Template>
                				<ControlTemplate TargetType="ToggleButton">
                					<Grid x:Name="Root" Background="Transparent">
                						<VisualStateManager.VisualStateGroups>
                							<VisualStateGroup x:Name="CommonStates">
                								<VisualState x:Name="Normal" />
                								<VisualState x:Name="MouseOver">
                									<Storyboard>
                										<ColorAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="(Path.Stroke).Color" To="#FF1BBBFA" Duration="0" />
                									</Storyboard>
                								</VisualState>
                								<VisualState x:Name="Disabled">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To=".7" Duration="0" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                							<VisualStateGroup x:Name="CheckStates">
                								<VisualState x:Name="Unchecked" />
                								<VisualState x:Name="Checked">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="UncheckedVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0" />
                										<DoubleAnimation Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                						</VisualStateManager.VisualStateGroups>
                						<Grid HorizontalAlignment="Right" Margin="2 2 5 2">
                							<Path x:Name="UncheckedVisual" Width="6" Height="9" Fill="#FFFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Right" Data="M 0,0 L 0,9 L 5,4.5 Z" StrokeThickness="1" StrokeLineJoin="Miter" Stroke="#FF989898"/>
                							<Path x:Name="CheckedVisual" Opacity="0" Width="6" Height="6" Fill="#FF262626" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M 6,0 L 6,6 L 0,6 Z" StrokeLineJoin="Miter" />
                						</Grid>
                					</Grid>
                				</ControlTemplate>
                			</ToggleButton.Template>
                		</ToggleButton>
                		<Border x:Name="Selection" Background="{StaticResource ItemSelectedCenterFill}" BorderBrush="{StaticResource ItemSelectedOuterBorderFill}" CornerRadius="2" BorderThickness="1" Opacity="0" Grid.Column="1" IsHitTestVisible="False">
                			<Rectangle Stroke="{StaticResource ItemSelectedHighlightFill}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                		</Border>
                		<Button x:Name="Header" Grid.Column="1" ClickMode="Hover" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsTabStop="False" >
                			<Button.Template>
                				<ControlTemplate TargetType="Button">
                					<Grid Background="{TemplateBinding Background}">
                						<VisualStateManager.VisualStateGroups>
                							<VisualStateGroup x:Name="CommonStates">
                								<VisualState x:Name="Normal" />
                								<VisualState x:Name="Pressed">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Hover" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                									</Storyboard>
                								</VisualState>
                								<VisualState x:Name="Disabled">
                									<Storyboard>
                										<DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                									</Storyboard>
                								</VisualState>
                							</VisualStateGroup>
                						</VisualStateManager.VisualStateGroups>
                						<Border x:Name="Hover" Background="{StaticResource ItemHottrackCenterFill}" BorderBrush="{StaticResource ItemHottrackOuterBorderFill}" BorderThickness="1" Opacity="0" CornerRadius="1" />
                						<ContentPresenter x:Name="Content" Cursor="{TemplateBinding Cursor}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" />
                					</Grid>
                				</ControlTemplate>
                			</Button.Template>
                			<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" />
                		</Button>
                		<ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
                	</Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--____________________________________ DateFilterSelectionControl ______________________________________________________-->
    <Style TargetType="igPrim:DateFilterSelectionControl">
        <Setter Property="Background" Value="{StaticResource PopupBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}"/>
        <Setter Property="DateFilterHierarchicalDataTemplate" Value="{StaticResource dateTreeDataTemplate}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="11,0,0,0"/>
        <Setter Property="CheckBoxStyle" Value="{StaticResource Office2010CheckBoxStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:DateFilterSelectionControl">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="SelectionBoxStates">
                                <VisualState x:Name="ShowSelectionBox" />
                                <VisualState x:Name="HideSelectionBox">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="SelectAllCheckBoxSeperator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetName="ItemsBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionBoxWaterMark">
                                <VisualState x:Name="ShowSelectionBoxWaterMark" />
                                <VisualState x:Name="HideSelectionBoxWaterMark" >
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                           Storyboard.TargetName="ItemsBoxWatermark" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AppendButtonVisibility">
                                <VisualState x:Name="ShowAppendFilterButton" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="AppendFiltersCheckBox"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideAppendFilterButton" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Border.Effect>
                                <DropShadowEffect Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.35"/>
                            </Border.Effect>
                        </Border>

                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Padding="1">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <!-- ClearFilters -->
                                    <RowDefinition Height="Auto" MinHeight="22"/>

                                    <!-- CustomFilterDialog -->
                                    <RowDefinition Height="Auto" />

                                    <!-- Filter TextBox -->
                                    <RowDefinition Height="Auto" />

                                    <!-- HorizontalRule -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- SelectAll Checkbox -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- Append filter checkbox -->
                                    <RowDefinition Height="Auto"/>

                                    <!-- FilterSelectionValues -->
                                    <RowDefinition Height="*" />

                                    <!-- SelectionButtons -->
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <!-- LeftVerticalBackground -->
                                    <ColumnDefinition MinWidth="24" MaxWidth="24"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- LeftVerticalBackground -->
                                <Border Grid.RowSpan="7" Background="{StaticResource FilterSelectionVerticalBrush}"/>

                                <!-- ClearFilters Control -->
                                <Button x:Name="clearButton" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Style="{StaticResource FilterSelectionItemStyle}" Padding="0">
                                    <igBase:Commanding.Commands>
                                        <igBase:CommandSourceCollection>
                                            <ig:FilterSelectionControlCommandSource CommandType="ClearSelectedItems" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                            <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                        </igBase:CommandSourceCollection>
                                    </igBase:Commanding.Commands>
                                    <Grid Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Path
												x:Name="clearFilterGlyphStroke"
												Width="11"
												Height="8"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 11,0 11,0 11,0 7,4 7,4 7,4 7,8 7,8 7,8 4,8 4,8 4,8 4,4 4,4 4,4 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphFill"
												Width="7"
												Height="6"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												Data="M 0,0 C0,0 7,0 7,0 7,0 4,3 4,3 4,3 4,6 4,6 4,6 3,6 3,6 3,6 3,3 3,3 3,3 0,0 0,0 z"
												Fill="#FFFFFFFF"
												Stretch="Fill"/>
                                            <Path
												x:Name="clearFilterGlyphAdorner"
												HorizontalAlignment="Center"
												VerticalAlignment="Bottom"
												Height="4"
												Width="5"
												Stretch="Fill"
												Opacity="1"
												Data="M 0,0 C0,0 0,1 0,1 0,1 1,1 1,1 1,1 1,3 1,3 1,3 0,3 0,3 0,3 0,4 0,4 0,4 2,4 2,4 2,4 2,3 2,3 2,3 3,3 3,3 3,3 3,4 3,4 3,4 5,4 5,4 5,4 5,3 5,3 5,3 4,3 4,3 4,3 4,1 4,1 4,1 5,1 5,1 5,1 5,0 5,0 5,0 3,0 3,0 3,0 3,1 3,1 3,1 2,1 2,1 2,1 2,0 2,0 2,0 0,0 0,0 z"
												Fill="{StaticResource HeaderCellGlyphBrush}"
												Margin="10,4,0,0"/>
                                        </Grid>
                                        <Rectangle Fill="Transparent" Grid.Column="1"></Rectangle>
                                        <TextBlock  HorizontalAlignment="Stretch" Text="{TemplateBinding ClearFiltersTextResolved}" Grid.Column="1" Margin="8,0,6,0"/>
                                    </Grid>
                                </Button>

                               

                                <!-- CustomFilterDialog Control -->
                                <igBase:XamMenu HorizontalAlignment="Stretch"
											MenuOrientation="Vertical"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                            MinHeight="22"
                                            DefaultItemsContainer="{StaticResource RootFilterMenuCustom}"
                                            ItemsSource="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuOperands, RelativeSource={RelativeSource TemplatedParent}}"
                                            Tag="{Binding Path=Cell, RelativeSource={RelativeSource TemplatedParent}}"
                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                            Style="{StaticResource FilterMenuXamMenuStyle}">
                                    <igBase:XamMenu.Resources>
                                        <Style TargetType="CheckBox"
                                               BasedOn="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />
                                    </igBase:XamMenu.Resources>
                                </igBase:XamMenu>
								
								  <CheckBox x:Name="hasFilterCheckBox"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Visibility="{Binding Path=Cell.Column.FilterColumnSettings.FilterMenuCustomFilteringButtonVisibilityResolved, RelativeSource={RelativeSource TemplatedParent}}"
                                          IsChecked="{Binding Path=HasFilters, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}" />

                                <Grid Grid.Row="2" Grid.Column="1" Margin="7,7,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"></ColumnDefinition>
                                        <ColumnDefinition Width="80"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    
									<igPrim:FilterTextBoxWatermarked FilterSelectionControl="{Binding RelativeSource={RelativeSource TemplatedParent}}"									
                                                                 HorizontalAlignment="Stretch"																
                                                                 Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Converter={StaticResource dateFilterTypeConverter}}"                                    
																 IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"    >
                                    </igPrim:FilterTextBoxWatermarked>
                                    
									<ComboBox x:Name="dateFilterType" Grid.Column="1"
											Style="{StaticResource DateFilterComboBoxStyle}"																																
											Margin="5,0,5,0"
                                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterTypeList}"
                                            DisplayMemberPath="Name"

                                            IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ItemSourceSet}"
                                            SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DateFilterObjectTypeItem, Mode=TwoWay}"
                                          />
                                </Grid>

                                <!-- HorizontalRule -->
                                <Rectangle x:Name="SelectAllCheckBoxSeperator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" Margin="7,7,7,0" Grid.Row="3" Grid.Column="1"/>

                                <!-- SelectAll Checkbox -->
                                <CheckBox x:Name="SelectAllCheckBox" Style="{StaticResource Office2010CheckBoxStyle}" Grid.Row="4" Grid.Column="1" Margin="8,7,0,0"/>

                                <CheckBox x:Name="AppendFiltersCheckBox"
                                          Visibility="Collapsed"
                                          Grid.Row="5"
                                          Grid.Column="1"
                                          Margin="8,7,0,0"
					  Style="{StaticResource Office2010CheckBoxStyle}"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                            Path=AppendFilterText}"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                              Path=AppendFilters,
                                                              Mode=TwoWay}"
                                          />

                                <TextBlock x:Name="ItemsBoxWatermark"
                                    HorizontalAlignment="Center"
                                    Grid.Row="6"
                                    Grid.Column="1"
                                    Foreground="Silver"
                                    Margin="8,7,6,0"
                                    Padding="0"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterBoxNoDataAvailable}"
                                    />
								
								<CheckBox Grid.Row="6"
                                          Grid.Column="0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Top"
                                          IsChecked="{Binding Path=HasCheckedItems, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}"
                                          Margin="0,8,0,0" />


                                <!-- FilterSelectionValues -->
                                <igPrim:DateFilterTreeView ItemTemplate="{TemplateBinding DateFilterHierarchicalDataTemplate}"
                                          x:Name="ItemsBox"
                                          ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FilterableUniqueValues}"
                                          MinHeight="169"
                                          Grid.Row="6"
                                          Grid.Column="1"
                                          Margin="8,7,6,7"
                                          Padding="0"
                                          Background="Transparent"
										  BorderBrush="{StaticResource SeparatorBrush}"
                                          >
                                	<igPrim:DateFilterTreeView.Resources>
                                		<Style TargetType="ScrollViewer" BasedOn="{StaticResource Office2010ScrollViewer}" />		                       	
									</igPrim:DateFilterTreeView.Resources>
                                </igPrim:DateFilterTreeView>

                                <!-- Separator -->

                                <Rectangle x:Name="ButtonsSeparator" Height="1" Fill="#FFC9CACA" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="1,0" Grid.Row="8" Grid.ColumnSpan="2"/>

                                <!-- SelectionButtons -->
                                <StackPanel x:Name="selectionButtons" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="7" Margin="0,7,6,7" Grid.Column="1">
                                    <Button x:Name="AcceptButton" Margin="0,0,5,0" Width="73" Content="{TemplateBinding OKButtonText}" Style="{StaticResource Office2010Button}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <ig:FilterSelectionControlCommandSource CommandType="AcceptChanges" EventName="Click"></ig:FilterSelectionControlCommandSource>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                    <Button x:Name="CancelButton" Width="73" Content="{TemplateBinding CancelButtonText}" Style="{StaticResource Office2010Button}">
                                        <igBase:Commanding.Commands>
                                            <igBase:CommandSourceCollection>
                                                <igPrim:XamGridPopupCommandSource CommandType="ClosePopup" EventName="Click"></igPrim:XamGridPopupCommandSource>
                                            </igBase:CommandSourceCollection>
                                        </igBase:Commanding.Commands>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="igPrim:GridSortableListBox">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:GridSortableListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border CornerRadius="2"
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" >
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Placement="Right"
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <System:Boolean>true</System:Boolean>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--__________________________________ FilterMenu Item Styles _____________________________________________________-->

    <Style TargetType="igPrim:FilterMenuXamMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="#FF00FF27" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="igPrim:FilterMenuXamMenuItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard x:Name="MouseOverStoryboard" >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Highlighted">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled" >
                                    <Storyboard >
                                        <DoubleAnimation From="1" To=".3" Duration="0"
                                                         Storyboard.TargetName="MenuItemPresenter"
                                                         Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SubmenuState">

                                <VisualState x:Name="SubmenuOpen">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuOpenImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="1.0"
                                                         BeginTime="0:0:0" Duration="0:0:0.15"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuClose">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuCloseImmediately">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PopupBorder"
                                                         Storyboard.TargetProperty="Opacity" To="0.01"
                                                         BeginTime="0:0:0" Duration="0:0:0.1"/>

                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="MenuItemRole">
                                <VisualState x:Name="TopLevelHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelHeaderWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames  Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>10,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="TopLevelItemWithIcon">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="IconPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>Auto</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                            Storyboard.TargetName="ChildIndicatorPlace"
                                            Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0" >
                                                <DiscreteObjectKeyFrame.Value>
                                                    <GridLength>0</GridLength>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0"
                                                                       Storyboard.TargetName="HeaderCheckboxPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>4,3,0,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuHeader">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetName="ArrowPanel"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="SubmenuItem">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000"
                                                                       Storyboard.TargetName="HeaderPresenter"
                                                                       Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>5,3,25,3</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="IsSeperatorItem">
                                <VisualState x:Name="IsNotSeperator"/>
                                <VisualState x:Name="IsSeperator">
                                    <Storyboard >
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Seperator" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>

                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MenuItem" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState >
                            </VisualStateGroup >

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Seperator" Visibility="Collapsed">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="OrientationState">
                                    <VisualState x:Name="Horizontal"/>
                                    <VisualState x:Name="Vertical">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VertitalContainer"
                                                                       Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border  Name="HorizontalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="29,2,2,2" Height="1"/>
                            <Border  Name="VertitalContainer" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource MenuSeparatorLine}" Background="{TemplateBinding Background}" Margin="2" Width="1" Visibility="Collapsed"/>
                        </Grid>
                        <Grid x:Name="MenuItem">
                            <Rectangle x:Name="SelectedIndicator"
						                                Fill="{StaticResource MenuItemMouseOver}"
						                                Stroke="{StaticResource MenuItemMouseOverBorder}"
						                                Visibility="Collapsed"
						                                Grid.ColumnSpan="3"
						                                HorizontalAlignment="Stretch"
						                                RadiusX="1"
						                                RadiusY="1"
						                                Margin="1"/>
                            <Rectangle x:Name="HighlightedIndicator"
											             Fill="{StaticResource MenuItemHighlighted}"
											             Stroke="{StaticResource MenuItemHighlightedBorder}"
											             Visibility="Collapsed"
											             Grid.ColumnSpan="3"
											             HorizontalAlignment="Stretch"
											             RadiusX="1"
											             RadiusY="1"
											             Margin="1"/>

                            <!-- MenuItemPresenter - presentes the content of the menu item. -->
                            <ContentPresenter x:Name="MenuItemPresenter"
                                                Visibility="Visible"
                                                Opacity="1">
                                <ContentPresenter.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27" />
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="ChildIndicatorPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <!--<Rectangle x:Name="innerStroke" StrokeThickness="1" Stroke="#59ffffff" Margin="1" Grid.ColumnSpan="3" Visibility="Collapsed" RadiusX="1"
						                        RadiusY="1"/>-->
                                        <!-- Icon presenter-->
                                        <ContentControl x:Name="HeaderIconPresenter"
                                                          Height="16"
                                                          Width="16"
                                                          Visibility="{TemplateBinding IconVisibilityResolved}"
                                                          Content="{TemplateBinding Icon}"
                                                          Margin="4,3,4,3"/>

                                        <!-- Checkbox presenter-->
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter"
                                                          Margin="4,3,4,3"
                                                          HorizontalAlignment="Right"
                                                          VerticalAlignment="Center"
                                                          Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <ContentPresenter.Content>
                                                <CheckBox IsTabStop="False" IsHitTestVisible="False" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" Style="{StaticResource MenuItemCheckMarkCheckBoxStyle}"/>
                                            </ContentPresenter.Content>
                                        </ContentPresenter>

                                        <!-- Header presenter-->
                                        <Grid Grid.Column="1" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="HeaderPresenter"
													            Margin="5,3,5,3"
													            Content="{TemplateBinding Header}"
													            ContentTemplate="{TemplateBinding HeaderTemplate}"
													            Grid.Column="0"
													            VerticalAlignment="Center"/>

                                            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="5,3,2,3" Foreground="Black"/>
                                        </Grid>

                                        <!-- Arrow indicator presenter-->
                                        <Grid Grid.Column="2"
										          x:Name="ArrowPanel"
										          VerticalAlignment="Center"
										          HorizontalAlignment="Center"
										          Visibility="Collapsed">
                                            <Path
										            Fill="Black"
										            x:Name="ArrowPanelPath"
										            VerticalAlignment="Center"
										            Margin="7,0,7,0"
										            Data="M0,0 L0,8 L4,4 z"/>
                                        </Grid>

                                    </Grid>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>
                        <Popup x:Name="Popup" >
                            <Grid Background="{StaticResource MenuItemBackgroundBrush}">
                                <Border x:Name="PopupBorder" Opacity="0.01"
                                        Background="{StaticResource MenuItemBackgroundBrush}"
                                        BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="1">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="{StaticResource MenuItemVerticalBrush}"
                                                Width="27"  HorizontalAlignment="Left"/>
                                        <ScrollViewer x:Name="ScrollViewer"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto" Grid.ColumnSpan="2"
                                                  Style="{StaticResource Office2010ScrollViewer}">

                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>