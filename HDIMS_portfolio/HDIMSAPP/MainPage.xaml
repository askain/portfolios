<UserControl
    x:Class="HDIMSAPP.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:HDIMSAPP.Common"
    xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation" 
    xmlns:uriMapper="clr-namespace:System.Windows.Navigation;assembly=System.Windows.Controls.Navigation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
    xmlns:primitives="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="700" x:Name="MainUC" Width="Auto" Height="Auto" Loaded="MainUC_Loaded">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="MenuBackground" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="#FFFFFFFF"/>
                <GradientStop Offset="0.48" Color="#FFF2F4F5"/>
                <GradientStop Offset="1" Color="#FFCFD5DA"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MenuPopupOuterBorderBrush" StartPoint="0.5,0" EndPoint="0.5,0.1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0" Color="#FFa2adb8"/>
                    <GradientStop Offset="0.379" Color="#FF8498a8"/>
                    <GradientStop Offset="0.379" Color="#FF718496"/>
                    <GradientStop Offset="1" Color="#FF617583"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="MenuItemVerticalBrush" Color="#FFF2F4F5"/>
        <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
        <Style x:Key="MenuHeaderStyling" TargetType="ig:XamMenuItem">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ig:XamMenuItem">
                        <Grid Background="{TemplateBinding Background}">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard x:Name="MouseOverStoryboard">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#3F7BC4"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Highlighted">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#3F7BC4"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation
												Duration="0"
												From="1"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="Opacity"
												To=".3"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SubmenuState">
                                    <vsm:VisualState x:Name="SubmenuOpen">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="1.0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuOpenImmediately">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="1.0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuClose">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuCloseImmediately">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="MenuItemRole">
                                    <vsm:VisualState x:Name="TopLevelHeader">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="10,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelHeaderWithIcon">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelItem">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="10,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelItemWithIcon">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuHeader">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="5,3,25,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuItem">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="5,3,25,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid Margin="30,0,0,0">
                                <Border
									x:Name="SelectedIndicator"
									HorizontalAlignment="Stretch"
									Margin="0"
									Background="Transparent"
									CornerRadius="5,5,5,5"
									Visibility="Collapsed"/>
                                <Border
									x:Name="HighlightedIndicator"
									HorizontalAlignment="Stretch"
									Margin="0"
									Background="Transparent"
									CornerRadius="5,5,0,0"
									Visibility="Collapsed"/>
                                <ContentControl
									x:Name="MenuItemPresenter"
									FontFamily="{TemplateBinding FontFamily}"
									FontSize="{TemplateBinding FontSize}"
									FontStretch="{TemplateBinding FontStretch}"
									Foreground="#454545"
									HorizontalContentAlignment="Stretch"
									Opacity="1"
									Visibility="Visible">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="IconPlace" Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition x:Name="TumbPlace" Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
											x:Name="HeaderIconPresenter"
											Width="16"
											Height="16"
											Margin="4,3,4,3"
											Content="{TemplateBinding Icon}"
											Visibility="{TemplateBinding IconVisibilityResolved}"/>
                                        <ContentPresenter
											x:Name="HeaderCheckboxPresenter"
											HorizontalAlignment="Right"
											Margin="4,3,4,3"
											VerticalAlignment="Center"
											Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" IsHitTestVisible="False"/>
                                        </ContentPresenter>
                                        <Grid Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter
												x:Name="HeaderPresenter"
												Grid.Column="0"
												Margin="5,3,5,3"
												VerticalAlignment="Center"
												Content="{TemplateBinding Header}"
												ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                                            <TextBlock
												Grid.Column="1"
												Margin="8,3,2,3"
												VerticalAlignment="Center"
												Text="{TemplateBinding InputGestureText}"/>
                                        </Grid>
                                        <Grid
											x:Name="ArrowPanel"
											Grid.Column="2"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Visibility="Collapsed">
                                            <Path
												x:Name="ArrowPanelPath"
												Margin="7,0,7,0"
												VerticalAlignment="Center"
												Data="M0,0 L0,8 L4,4 z"
												Fill="White"/>
                                        </Grid>
                                    </Grid>
                                </ContentControl>
                            </Grid>
                            <Popup x:Name="Popup">
                                <Border x:Name="PopupBorder" Background="#3F7BC4" BorderThickness="0"
									CornerRadius="5" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform X="-68"/>
                                        </TransformGroup>
                                    </Border.RenderTransform>
                                    <Grid>
                                        <!--<Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="#FFF58324"/>-->
                                        <ScrollViewer x:Name="ScrollViewer"  Grid.ColumnSpan="2" Margin="0,0,0,0"
											Background="Transparent" BorderThickness="0" HorizontalScrollBarVisibility="Auto"
											Padding="0" RenderTransformOrigin="0.5,0.5" VerticalScrollBarVisibility="Auto">
                                            <ScrollViewer.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </ScrollViewer.RenderTransform>
                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ChildrenStyling" TargetType="ig:XamMenuItem">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="IsEnabled" Value="True"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ig:XamMenuItem">
                        <Grid Background="{TemplateBinding Background}">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal"/>
                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard x:Name="MouseOverStoryboard">
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#3F7BC4"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Highlighted">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightedIndicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="00:00:00" Value="#3F7BC4"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation
												Duration="0"
												From="1"
												Storyboard.TargetName="MenuItemPresenter"
												Storyboard.TargetProperty="Opacity"
												To=".3"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SubmenuState">
                                    <vsm:VisualState x:Name="SubmenuOpen">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="1.0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuOpenImmediately">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="1.0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuClose">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuCloseImmediately">
                                        <Storyboard>
                                            <DoubleAnimation
												BeginTime="0:0:0"
												Duration="0:0:0.15"
												Storyboard.TargetName="PopupBorder"
												Storyboard.TargetProperty="Opacity"
												To="0"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="MenuItemRole">
                                    <vsm:VisualState x:Name="TopLevelHeader">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="10,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelHeaderWithIcon">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelItem">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="10,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="TopLevelItemWithIcon">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="IconPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Auto"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="TumbPlace" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="0"
												Duration="0"
												Storyboard.TargetName="HeaderCheckboxPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="4,3,0,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuHeader">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ArrowPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="25,3,25,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="SubmenuItem">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
												BeginTime="00:00:00"
												Duration="00:00:00.001"
												Storyboard.TargetName="HeaderPresenter"
												Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="25,3,25,3"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Border
									x:Name="SelectedIndicator"
									HorizontalAlignment="Stretch"
									Margin="2"
									Background="White"
									CornerRadius="2"
									Visibility="Collapsed"/>
                                <Border
									x:Name="HighlightedIndicator"
									HorizontalAlignment="Stretch"
									Margin="2"
									Background="White"
									CornerRadius="2"
									Visibility="Collapsed"/>
                                <ContentControl
									x:Name="MenuItemPresenter"
									FontFamily="{TemplateBinding FontFamily}"
									FontSize="{TemplateBinding FontSize}"
									FontStretch="{TemplateBinding FontStretch}"
									Foreground="White"
									HorizontalContentAlignment="Center"
									Opacity="1"
									Visibility="Visible">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <!--<ColumnDefinition x:Name="IconPlace" Width="27"/>-->
                                            <ColumnDefinition Width="*"/>
                                            <!--<ColumnDefinition x:Name="TumbPlace" Width="22"/>-->
                                        </Grid.ColumnDefinitions>
                                        <!--<ContentPresenter
											x:Name="HeaderIconPresenter"
											Width="16"
											Height="16"
											Margin="4,3,4,3"
											Content="{TemplateBinding Icon}"
											Visibility="{TemplateBinding IconVisibilityResolved}"/>
                                        <ContentPresenter x:Name="HeaderCheckboxPresenter" HorizontalAlignment="Right" 
											Margin="4,3,4,3"
											VerticalAlignment="Center"
											Visibility="{TemplateBinding CheckBoxVisibilityResolved}">
                                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}" IsHitTestVisible="False"/>
                                        </ContentPresenter>-->
                                        <Grid Grid.Column="0">
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>-->
                                            <TextBlock x:Name="HeaderPresenter" Grid.Column="0"  Margin="30,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"
												Text="{TemplateBinding Header}"/>
                                            <!--
                                            <ContentPresenter x:Name="HeaderPresenter" Grid.Column="0" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"
												Content="{TemplateBinding Header}"
												ContentTemplate="{TemplateBinding HeaderTemplate}" Cursor="Hand"/>
                                            -->
                                            <!--<TextBlock Grid.Column="1" Margin="0,0,0,0" VerticalAlignment="Center"
												Text="{TemplateBinding InputGestureText}"/>-->
                                        </Grid>
                                        <!--<Grid x:Name="ArrowPanel" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                                            <Path x:Name="ArrowPanelPath" Margin="7,0,7,0" VerticalAlignment="Center" Data="M0,0 L0,8 L4,4 z" Fill="Black"/>
                                        </Grid>-->
                                    </Grid>
                                </ContentControl>
                            </Grid>
                            <Popup x:Name="Popup">
                                <Border
									x:Name="PopupBorder"
									Background="#FFFF0000"
									BorderBrush="{StaticResource MenuPopupOuterBorderBrush}"
									BorderThickness="0"
									CornerRadius="30"
                                    Height="30"
									Opacity="0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="27"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Background="#FFF58324"/>
                                        <ScrollViewer
											x:Name="ScrollViewer"
											Width="300"
											Grid.ColumnSpan="2"
											Margin="0"
											Background="Transparent"
											BorderThickness="0"
											HorizontalScrollBarVisibility="Auto"
											Padding="0"
											VerticalScrollBarVisibility="Auto">
                                            <ItemsPresenter Grid.ColumnSpan="2"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HyperlinkStyle" TargetType="HyperlinkButton">
            <!--<Setter Property="Background" Value=""/>-->
            <!--{StaticResource HighLightColorBrush}"/>-->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="#FF9D9492"/>
            <Setter Property="Foreground" Value="Black"/>
            <!--{StaticResource NavigationForegroundColorBrush}"/>-->
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="MinHeight" Value="28"/>
            <Setter Property="MinWidth" Value="78"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <Grid x:Name="ButtonGrid" Cursor="{TemplateBinding Cursor}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.95"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="10"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveElementBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.8"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.BlurRadius)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="InteractiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <HorizontalAlignment>Center</HorizontalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <VerticalAlignment>Center</VerticalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <HorizontalAlignment>Center</HorizontalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <VerticalAlignment>Center</VerticalAlignment>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="LinkStates">
                                    <VisualState x:Name="ActiveLink">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ActiveBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InactiveLink"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.35"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusX)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(Rectangle.RadiusY)">
                                                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="FocusVisualElement" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1"/>
                            <Border x:Name="ActiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="0"/>
                            <Border x:Name="ContentBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Opacity="1">
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="1">
                                    <ContentPresenter.Effect>
                                        <DropShadowEffect ShadowDepth="0" Color="#FF484848" Opacity="0.65" BlurRadius="0"/>
                                    </ContentPresenter.Effect>
                                </ContentPresenter>
                            </Border>
                            <Border x:Name="InteractiveBorder" MinWidth="{TemplateBinding MinWidth}" MinHeight="{TemplateBinding MinHeight}" Background="{StaticResource HoverHyperLinkBackgroundColorBrush}" BorderThickness="1,1,1,1" Opacity="0" BorderBrush="{StaticResource HoverHyperLinkBackgroundColorBrush}" CornerRadius="1,1,1,1"/>
                            <Border x:Name="InteractiveElementBorder" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                                <TextBlock x:Name="InteractiveElement" Foreground="{StaticResource HoverHyperlinkForegroundColorBrush}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"/>
                            </Border>
                            <TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Foreground="#FFAAAAAA" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <RadialGradientBrush x:Key="ContentAreaBg" Center="0.500,0.5" GradientOrigin="0.500,0.5" RadiusX="0.500" RadiusY="0.500">
            <RadialGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0" Color="#FFffffff"/>
                    <GradientStop Offset="1" Color="#FFFAFAFA"/>
                </GradientStopCollection>
            </RadialGradientBrush.GradientStops>
        </RadialGradientBrush>
        <SolidColorBrush x:Key="NavigationGroupHeaderNormalTextFillKey" Color="#FF333333"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderHottrackTextFillKey" Color="#FF333333"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderActiveTextFillKey" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderNormalCenterFillKey" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderHottrackCenterFillKey" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderPressedCenterFillKey" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderActiveHottrackCenterFillKey" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderActiveCenterFillKey" Color="#FFF9F9F9"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderInnerStrokeFillKey" Color="#59FFFFFF"/>
        <SolidColorBrush x:Key="NavigationGroupHeaderFocusFillKey" Color="#FF6DBDD1"/>
        <Style x:Key="GroupHeaderStyle" TargetType="igPrim:SelectedGroupHeader">
            <Setter Property="Background" Value="#FFFFFFFF"/>
            <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="HorizontalSplitterStyleKey" TargetType="Thumb">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid VerticalAlignment="Stretch" Height="6" Background="White">
                            <Rectangle Height="4" Stroke="#FFCCCCCC" StrokeDashArray="2" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="overflowStyle" TargetType="igPrim:GroupOverflowArea">
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        
        <Style x:Key="navigationPanelBg" TargetType="ToggleButton">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Padding" Value="0,55,0,0" />
        </Style>
        <SolidColorBrush x:Key="GlyphThemeBackgroundFillKey" Color="Transparent"/>
        <LinearGradientBrush x:Key="GlyphThemeForegroundFillKey" StartPoint="0,0" EndPoint="0,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#4EBFE9" Offset="0"/>
                    <GradientStop Color="#4EBFE9" Offset="0.37"/>
                    <GradientStop Color="#4EBFE9" Offset="0.3701"/>
                    <GradientStop Color="#4EBFE9" Offset="1"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="miniToggleStyle" TargetType="ToggleButton">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid x:Name="glyphArea" 
		                Width="25"
		                Height="25"
                          Margin="0,0,3,0" Background="Transparent">
                            <Grid x:Name="glyph">
                                <Path x:Name="glyph1bg"
			                Margin="4,0,0,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z"
			                Fill="{StaticResource GlyphThemeBackgroundFillKey}" />
                                <Path x:Name="glyph2bg"
			                Margin="0,0,5,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="9"
			                Width="6.5"
			                Stretch="Fill"
			                Opacity="1"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z"
			                Fill="{StaticResource GlyphThemeBackgroundFillKey}" />
                                <Path x:Name="glyph1"
			                Margin="4,0,-8,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="14"
			                Width="7.5"
			                Stretch="Fill"
			                Opacity="5"
			                Data="M 8.5,7 C8.5,7 4,3.5 4,3.5 4,3.5 8.5,0 8.5,0 8.5,0 8.5,2 8.5,2 8.5,2 6.5,3 6.5,3 6.5,3 6.5,4 6.5,4 6.5,4 8.5,5 8.5,5 8.5,5 8.5,7 8.5,7 z"
			                Fill="{StaticResource GlyphThemeForegroundFillKey}" />
                                <Path x:Name="glyph2"
			                Margin="0,0,5,0"
			                HorizontalAlignment="Center"
			                VerticalAlignment="Center"
			                Height="14"
			                Width="7.5"
			                Stretch="Fill"
			                Opacity="5"
			                Data="M 4.5,7 C4.5,7 0,3.5 0,3.5 0,3.5 4.5,0 4.5,0 4.5,0 4.5,2 4.5,2 4.5,2 2.5,3 2.5,3 2.5,3 2.5,4 2.5,4 2.5,4 4.5,5 4.5,5 4.5,5 4.5,7 4.5,7 z"
			                Fill="{StaticResource GlyphThemeForegroundFillKey}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SelectedGroupHeaderStyle" TargetType="igPrim:SelectedGroupHeader">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Height" Value="50px" />
        </Style>
        
        <Style x:Key="OBStyle" TargetType="ig:XamOutlookBar">
            <Setter Property="NavigationPaneToggleButtonStyle" Value="{StaticResource navigationPanelBg}" />
            <Setter Property="MinimizeToggleButtonStyle" Value="{StaticResource miniToggleStyle}" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="#646464"/>
            <Setter Property="HorizontalSplitterStyle" Value="{StaticResource HorizontalSplitterStyleKey}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ig:XamOutlookBar">
                        <Border x:Name="root" VerticalAlignment="Stretch" CornerRadius="0,10,0,0">
                            <Grid VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Column="1"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                    <Grid x:Name="MainGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*" MinHeight="{TemplateBinding SelectedAreaMinHeight}"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0"/>
                                            <RowDefinition Height="0" MinHeight="0"/>
                                        </Grid.RowDefinitions>
                                        <igPrim:SelectedGroupHeader x:Name="SelectedGroupHeader" FontWeight="Bold" Foreground="#636363" FontSize="14" VerticalAlignment="Center"  Style="{StaticResource SelectedGroupHeaderStyle}" />
                                        <igPrim:SelectedGroupContent x:Name="SelectedGroupContent" Grid.Row="1" />
                                        <Thumb
                                            x:Name="Splitter"
                                            Grid.Row="2"
                                            Margin="0,1,0,1"
                                            Background="Transparent"
                                            Cursor="SizeNS"
                                            Style="{TemplateBinding HorizontalSplitterStyle}"/>
                                        <ItemsControl x:Name="NavigationArea" Grid.Row="3">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Top" Orientation="Vertical"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                        <igPrim:GroupOverflowArea x:Name="OverflowArea" Grid.Row="4" Style="{StaticResource overflowStyle}"/>
                                        <Canvas>
                                            <ig:XamDialogWindow
                                                x:Name="NavigationPaneOptionsWindow"
                                                Header="{Binding RelativeSource={RelativeSource Self}, Path=StringsSettings.StringSettings.NavigationPaneOptionsDialogTitle}"
                                                HorizontalContentAlignment="Stretch"
                                                IsResizable="False"
                                                MaximizeButtonVisibility="Collapsed"
                                                MinimizeButtonVisibility="Collapsed"
                                                StartupPosition="Center"
                                                VerticalContentAlignment="Stretch"
                                                WindowState="Hidden">
                                                <igPrim:NavigationPaneOptionsControl/>
                                            </ig:XamDialogWindow>
                                        </Canvas>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot"  Style="{StaticResource LayoutRootGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" x:Name="NavigationGrid" Style="{StaticResource NavigationGridStyle}">
            <Border  Style="{StaticResource ContentBorderStyle}">
                <Grid x:Name="HeaderGrid" >
                    <Grid.Background> 
                        <ImageBrush Stretch="Fill" ImageSource="/HDIMSAPP;component/Images/menu_bg.png"></ImageBrush>
                    </Grid.Background>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" x:Name="BrandingStackPanel" Style="{StaticResource BrandingStackPanelStyle}">
                        <Image Source="/HDIMSAPP;component/Images/logom.png" Margin="10,0,0,0" />
                        <TextBlock x:Name="ApplicationNameTextBlock" Margin="10,0,0,0" Width="320" TextWrapping="NoWrap"
                                Text="실시간 수문자료 품질관리 시스템(HDIMS)" FontSize="16" VerticalAlignment="Center" FontWeight="Bold" Foreground="#FF1F7BCF" />
                        <ig:XamMenu x:Name="TopMenu" Margin="10,0,0,0"
                                HorizontalAlignment="Stretch"  
                                VerticalAlignment="Center" 
                                Background="Transparent"
			                    ExpandOnHover="True"
			                    MenuOrientation="Horizontal">
                        </ig:XamMenu>
                    </StackPanel>
                    <StackPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Click="RequestAuthBtn_Click" BorderBrush="Transparent" BorderThickness="0" Margin="0,0,10,0" Cursor="Hand" Name="RequestAuthBtn">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/HDIMSAPP;component/Images/shield--pencil.png" Margin="0,0,10,0"/>
                                <TextBlock Text="자료수정 권한요청"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center">
                        <Button Click="SaveAsHomeBtn_Click" BorderBrush="Transparent" BorderThickness="0" Margin="0,0,10,0" Cursor="Hand" Name="SaveAsHomeBtn">
                            <StackPanel Orientation="Horizontal" Margin="0">
                                    <Image Source="/HDIMSAPP;component/Images/star.png" Margin="0,0,10,0"/>
                                <TextBlock Text="기본페이지로 저장"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" >
                        <Button Click="LogOutBtn_Click" BorderBrush="Transparent" BorderThickness="0" Margin="0,0,10,0" Cursor="Hand">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/HDIMSAPP;component/Images/user--arrow.png" Margin="0,0,10,0"/>
                                <TextBlock Text="로그아웃"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Row="1" x:Name="SubLayoutRoot">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230" x:Name="LeftMenu"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ig:XamOutlookBar x:Name="LeftOutlookBar" Width="230" MinimizedWidth="30" SelectedAreaMinHeight="500" 
                    AllowMinimized="True" HorizontalAlignment="Left"
                    IsMinimized="True"
                    Style="{StaticResource OBStyle}" 
                    NavigationPaneMinimized="LeftOutlookBar_NavigationPaneMinimized"
                    NavigationPaneExpanded="LeftOutlookBar_NavigationPaneExpanded" 
                    SelectedGroupPopupOpening="LeftOutlookBar_SelectedGroupPopupOpening"
                    ShowToolTips="False" 
                    ShowGroupHeaderAsToolTip="False" 
                    ReserveSpaceForLargeImage="False" 
                    UseLayoutRounding="False" VerticalAlignment="Top">
                <ig:XamOutlookBar.StringSettings>
                    <ig:StringSettings NavigationPaneMinimizedText="HDIMS MENU"/>
                </ig:XamOutlookBar.StringSettings>
                <ig:OutlookBarGroup Key="hdimsMenuBar" Header="HDIMS MENU" IsSelected="True" Visibility="Visible">
                    <ig:XamDataTree x:Name="LeftMenuTree" ActiveNodeChanged="LeftMenuTree_ActiveNodeChanged" Cursor="Hand">
                        <ig:XamDataTree.SelectionSettings>
                            <ig:TreeSelectionSettings NodeSelection="Single" />
                        </ig:XamDataTree.SelectionSettings>
                        <ig:XamDataTree.GlobalNodeLayouts>
                            <ig:NodeLayout Key="LeftMenuLayout" TargetTypeName="MenuModel" DisplayMemberPath="text">
                                <ig:NodeLayout.ExpandedIconTemplate>
                                    <DataTemplate>
                                        <Image Source="/HDIMSAPP;component/Images/folder-open.png"/>
                                    </DataTemplate>
                                </ig:NodeLayout.ExpandedIconTemplate>
                                <ig:NodeLayout.CollapsedIconTemplate>
                                    <DataTemplate>
                                        <Image Source="/HDIMSAPP;component/Images/folder.png"/>
                                    </DataTemplate>
                                </ig:NodeLayout.CollapsedIconTemplate>
                            </ig:NodeLayout>
                        </ig:XamDataTree.GlobalNodeLayouts>
                    </ig:XamDataTree>
                </ig:OutlookBarGroup>
            </ig:XamOutlookBar>
            <Border Grid.Column="1" x:Name="ContentBorder" >
                <navigation:Frame x:Name="ContentFrame" Source="/Home" Style="{StaticResource ContentFrameStyle}" 
                              Navigated="ContentFrame_Navigated" 
                              NavigationFailed="ContentFrame_NavigationFailed"
                              >
                    <navigation:Frame.UriMapper>
                        <uriMapper:UriMapper>
                            <uriMapper:UriMapping Uri="" MappedUri="/Views/Home.xaml"/>
                            <uriMapper:UriMapping Uri="/" MappedUri="/Views/Home.xaml"/>
                            <uriMapper:UriMapping Uri="/Home/{redirectUri}" MappedUri="/Views/Home.xaml?redirectUri={redirectUri}"/>
                            <uriMapper:UriMapping Uri="/{pageName}" MappedUri="/Views/{pageName}.xaml"/>
                            <uriMapper:UriMapping Uri="/{pageName}?BoardCd={BoardCd}" MappedUri="/Views/{pageName}.xaml?BoardCd={BoardCd}"/>
                        </uriMapper:UriMapper>
                    </navigation:Frame.UriMapper>
                </navigation:Frame>
            </Border>
            
        </Grid>
        <Border Grid.Row="2" Width="Auto" BorderBrush="#FF99BCE8" BorderThickness="1" Margin="0" CornerRadius="0">
            <Border.Background>
                <ImageBrush ImageSource="/HDIMSAPP;component/Images/bottom_bg.png" />
            </Border.Background>
            <StackPanel Width="Auto" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                <!--<TextBlock x:Name="FullScreenBtn" Text="전체화면보기"  Margin="0,7,0,0" Height="25" VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonDown="FullScreenBtn_MouseLeftButtonDown"/>
                <Rectangle Height="20" Fill="LightGray" Width="2" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="1" />-->
                <TextBlock x:Name="SchedulerExecutorBtn" Text="스케쥴러실행" Height="25" Margin="10,7,0,0" VerticalAlignment="Center" MouseLeftButtonDown="SchedulerExecutorBtn_MouseLeftButtonDown" Cursor="Hand" Foreground="#eeeeee"/>
                <Rectangle x:Name="SchedulerExecutorBtnSeperator" Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5" />
                <TextBlock x:Name="ViewSiteMapBtn" Text="사이트맵" Height="25" Margin="10,7,0,0" VerticalAlignment="Center" MouseLeftButtonDown="ViewSiteMapBtn_MouseLeftButtonDown" Cursor="Hand" Foreground="#eeeeee"/>
                <Rectangle Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5" />
                <TextBlock x:Name="ViewRadarBtn" Text="레이더영상" Height="25" Margin="10,7,0,0" VerticalAlignment="Center" MouseLeftButtonDown="ViewRadarBtn_MouseLeftButtonDown" Cursor="Hand" Foreground="#eeeeee"/>
                <Rectangle Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5" />
                <TextBlock x:Name="ContactText" Text="관리자님 접속중"  Margin="10,7,0,0" Height="25" VerticalAlignment="Center" Foreground="#eeeeee"/>
                <Rectangle Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5" />
                <TextBlock x:Name="CurrentUserBtn" Text="현 접속자 현황"  Margin="10,7,0,0" Height="25" VerticalAlignment="Center" Cursor="Hand" MouseLeftButtonDown="CurrentUserBtn_MouseLeftButtonDown" Foreground="#eeeeee"/>
                <Rectangle Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5"/>
                <TextBlock x:Name="LogOutBtn" Text="로그아웃"  Margin="10,7,0,0" Height="25"  VerticalAlignment="Center"  Cursor="Hand" MouseLeftButtonDown="LogOutBtn_MouseLeftButtonDown" Foreground="#eeeeee"/>
                <Rectangle Height="15" Fill="LightGray" Width="1" Margin="5,0,0,0" Stroke="LightGray" StrokeThickness="0.5" />
                <TextBlock x:Name="CurrentDateTime" Text=""  Margin="10,7,10,0"  Height="25" VerticalAlignment="Center" Foreground="#eeeeee"/>
            </StackPanel>
        </Border>
        
        <!--<navigation:Frame x:Name="ContentFrame" Source="/Home" 
                              Navigated="ContentFrame_Navigated" 
                              NavigationFailed="ContentFrame_NavigationFailed">
            <navigation:Frame.UriMapper>
                <uriMapper:UriMapper>
                    <uriMapper:UriMapping Uri="" MappedUri="/Views/Home.xaml"/>
                    <uriMapper:UriMapping Uri="/{pageName}" MappedUri="/Views/{pageName}.xaml"/>
                </uriMapper:UriMapper>
            </navigation:Frame.UriMapper>
        </navigation:Frame>-->
    </Grid>
</UserControl>